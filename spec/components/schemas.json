{
    "subscription_tracking_settings": {
        "title": "Settings: Subscription Tracking",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if subscription tracking is enabled."
            },
            "html_content": {
                "type": "string",
                "description": "The information and HTML for your unsubscribe link. "
            },
            "landing": {
                "type": "string",
                "description": "The HTML that will be displayed on the page that your customers will see after clicking unsubscribe, hosted on SendGrid\u2019s server."
            },
            "plain_content": {
                "type": "string",
                "description": "The information in plain text for your unsubscribe link. You should have the \u201c<% %>\u201d tag in your content, otherwise the user will have no URL for unsubscribing."
            },
            "replace": {
                "type": "string",
                "description": "Your custom defined replacement tag for your templates. Use this tag to place your unsubscribe content anywhere in your emailtemplate."
            },
            "url": {
                "type": "string",
                "description": "The URL where you would like your users sent to unsubscribe.",
                "format": "uri"
            }
        }
    },
    "contactdb_recipient_response": {
        "title": "ContactDB: Recipient response",
        "type": "object",
        "properties": {
            "error_count": {
                "type": "number",
                "default": 0,
                "description": "The number of errors found while adding recipients."
            },
            "error_indices": {
                "type": "array",
                "default": [],
                "description": "The indices of the recipient(s) sent that caused the error. ",
                "items": {
                    "type": "number"
                }
            },
            "new_count": {
                "type": "number",
                "default": 0,
                "description": "The count of new recipients added to the contactdb."
            },
            "persisted_recipients": {
                "type": "array",
                "default": [],
                "description": "The recipient IDs of the recipients that already existed from this request.",
                "items": {
                    "type": "string"
                }
            },
            "updated_count": {
                "type": "number",
                "default": 0,
                "description": "The recipients who were updated from this request."
            },
            "errors": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "error_indices": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "required": [
            "error_count",
            "new_count",
            "persisted_recipients",
            "updated_count"
        ],
        "example": {
            "error_count": 1,
            "error_indices": [
                2
            ],
            "new_count": 2,
            "persisted_recipients": [
                "YUBh",
                "bWlsbGVyQG1pbGxlci50ZXN0"
            ],
            "updated_count": 0,
            "errors": [
                {
                    "message": "Invalid email.",
                    "error_indices": [
                        2
                    ]
                }
            ]
        }
    },
    "campaign_response": {
        "title": "Campaigns Response",
        "allOf": [
            {
                "$ref": "./schemas.json#/campaign_request"
            },
            {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of your campaign."
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "status"
                ]
            }
        ]
    },
    "contactdb_segments_conditions": {
        "title": "ContactDB: Segments: Conditions",
        "type": "object",
        "properties": {
            "field": {
                "type": "string"
            },
            "value": {
                "type": "string"
            },
            "operator": {
                "type": "string",
                "enum": [
                    "eq",
                    "ne",
                    "lt",
                    "gt",
                    "contains"
                ]
            },
            "and_or": {
                "type": "string",
                "enum": [
                    "and",
                    "or",
                    ""
                ]
            }
        },
        "required": [
            "field",
            "value",
            "operator"
        ]
    },
    "bounce_response": {
        "title": "Bounce Response",
        "type": "object",
        "properties": {
            "created": {
                "type": "number",
                "description": "The unix timestamp for when the bounce record was created at SendGrid."
            },
            "email": {
                "type": "string",
                "format": "email",
                "description": "The email address that was added to the bounce list."
            },
            "reason": {
                "type": "string",
                "description": "The reason for the bounce. This typically will be a bounce code, an enhanced code, and a description."
            },
            "status": {
                "type": "string",
                "description": "Enhanced SMTP bounce response"
            }
        },
        "example": {
            "created": 1250337600,
            "email": "example@example.com",
            "reason": "550 5.1.1 The email account that you tried to reach does not exist. Please try double-checking the recipient's email address for typos or unnecessary spaces. Learn more at  https://support.google.com/mail/answer/6596 o186si2389584ioe.63 - gsmtp ",
            "status": "5.1.1"
        }
    },
    "contacts": {
        "title": "Contacts",
        "type": "object",
        "properties": {
            "address": {
                "type": "string"
            },
            "address2": {
                "type": "object"
            },
            "city": {
                "type": "string"
            },
            "company": {
                "type": "string"
            },
            "country": {
                "type": "string"
            },
            "email": {
                "type": "string"
            },
            "first_name": {
                "type": "string"
            },
            "last_name": {
                "type": "string"
            },
            "phone": {
                "type": "string"
            },
            "state": {
                "type": "string"
            },
            "zip": {
                "type": "string"
            }
        }
    },
    "reverse_dns": {
        "title": "Reverse DNS",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "description": "The ID of the Reverse DNS."
            },
            "ip": {
                "type": "string",
                "description": "The IP address that this Reverse DNS was created for."
            },
            "rdns": {
                "type": "string",
                "description": "The reverse DNS record for the IP address. This points to the Reverse DNS subdomain."
            },
            "users": {
                "type": "array",
                "description": "The users who are able to send mail from the IP address.",
                "items": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "description": "The username of a user who can send mail from the IP address."
                        },
                        "user_id": {
                            "type": "integer",
                            "description": "The ID of a user who can send mail from the IP address."
                        }
                    },
                    "required": [
                        "username",
                        "user_id"
                    ]
                }
            },
            "subdomain": {
                "type": "string",
                "description": "The subdomain created for this reverse DNS. This is where the rDNS record points."
            },
            "domain": {
                "type": "string",
                "description": "The root, or sending, domain."
            },
            "valid": {
                "type": "boolean",
                "description": "Indicates if this is a valid Reverse DNS."
            },
            "legacy": {
                "type": "boolean",
                "description": "Indicates if this Reverse DNS was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create a new Reverse DNS if you need to update it."
            },
            "last_validation_attempt_at": {
                "type": "integer",
                "description": "A Unix epoch timestamp representing the last time of a validation attempt."
            },
            "a_record": {
                "type": "object",
                "required": [
                    "valid",
                    "type",
                    "host",
                    "data"
                ],
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "description": "Indicates if the a_record is valid."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of DNS record."
                    },
                    "host": {
                        "type": "string",
                        "description": "This is the web address that will be mapped to the IP address."
                    },
                    "data": {
                        "type": "string",
                        "description": "The IP address being set up with Reverse DNS."
                    }
                }
            }
        },
        "required": [
            "id",
            "ip",
            "rdns",
            "users",
            "domain",
            "valid",
            "legacy",
            "a_record"
        ],
        "example": {
            "id": 1,
            "ip": "192.168.1.1",
            "rdns": "o1.email.example.com",
            "users": [
                {
                    "username": "john@example.com",
                    "user_id": 7
                },
                {
                    "username": "jane@example.com",
                    "user_id": 8
                }
            ],
            "subdomain": "email",
            "domain": "example.com",
            "valid": true,
            "legacy": false,
            "a_record": {
                "valid": true,
                "type": "a",
                "host": "o1.email.example.com",
                "data": "192.168.1.1"
            }
        }
    },
    "senderID": {
        "title": "Sender ID",
        "allOf": [
            {
                "$ref": "./schemas.json#/sender-id-request"
            },
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the sender identity."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "If the sender identity is verified or not. Only verified sender identities can be used to send email."
                    },
                    "updated_at": {
                        "type": "integer",
                        "description": "The time the sender identity was last updated."
                    },
                    "created_at": {
                        "type": "integer",
                        "description": "The time the sender identity was created."
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "True when the sender id is associated to a campaign in the Draft, Scheduled, or In Progress status. You cannot update or delete a locked sender identity."
                    }
                }
            },
            {
                "type": "object",
                "required": [
                    "nickname",
                    "address",
                    "city",
                    "country"
                ]
            }
        ],
        "example": {
            "id": 1,
            "nickname": "My Sender ID",
            "from": {
                "email": "from@example.com",
                "name": "Example INC"
            },
            "reply_to": {
                "email": "replyto@example.com",
                "name": "Example INC"
            },
            "address": "123 Elm St.",
            "address_2": "Apt. 456",
            "city": "Denver",
            "state": "Colorado",
            "zip": "80202",
            "country": "United States",
            "verified": true,
            "updated_at": 1449872165,
            "created_at": 1449872165,
            "locked": false
        }
    },
    "contactdb_custom_field": {
        "title": "ContactDB Custom field schema.",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of the field"
            },
            "type": {
                "type": "string",
                "description": "The type of the field.",
                "enum": [
                    "date",
                    "text",
                    "number"
                ]
            }
        },
        "example": {
            "name": "first_name",
            "type": "text"
        }
    },
    "subuser": {
        "title": "List all Subusers for a parent response",
        "type": "object",
        "properties": {
            "disabled": {
                "type": "boolean",
                "description": "Whether or not the user is enabled or disabled."
            },
            "id": {
                "type": "number",
                "description": "The ID of this subuser."
            },
            "username": {
                "type": "string",
                "description": "The name by which this subuser will be referred."
            },
            "email": {
                "type": "string",
                "description": "The email address to contact this subuser.",
                "format": "email"
            }
        },
        "required": [
            "disabled",
            "id",
            "username",
            "email"
        ],
        "example": {
            "disabled": false,
            "email": "example@example.com",
            "id": 1234,
            "username": "example_subuser"
        }
    },
    "mail_settings_address_whitelabel": {
        "title": "Mail Settings: Address Whitelabel",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if you have an email address whitelist enabled. "
            },
            "list": {
                "type": "array",
                "description": "All email addresses that are currently on the whitelist.",
                "items": {
                    "type": "string"
                }
            }
        },
        "example": {
            "enabled": true,
            "list": [
                "email1@example.com",
                "example.com"
            ]
        }
    },
    "link_branding_200_response": {
        "title": "Link Branding 200 Response",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "description": "The ID of the branded link."
            },
            "domain": {
                "type": "string",
                "description": "The root domain of the branded link."
            },
            "subdomain": {
                "type": "string",
                "description": "The subdomain used to generate the DNS records for this link branding. This subdomain must be different from the subdomain used for your authenticated domain."
            },
            "username": {
                "type": "string",
                "description": "The username of the account that this link branding is associated with."
            },
            "user_id": {
                "type": "integer",
                "description": "The ID of the user that this link branding is associated with."
            },
            "default": {
                "type": "boolean",
                "description": "Indicates if this is the default link branding.",
                "enum": [
                    true,
                    false
                ]
            },
            "valid": {
                "type": "boolean",
                "description": "Indicates if this link branding is valid.",
                "enum": [
                    true,
                    false
                ]
            },
            "legacy": {
                "type": "boolean",
                "description": "Indicates if this link branding was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create new link branding if you need to update it.",
                "enum": [
                    true,
                    false
                ]
            },
            "dns": {
                "type": "object",
                "description": "The DNS records generated for this link branding.",
                "required": [
                    "domain_cname"
                ],
                "properties": {
                    "domain_cname": {
                        "type": "object",
                        "description": "The DNS record generated to point to your link branding subdomain.",
                        "required": [
                            "valid",
                            "type",
                            "host",
                            "data"
                        ],
                        "properties": {
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if the DNS record is valid.",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record that was generated.",
                                "enum": [
                                    "cname",
                                    "txt",
                                    "mx"
                                ]
                            },
                            "host": {
                                "type": "string",
                                "description": "The domain that this link branding will use for the links in your email."
                            },
                            "data": {
                                "type": "string",
                                "description": "The domain that the DNS record points to."
                            }
                        }
                    },
                    "owner_cname": {
                        "type": "object",
                        "description": "The DNS record generated to verify who created the link branding.",
                        "properties": {
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if the DNS record is valid.",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record generated.",
                                "enum": [
                                    "cname",
                                    "txt",
                                    "mx"
                                ]
                            },
                            "host": {
                                "type": "string",
                                "description": "Used to verify the link branding. The subdomain of this domain is the ID of the user who created the link branding."
                            },
                            "data": {
                                "type": "string",
                                "description": "The domain that the DNS record points to."
                            }
                        },
                        "required": [
                            "valid",
                            "host",
                            "data"
                        ]
                    }
                }
            }
        },
        "required": [
            "id",
            "domain",
            "username",
            "user_id",
            "default",
            "valid",
            "legacy",
            "dns"
        ]
    },
    "from_email_object": {
        "title": "From Email Object",
        "type": "object",
        "properties": {
            "email": {
                "type": "string",
                "format": "email",
                "description": "The 'From' email address used to deliver the message. This address should be a verified sender in your Twilio SendGrid account."
            },
            "name": {
                "type": "string",
                "description": "A name or title associated with the sending email address."
            }
        },
        "required": [
            "email"
        ],
        "example": {
            "email": "jane_doe@example.com",
            "name": "Jane Doe"
        }
    },
    "api_key_name_id_scopes": {
        "title": "API Key Name, ID, and Scopes",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "scopes": {
                        "type": "array",
                        "description": "The permissions this API Key has access to.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "$ref": "./schemas.json#/api_key_name_id"
            }
        ],
        "example": {
            "api_key_id": "qfTQ6KG0QBiwWdJ0-pCLCA",
            "name": "Mail Send",
            "scopes": [
                "mail.send",
                "mail.batch.create",
                "mail.batch.read",
                "mail.batch.update",
                "mail.batch.delete",
                "user.scheduled_sends.create",
                "user.scheduled_sends.read",
                "user.scheduled_sends.update",
                "user.scheduled_sends.delete",
                "sender_verification_eligible",
                "sender_verification_legacy",
                "2fa_required"
            ]
        }
    },
    "contactdb_segments": {
        "title": "Create a Segment request",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of this segment."
            },
            "list_id": {
                "type": "integer",
                "description": "The list id from which to make this segment. Not including this ID will mean your segment is created from the main contactdb rather than a list."
            },
            "conditions": {
                "type": "array",
                "description": "The conditions for a recipient to be included in this segment.",
                "items": {
                    "$ref": "./schemas.json#/contactdb_segments_conditions"
                }
            },
            "recipient_count": {
                "type": "number",
                "description": "The count of recipients in this list. This is not included on creation of segments."
            }
        },
        "required": [
            "name",
            "conditions"
        ],
        "example": {
            "name": "Last Name Miller",
            "list_id": 4,
            "conditions": [
                {
                    "field": "last_name",
                    "value": "Miller",
                    "operator": "eq",
                    "and_or": ""
                },
                {
                    "field": "last_clicked",
                    "value": "01/02/2015",
                    "operator": "gt",
                    "and_or": "and"
                },
                {
                    "field": "clicks.campaign_identifier",
                    "value": "513",
                    "operator": "eq",
                    "and_or": "or"
                }
            ],
            "recipient_count": 1234
        }
    },
    "api_key_name_id": {
        "title": "API Key Name and ID",
        "type": "object",
        "properties": {
            "api_key_id": {
                "type": "string",
                "description": "The ID of your API Key. "
            },
            "name": {
                "type": "string",
                "description": "The name of your API Key."
            }
        },
        "example": {
            "api_key_id": "qfTQ6KG0QBiwWdJ0-pCLCA",
            "name": "Mail Send"
        }
    },
    "advanced_stats_opens": {
        "title": "Stats: Advanced Stats with Opens",
        "type": "object",
        "description": "The individual events and their stats.",
        "properties": {
            "opens": {
                "type": "integer",
                "description": "The total number of times your emails were opened by recipients."
            },
            "unique_opens": {
                "type": "integer",
                "description": "The number of unique recipients who opened your emails."
            }
        }
    },
    "mail_settings_template": {
        "title": "Mail Settings: Template",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the legacy email template setting is enabled."
            },
            "html_content": {
                "type": "string",
                "description": "The HTML content that you want to use for your legacy email template."
            }
        },
        "example": {
            "enabled": false,
            "html_content": "<p><% body %>Example</p>\n"
        }
    },
    "ip_warmup_response": {
        "title": "IP Warmup: IP",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The IP address."
                },
                "start_date": {
                    "type": "integer",
                    "description": "A Unix timestamp indicating when the IP address entered warmup mode."
                }
            },
            "required": [
                "ip",
                "start_date"
            ]
        },
        "example": [
            {
                "ip": "0.0.0.0",
                "start_date": 1409616000
            }
        ]
    },
    "global_error_response_schema": {
        "title": "Global Error Response Schema",
        "type": "object",
        "properties": {
            "errors": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "the error message"
                        },
                        "field": {
                            "description": "the field that generated the error",
                            "nullable": true,
                            "type": "string"
                        },
                        "help": {
                            "type": "object",
                            "description": "helper text or docs for troubleshooting"
                        }
                    },
                    "required": [
                        "message"
                    ]
                }
            },
            "id": {
                "type": "string"
            }
        },
        "example": {
            "errors": [
                {
                    "field": "field_name",
                    "message": "error message"
                }
            ]
        }
    },
    "advanced_stats_mailbox_provider": {
        "title": "Stats: Advanced Stats for Mailbox Provider",
        "description": "The individual events and their stats.",
        "allOf": [
            {
                "$ref": "./schemas.json#/advanced_stats_clicks_opens"
            },
            {
                "type": "object",
                "description": "The individual events and their stats.",
                "properties": {
                    "blocks": {
                        "type": "integer",
                        "description": "The number of emails that were not allowed to be delivered by ISPs."
                    },
                    "bounces": {
                        "type": "integer",
                        "description": "The number of emails that bounced instead of being delivered."
                    },
                    "deferred": {
                        "type": "integer",
                        "description": "The number of emails that temporarily could not be delivered."
                    },
                    "delivered": {
                        "type": "integer",
                        "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                    },
                    "drops": {
                        "type": "integer",
                        "description": "The number of emails that were not delivered due to the recipient email address being on a suppression list."
                    },
                    "requests": {
                        "type": "integer",
                        "description": "The number of emails that were requested to be delivered."
                    },
                    "processed": {
                        "type": "integer",
                        "description": "Requests from your website, application, or mail client via SMTP Relay or the Web API that SendGrid processed."
                    },
                    "spam_reports": {
                        "type": "integer",
                        "description": "The number of recipients who marked your email as spam."
                    }
                }
            }
        ]
    },
    "contactdb_custom_field_with_id": {
        "title": "ContactDB Custom field schema with ID.",
        "allOf": [
            {
                "$ref": "./schemas.json#/contactdb_custom_field"
            },
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "The ID of the custom field."
                    }
                }
            }
        ]
    },
    "ip_pool": {
        "title": "IP Pools: Pool",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of the IP pool.",
                "maxLength": 64
            }
        },
        "required": [
            "name"
        ]
    },
    "google_analytics_settings": {
        "title": "Settings: Google Analytics",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if Google Analytics is enabled."
            },
            "utm_campaign": {
                "type": "string",
                "description": "The name of the campaign."
            },
            "utm_content": {
                "type": "string",
                "description": "Used to differentiate ads"
            },
            "utm_medium": {
                "type": "string",
                "description": "Name of the marketing medium (e.g. \"Email\")."
            },
            "utm_source": {
                "type": "string",
                "description": "Name of the referrer source. "
            },
            "utm_term": {
                "type": "string",
                "description": "Any paid keywords."
            }
        },
        "example": {
            "enabled": true,
            "utm_source": "sendgrid.com",
            "utm_medium": "email",
            "utm_term": "",
            "utm_content": "",
            "utm_campaign": "website"
        }
    },
    "event-webhook-response": {
        "title": "Webhooks: Event Webhook Response",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the event webhook is enabled."
            },
            "url": {
                "type": "string",
                "description": "The URL that you want the event webhook to POST to."
            },
            "group_resubscribe": {
                "type": "boolean",
                "description": "Recipient resubscribes to specific group by updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "delivered": {
                "type": "boolean",
                "description": "Message has been successfully delivered to the receiving server."
            },
            "group_unsubscribe": {
                "type": "boolean",
                "description": "Recipient unsubscribe from specific group, by either direct link or updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "spam_report": {
                "type": "boolean",
                "description": "Recipient marked a message as spam."
            },
            "bounce": {
                "type": "boolean",
                "description": "Receiving server could not or would not accept message."
            },
            "deferred": {
                "type": "boolean",
                "description": "Recipient's email server temporarily rejected message."
            },
            "unsubscribe": {
                "type": "boolean",
                "description": "Recipient clicked on message's subscription management link. You need to enable Subscription Tracking for getting this type of event."
            },
            "processed": {
                "type": "boolean",
                "description": "Message has been received and is ready to be delivered."
            },
            "open": {
                "type": "boolean",
                "description": "Recipient has opened the HTML message. You need to enable Open Tracking for getting this type of event."
            },
            "click": {
                "type": "boolean",
                "description": "Recipient clicked on a link within the message. You need to enable Click Tracking for getting this type of event."
            },
            "dropped": {
                "type": "boolean",
                "description": "You may see the following drop reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota"
            },
            "oauth_client_id": {
                "type": "string",
                "description": "The client ID Twilio SendGrid sends to your OAuth server or service provider to generate an OAuth access token."
            },
            "oauth_token_url": {
                "type": "string",
                "description": "The URL where Twilio SendGrid sends the Client ID and Client Secret to generate an access token. This should be your OAuth server or service provider."
            }
        },
        "required": [
            "enabled",
            "url",
            "group_resubscribe",
            "delivered",
            "group_unsubscribe",
            "spam_report",
            "bounce",
            "deferred",
            "unsubscribe",
            "processed",
            "open",
            "click",
            "dropped"
        ]
    },
    "user_profile": {
        "title": "User: Profile",
        "type": "object",
        "properties": {
            "address": {
                "type": "string",
                "description": "The street address for this user profile."
            },
            "address2": {
                "type": "string",
                "description": "An optional second line for the street address of this user profile."
            },
            "city": {
                "type": "string",
                "description": "The city for the user profile."
            },
            "company": {
                "type": "string",
                "description": "That company that this user profile is associated with."
            },
            "country": {
                "type": "string",
                "description": "Th country of this user profile."
            },
            "first_name": {
                "type": "string",
                "description": "The first name of the user."
            },
            "last_name": {
                "type": "string",
                "description": "The last name of the user."
            },
            "phone": {
                "type": "string",
                "description": "The phone number for the user."
            },
            "state": {
                "type": "string",
                "description": "The state for this user."
            },
            "website": {
                "type": "string",
                "description": "The website associated with this user."
            },
            "zip": {
                "type": "string",
                "description": "The zip code for this user."
            }
        },
        "example": {
            "address": "1451 Larimer Street, 3rd floor",
            "address2": "",
            "city": "Denver, CO",
            "company": "SendGrid",
            "country": "US",
            "first_name": "Matthew",
            "last_name": "Bernier",
            "phone": "7208788003",
            "state": "CO",
            "website": "http://sendgrid.com",
            "zip": "80202"
        }
    },
    "mail_settings_footer": {
        "title": "Mail Settings: Footer",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the Footer mail setting is currently enabled."
            },
            "html_content": {
                "type": "string",
                "description": "The custom HTML content of your email footer."
            },
            "plain_content": {
                "type": "string",
                "description": "The plain text content of your email footer."
            }
        },
        "example": {
            "enabled": true,
            "html_content": "Example HTML content",
            "plain_content": "Example plain content"
        }
    },
    "category_stats": {
        "title": "Stats: Category Stats",
        "type": "object",
        "properties": {
            "date": {
                "type": "string",
                "description": "The date the statistics were gathered."
            },
            "stats": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "object",
                            "properties": {
                                "blocks": {
                                    "type": "integer",
                                    "description": "The number of emails that were not allowed to be delivered by ISPs."
                                },
                                "bounce_drops": {
                                    "type": "integer",
                                    "description": "The number of emails that were dropped because of a bounce."
                                },
                                "bounces": {
                                    "type": "integer",
                                    "description": "The number of emails that bounced instead of being delivered."
                                },
                                "clicks": {
                                    "type": "integer",
                                    "description": "The number of links that were clicked."
                                },
                                "deferred": {
                                    "type": "integer",
                                    "description": "The number of emails that temporarily could not be delivered."
                                },
                                "delivered": {
                                    "type": "integer",
                                    "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                },
                                "invalid_emails": {
                                    "type": "integer",
                                    "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                                },
                                "opens": {
                                    "type": "integer",
                                    "description": "The total number of times your emails were opened by recipients."
                                },
                                "processed": {
                                    "type": "integer",
                                    "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                                },
                                "requests": {
                                    "type": "integer",
                                    "description": "The number of emails that were requested to be delivered."
                                },
                                "spam_report_drops": {
                                    "type": "integer",
                                    "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                                },
                                "spam_reports": {
                                    "type": "integer",
                                    "description": "The number of recipients who marked your email as spam."
                                },
                                "unique_clicks": {
                                    "type": "integer",
                                    "description": "The number of unique recipients who clicked links in your emails."
                                },
                                "unique_opens": {
                                    "type": "integer",
                                    "description": "The number of unique recipients who opened your emails."
                                },
                                "unsubscribe_drops": {
                                    "type": "integer",
                                    "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                                },
                                "unsubscribes": {
                                    "type": "integer",
                                    "description": "The number of recipients who unsubscribed from your emails."
                                }
                            },
                            "required": [
                                "blocks",
                                "bounce_drops",
                                "bounces",
                                "clicks",
                                "deferred",
                                "delivered",
                                "invalid_emails",
                                "opens",
                                "processed",
                                "requests",
                                "spam_report_drops",
                                "spam_reports",
                                "unique_clicks",
                                "unique_opens",
                                "unsubscribe_drops",
                                "unsubscribes"
                            ]
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the category."
                        },
                        "type": {
                            "type": "string",
                            "description": "How you are segmenting your statistics."
                        }
                    },
                    "required": [
                        "type"
                    ]
                }
            }
        },
        "required": [
            "date"
        ],
        "example": {
            "date": "2015-01-01",
            "stats": [
                {
                    "metrics": {
                        "blocks": 0,
                        "bounce_drops": 0,
                        "bounces": 0,
                        "clicks": 0,
                        "deferred": 0,
                        "delivered": 0,
                        "invalid_emails": 0,
                        "opens": 0,
                        "processed": 0,
                        "requests": 0,
                        "spam_report_drops": 0,
                        "spam_reports": 0,
                        "unique_clicks": 0,
                        "unique_opens": 0,
                        "unsubscribe_drops": 0,
                        "unsubscribes": 0
                    },
                    "name": "cat1",
                    "type": "category"
                },
                {
                    "metrics": {
                        "blocks": 0,
                        "bounce_drops": 0,
                        "bounces": 0,
                        "clicks": 0,
                        "deferred": 0,
                        "delivered": 0,
                        "invalid_emails": 0,
                        "opens": 0,
                        "processed": 0,
                        "requests": 0,
                        "spam_report_drops": 0,
                        "spam_reports": 0,
                        "unique_clicks": 0,
                        "unique_opens": 0,
                        "unsubscribe_drops": 0,
                        "unsubscribes": 0
                    },
                    "name": "cat2",
                    "type": "category"
                }
            ]
        }
    },
    "parse-setting": {
        "title": "Parse Setting",
        "type": "object",
        "properties": {
            "url": {
                "type": "string",
                "description": "The public URL where you would like SendGrid to POST the data parsed from your email. Any emails sent with the given hostname provided (whose MX records have been updated to point to SendGrid) will be parsed and POSTed to this URL."
            },
            "hostname": {
                "type": "string",
                "description": "A specific and unique domain or subdomain that you have created to use exclusively to parse your incoming email. For example, `parse.yourdomain.com`."
            },
            "spam_check": {
                "type": "boolean",
                "description": "Indicates if you would like SendGrid to check the content parsed from your emails for spam before POSTing them to your domain."
            },
            "send_raw": {
                "type": "boolean",
                "description": "Indicates if you would like SendGrid to post the original MIME-type content of your parsed email. When this parameter is set to `true`, SendGrid will send a JSON payload of the content of your email."
            }
        },
        "example": {
            "url": "http://email.myhostname.com",
            "hostname": "myhostname.com",
            "spam_check": false,
            "send_raw": true
        }
    },
    "transactional_template": {
        "title": "Transactional Templates: Template",
        "allOf": [
            {
                "$ref": "./schemas.json#/transactional-templates-template-lean"
            },
            {
                "type": "object",
                "properties": {
                    "warning": {
                        "$ref": "./schemas.json#/transactional-template-warning"
                    }
                }
            }
        ],
        "example": {
            "id": "33feeff2-5069-43fe-8853-428651e5be79",
            "name": "example_name",
            "updated_at ": "2021-04-28 13:12:46",
            "warning": {
                "message": "Sample warning message"
            },
            "generation": "legacy"
        }
    },
    "contactdb_list": {
        "title": "ContactDB lists",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "description": "The reference ID of your list."
            },
            "name": {
                "type": "string",
                "description": "The name of your list. Must be unique against all other list and segment names."
            },
            "recipient_count": {
                "type": "integer",
                "description": "The count of recipients currently in the list."
            }
        },
        "required": [
            "id",
            "name",
            "recipient_count"
        ],
        "example": {
            "id": 1,
            "name": "listname",
            "recipient_count": 0
        }
    },
    "suppression_group": {
        "title": "Suppressions: Suppression Group",
        "type": "object",
        "properties": {
            "id": {
                "type": "number",
                "description": "The id of the suppression group."
            },
            "name": {
                "type": "string",
                "description": "The name of the suppression group. Each group created by a user must have a unique name.",
                "maxLength": 30
            },
            "description": {
                "type": "string",
                "description": "A description of the suppression group.",
                "maxLength": 100
            },
            "last_email_sent_at": {
                "type": "integer",
                "nullable": true
            },
            "is_default": {
                "type": "boolean",
                "default": false,
                "description": "Indicates if this is the default suppression group."
            },
            "unsubscribes": {
                "type": "integer",
                "description": "The unsubscribes associated with this group."
            }
        },
        "required": [
            "id",
            "name",
            "description"
        ]
    },
    "mail_settings_bounce_purge": {
        "title": "Mail Settings: Bounce Purge",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the bounce purge mail setting is enabled."
            },
            "soft_bounces": {
                "description": "The number of days after which SendGrid will purge all contacts from your soft bounces suppression lists.",
                "nullable": true,
                "type": "integer"
            },
            "hard_bounces": {
                "description": "The number of days after which SendGrid will purge all contacts from your hard bounces suppression lists.",
                "nullable": true,
                "type": "integer"
            }
        },
        "example": {
            "enabled": false,
            "soft_bounces": 1234,
            "hard_bounces": null
        }
    },
    "transactional_template_version_output": {
        "title": "Transactional Templates: Version Output",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "./schemas.json#/transactional-template-warning"
                        }
                    }
                }
            },
            {
                "$ref": "./schemas.json#/transactional_template_version_create"
            },
            {
                "$ref": "./schemas.json#/transactional-templates-version-output-lean"
            }
        ]
    },
    "credentials": {
        "title": "Credentials",
        "type": "object",
        "properties": {
            "permissions": {
                "type": "object",
                "properties": {
                    "api": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "web": {
                        "type": "string"
                    }
                }
            },
            "username": {
                "type": "string"
            }
        },
        "example": {
            "address": "1234 example street",
            "address2": null,
            "city": "Denver",
            "company": "Company name",
            "country": "US",
            "email": "example@example.com",
            "first_name": "Example",
            "last_name": "User",
            "phone": "(555) 555-5555",
            "state": "CO",
            "zip": "55555"
        }
    },
    "mail_settings_forward_spam": {
        "title": "Mail Settings: Forward Spam",
        "type": "object",
        "properties": {
            "email": {
                "type": "string",
                "description": "The email address where you would like the spam reports to be forwarded."
            },
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the Forward Spam setting is enabled."
            }
        },
        "example": {
            "email": "",
            "enabled": true
        }
    },
    "campaign_request": {
        "title": "Campaigns Request",
        "type": "object",
        "properties": {
            "title": {
                "type": "string",
                "description": "The display title of your campaign. This will be viewable by you in the Marketing Campaigns UI."
            },
            "subject": {
                "description": "The subject of your campaign that your recipients will see.",
                "nullable": true,
                "type": "string"
            },
            "sender_id": {
                "description": "The ID of the \"sender\" identity that you have created. Your recipients will see this as the \"from\" on your marketing emails.",
                "nullable": true,
                "type": "integer"
            },
            "list_ids": {
                "description": "The IDs of the lists you are sending this campaign to. You can have both segment IDs and list IDs",
                "items": {
                    "type": "integer"
                },
                "nullable": true,
                "type": "array"
            },
            "segment_ids": {
                "description": "The segment IDs that you are sending this list to. You can have both segment IDs and list IDs. Segments are limited to 10 segment IDs.",
                "items": {
                    "type": "integer"
                },
                "nullable": true,
                "type": "array"
            },
            "categories": {
                "description": "The categories you would like associated to this campaign.",
                "items": {
                    "type": "string"
                },
                "nullable": true,
                "type": "array"
            },
            "suppression_group_id": {
                "description": "The suppression group that this marketing email belongs to, allowing recipients to opt-out of emails of this type.",
                "nullable": true,
                "type": "integer"
            },
            "custom_unsubscribe_url": {
                "description": "This is the url of the custom unsubscribe page that you provide for customers to unsubscribe from your suppression groups.",
                "nullable": true,
                "type": "string"
            },
            "ip_pool": {
                "description": "The pool of IPs that you would like to send this email from.",
                "nullable": true,
                "type": "string"
            },
            "html_content": {
                "description": "The HTML of your marketing email.",
                "nullable": true,
                "type": "string"
            },
            "plain_content": {
                "description": "The plain text content of your emails.",
                "nullable": true,
                "type": "string"
            },
            "editor": {
                "type": "string",
                "enum": [
                    "code",
                    "design"
                ],
                "description": "The editor used in the UI."
            }
        },
        "required": [
            "title"
        ],
        "example": {
            "id": 986724,
            "title": "May Newsletter",
            "subject": "New Products for Summer!",
            "sender_id": 124451,
            "list_ids": [
                110,
                124
            ],
            "segment_ids": [
                110
            ],
            "categories": [
                "summer line"
            ],
            "suppression_group_id": 42,
            "custom_unsubscribe_url": "",
            "ip_pool": "marketing",
            "html_content": "<html><head><title></title></head><body><p>Check out our summer line!</p></body></html>",
            "plain_content": "Check out our summer line!",
            "status": "Draft"
        }
    },
    "subuser_stats": {
        "title": "subuser_stats",
        "type": "object",
        "properties": {
            "date": {
                "type": "string",
                "description": "The date the statistics were gathered."
            },
            "stats": {
                "type": "array",
                "description": "The list of statistics.",
                "items": {
                    "type": "object",
                    "properties": {
                        "first_name": {
                            "type": "string",
                            "description": "The first name of the subuser."
                        },
                        "last_name": {
                            "type": "string",
                            "description": "The last name of the subuser."
                        },
                        "metrics": {
                            "type": "object",
                            "properties": {
                                "blocks": {
                                    "type": "integer",
                                    "description": "The number of emails that were not allowed to be delivered by ISPs."
                                },
                                "bounce_drops": {
                                    "type": "integer",
                                    "description": "The number of emails that were dropped because of a bounce."
                                },
                                "bounces": {
                                    "type": "integer",
                                    "description": "The number of emails that bounced instead of being delivered."
                                },
                                "clicks": {
                                    "type": "integer",
                                    "description": "The number of links that were clicked in your emails."
                                },
                                "deferred": {
                                    "type": "integer",
                                    "description": "The number of emails that temporarily could not be delivered."
                                },
                                "delivered": {
                                    "type": "integer",
                                    "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                                },
                                "invalid_emails": {
                                    "type": "integer",
                                    "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                                },
                                "opens": {
                                    "type": "integer",
                                    "description": "The total number of times your emails were opened by recipients."
                                },
                                "processed": {
                                    "type": "integer",
                                    "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                                },
                                "requests": {
                                    "type": "integer",
                                    "description": "The number of emails that were requested to be delivered."
                                },
                                "spam_report_drops": {
                                    "type": "integer",
                                    "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                                },
                                "spam_reports": {
                                    "type": "integer",
                                    "description": "The number of recipients who marked your email as spam."
                                },
                                "unique_clicks": {
                                    "type": "integer",
                                    "description": "The number of unique recipients who clicked links in your emails."
                                },
                                "unique_opens": {
                                    "type": "integer",
                                    "description": "The number of unique recipients who opened your emails."
                                },
                                "unsubscribe_drops": {
                                    "type": "integer",
                                    "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                                },
                                "unsubscribes": {
                                    "type": "integer",
                                    "description": "The number of recipients who unsubscribed from your emails."
                                }
                            }
                        },
                        "name": {
                            "type": "string",
                            "description": "The username of the subuser."
                        },
                        "type": {
                            "type": "string",
                            "description": "The type of account."
                        }
                    }
                }
            }
        },
        "example": {
            "date": "2016-02-01",
            "stats": [
                {
                    "first_name": "John",
                    "last_name": "Doe",
                    "metrics": {
                        "blocks": 0,
                        "bounce_drops": 0,
                        "bounces": 0,
                        "clicks": 5,
                        "deferred": 0,
                        "delivered": 0,
                        "invalid_emails": 0,
                        "opens": 10,
                        "processed": 10,
                        "requests": 10,
                        "spam_report_drops": 0,
                        "spam_reports": 0,
                        "unique_clicks": 0,
                        "unique_opens": 0,
                        "unsubscribe_drops": 0,
                        "unsubscribes": 0
                    },
                    "name": "user1",
                    "type": "subuser"
                }
            ]
        }
    },
    "user_scheduled_send_status": {
        "title": "User Scheduled Send status",
        "allOf": [
            {
                "$ref": "./schemas.json#/mail_batch_id"
            },
            {
                "type": "object",
                "description": "The status of the scheduled send.",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the scheduled send.",
                        "enum": [
                            "cancel",
                            "pause"
                        ]
                    }
                },
                "required": [
                    "status"
                ]
            }
        ],
        "example": {
            "batch_id": "HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi",
            "status": "pause"
        }
    },
    "advanced_stats_clicks_opens": {
        "title": "Stats: Advanced Stats with Clicks and Opens",
        "description": "The individual events and their stats.",
        "allOf": [
            {
                "$ref": "./schemas.json#/advanced_stats_clicks"
            },
            {
                "$ref": "./schemas.json#/advanced_stats_opens"
            }
        ]
    },
    "contactdb_segments_with_id": {
        "title": "ContactDB:: Segments with ID",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "The ID of the segment."
                    }
                },
                "required": [
                    "id"
                ]
            },
            {
                "$ref": "./schemas.json#/contactdb_segments"
            }
        ]
    },
    "advanced_stats_clicks": {
        "title": "Stats: Advanced Stats with Clicks",
        "type": "object",
        "description": "The individual events and their stats.",
        "properties": {
            "clicks": {
                "type": "integer",
                "description": "The number of links that were clicked in your emails."
            },
            "unique_clicks": {
                "type": "integer",
                "description": "The number of unique recipients who clicked links in your emails."
            }
        }
    },
    "contactdb_recipient": {
        "title": "ContactDB: Recipient",
        "type": "object",
        "properties": {
            "recipients": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The ID of this recipient."
                        },
                        "created_at": {
                            "type": "number",
                            "description": "The time this record was created in your contactdb, in unixtime."
                        },
                        "custom_fields": {
                            "type": "array",
                            "description": "The custom fields assigned to this recipient and their values.",
                            "items": {
                                "$ref": "./schemas.json#/contactdb_custom_field_with_id_value"
                            }
                        },
                        "email": {
                            "type": "string",
                            "description": "The email address of this recipient. This is a default custom field that SendGrid provides.",
                            "format": "email"
                        },
                        "first_name": {
                            "description": "The first name of this recipient. This is a default custom field that SendGrid provides.",
                            "nullable": true,
                            "type": "string"
                        },
                        "last_name": {
                            "description": "The last name of the recipient.",
                            "nullable": true,
                            "type": "string"
                        },
                        "last_clicked": {
                            "description": "The last time this recipient clicked a link from one of your campaigns, in unixtime.",
                            "nullable": true,
                            "type": "number"
                        },
                        "last_emailed": {
                            "description": "The last time this user was emailed by one of your campaigns, in unixtime.",
                            "nullable": true,
                            "type": "number"
                        },
                        "last_opened": {
                            "description": "The last time this recipient opened an email from you, in unixtime.",
                            "nullable": true,
                            "type": "number"
                        },
                        "updated_at": {
                            "type": "number",
                            "description": "The last update date for this recipient's record."
                        }
                    },
                    "required": [
                        "email"
                    ]
                }
            }
        }
    },
    "mail_settings_patch": {
        "title": "Mail Settings: Patch",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the mail setting is enabled."
            },
            "email": {
                "type": "string",
                "description": "The email address of the recipient."
            }
        },
        "example": {
            "enabled": true,
            "email": "email@example.com"
        }
    },
    "mail_settings_forward_bounce": {
        "title": "Mail Settings: Forward Bounce",
        "type": "object",
        "properties": {
            "email": {
                "description": "The email address that you would like your bounce reports forwarded to.",
                "nullable": true,
                "type": "string"
            },
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the bounce forwarding mail setting is enabled."
            }
        },
        "example": {
            "enabled": false,
            "email": null
        }
    },
    "mail_batch_id": {
        "title": "Mail Batch ID",
        "type": "object",
        "properties": {
            "batch_id": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9\\-\\_]"
            }
        },
        "required": [
            "batch_id"
        ],
        "example": {
            "batch_id": "HkJ5yLYULb7Rj8GKSx7u025ouWVlMgAi"
        }
    },
    "subuser_post": {
        "title": "Subuser::POST",
        "type": "object",
        "properties": {
            "username": {
                "type": "string",
                "description": "The username of the subuser."
            },
            "user_id": {
                "type": "number",
                "description": "The user ID for this subuser."
            },
            "email": {
                "type": "string",
                "description": "The email address for this subuser.",
                "format": "email"
            },
            "signup_session_token": {
                "type": "string"
            },
            "authorization_token": {
                "type": "string"
            },
            "credit_allocation": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                }
            }
        },
        "required": [
            "username",
            "user_id",
            "email"
        ],
        "example": {
            "username": "example_subuser",
            "user_id": 1234,
            "email": "example@example.com",
            "signup_session_token": "",
            "authorization_token": "",
            "credit_allocation": {
                "type": "unlimited"
            }
        }
    },
    "contactdb_recipient_count": {
        "title": "ContactDB: Recipient Count",
        "type": "object",
        "properties": {
            "recipient_count": {
                "type": "number",
                "description": "The count of recipients."
            }
        },
        "required": [
            "recipient_count"
        ],
        "example": {
            "recipient_count": 1234
        }
    },
    "contactdb_custom_field_with_id_value": {
        "title": "ContactDB Custom field schema.",
        "allOf": [
            {
                "$ref": "./schemas.json#/contactdb_custom_field_with_id"
            },
            {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "The value of this recipient's custom field",
                        "nullable": true,
                        "type": "string"
                    }
                }
            }
        ]
    },
    "transactional_template_version_create": {
        "title": "Transactional Templates: Version Create",
        "type": "object",
        "properties": {
            "active": {
                "type": "integer",
                "description": "Set the version as the active version associated with the template (0 is inactive, 1 is active). Only one version of a template can be active. The first version created for a template will automatically be set to Active.",
                "enum": [
                    0,
                    1
                ]
            },
            "name": {
                "type": "string",
                "description": "Name of the transactional template version.",
                "maxLength": 100
            },
            "html_content": {
                "type": "string",
                "description": "The HTML content of the version. Maximum of 1048576 bytes allowed.",
                "maxLength": 1048576
            },
            "plain_content": {
                "type": "string",
                "description": "Text/plain content of the transactional template version. Maximum of 1048576 bytes allowed.",
                "maxLength": 1048576,
                "default": "<generated from html_content if left empty>"
            },
            "generate_plain_content": {
                "type": "boolean",
                "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
                "default": true
            },
            "subject": {
                "type": "string",
                "description": "Subject of the new transactional template version.",
                "maxLength": 255
            },
            "editor": {
                "type": "string",
                "enum": [
                    "code",
                    "design"
                ],
                "description": "The editor used in the UI."
            },
            "test_data": {
                "type": "string",
                "description": "For dynamic templates only, the mock json data that will be used for template preview and test sends."
            }
        },
        "required": [
            "name",
            "subject"
        ],
        "example": {
            "template_id": "Excepteur Ut qui",
            "active": 1,
            "name": "pariatur non incididunt commodo",
            "html_content": "dolor",
            "generate_plain_content": false,
            "subject": "aliquip nulla Ut",
            "editor": "design",
            "plain_content": "labore dolore"
        }
    },
    "transactional-templates-version-output-lean": {
        "title": "Transactional Templates: Version Output Lean",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "description": "ID of the transactional template version.",
                "format": "uuid"
            },
            "template_id": {
                "type": "string",
                "description": "ID of the transactional template."
            },
            "active": {
                "type": "integer",
                "description": "Set the version as the active version associated with the template. Only one version of a template can be active. The first version created for a template will automatically be set to Active.",
                "enum": [
                    0,
                    1
                ]
            },
            "name": {
                "type": "string",
                "description": "Name of the transactional template version.",
                "maxLength": 100
            },
            "subject": {
                "type": "string",
                "description": "Subject of the new transactional template version.",
                "maxLength": 255
            },
            "updated_at": {
                "type": "string",
                "description": "The date and time that this transactional template version was updated."
            },
            "generate_plain_content": {
                "type": "boolean",
                "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
                "default": true
            },
            "editor": {
                "type": "string",
                "enum": [
                    "code",
                    "design"
                ],
                "description": "The editor used in the UI."
            },
            "thumbnail_url": {
                "type": "string",
                "description": "A Thumbnail preview of the template's html content."
            }
        }
    },
    "transactional-templates-template-lean": {
        "title": "Transactional Templates: Template Lean",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "description": "The ID of the transactional template.",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid"
            },
            "name": {
                "type": "string",
                "description": "The name for the transactional template.",
                "maxLength": 100
            },
            "generation": {
                "type": "string",
                "description": "Defines the generation of the template.",
                "enum": [
                    "legacy",
                    "dynamic"
                ]
            },
            "updated_at ": {
                "type": "string",
                "description": "The date and time that this transactional template version was updated.",
                "pattern": "^(\\d{4}-\\d{2}-\\d{2}) ((\\d{2}):(\\d{2}):(\\d{2}))$"
            },
            "versions": {
                "type": "array",
                "description": "The different versions of this transactional template.",
                "items": {
                    "$ref": "./schemas.json#/transactional-templates-version-output-lean"
                }
            }
        },
        "required": [
            "id",
            "name",
            "generation",
            "updated_at "
        ],
        "example": {
            "id": "0c314114-a2b7-4523-8cbc-a293d7d19007",
            "name": "example_name",
            "generation": "legacy",
            "updated_at ": "2021-04-28 13:12:46",
            "versions": []
        }
    },
    "custom-fields-by-id": {
        "title": "custom-fields-by-id",
        "type": "object",
        "example": {
            "w1": "2002-10-02T15:00:00Z",
            "w33": 9.5,
            "e2": "Coffee is a beverage that puts one to sleep when not drank."
        }
    },
    "custom-fields-by-name": {
        "title": "custom-fields-by-name",
        "type": "object",
        "example": {
            "birthday": "2002-10-02T15:00:00Z",
            "shoe_size": 9.5,
            "favoriteQuote": "Coffee is a beverage that puts one to sleep when not drank."
        }
    },
    "contact-details": {
        "title": "contact-details",
        "type": "object",
        "properties": {
            "address_line_1": {
                "type": "string"
            },
            "address_line_2": {
                "type": "string"
            },
            "alternate_emails": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "city": {
                "type": "string"
            },
            "country": {
                "type": "string"
            },
            "email": {
                "type": "string"
            },
            "first_name": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "last_name": {
                "type": "string"
            },
            "postal_code": {
                "type": "string"
            },
            "state_province_region": {
                "type": "string"
            },
            "list_ids": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "created_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the contact was created."
            },
            "updated_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the contact was updated."
            },
            "_metadata": {
                "$ref": "./schemas.json#/selfmetadata"
            },
            "custom_fields": {
                "$ref": "./schemas.json#/custom-fields-by-name"
            }
        },
        "required": [
            "id",
            "list_ids",
            "created_at",
            "updated_at"
        ]
    },
    "contact-import": {
        "title": "contact-import",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "description": "The job ID."
            },
            "status": {
                "type": "string",
                "description": "The job state. Allowed values: `pending`, `completed`, `errored`, or `failed`."
            },
            "job_type": {
                "type": "string",
                "description": "The job type. Allowed values: `upsert`, or `delete`."
            },
            "results": {
                "type": "object",
                "description": "Result map of the import job.",
                "properties": {
                    "requested_count": {
                        "description": "Requested contact count from the import.",
                        "type": "number"
                    },
                    "created_count": {
                        "description": "Created contact count from the import.",
                        "type": "number"
                    },
                    "updated_count": {
                        "description": "Updated contact count from the import.",
                        "type": "number"
                    },
                    "deleted_count": {
                        "description": "Count of deleted contacts that resulted in error.",
                        "type": "number"
                    },
                    "errored_count": {
                        "description": "Count of imported contacts that resulted in error.",
                        "type": "number"
                    },
                    "errors_url": {
                        "type": "string",
                        "description": "The download URL of the file which provides information about any errors."
                    }
                }
            },
            "started_at": {
                "description": "The ISO8601 timestamp when the job was created.",
                "type": "string"
            },
            "finished_at": {
                "description": "The ISO8601 timestamp when the job was finished.",
                "type": "string"
            }
        }
    },
    "single-contact-request": {
        "title": "single contact request",
        "type": "object",
        "properties": {
            "list_ids": {
                "type": "array",
                "minItems": 0,
                "maxItems": 100,
                "description": "The contact's list IDs.",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "contact": {
                "type": "object",
                "properties": {
                    "primary_email": {
                        "type": "string"
                    },
                    "alternate_emails": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "address_line_1": {
                        "type": "string"
                    },
                    "address_line_2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state_province_region": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "custom_fields": {
                        "type": "object",
                        "properties": {
                            "custom_field_name1": {
                                "type": "string"
                            },
                            "custom_field_name2": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "contact-export": {
        "title": "contact-export",
        "type": "object",
        "properties": {
            "id": {
                "type": "string"
            },
            "status": {
                "type": "string",
                "enum": [
                    "pending",
                    "ready",
                    "failure"
                ],
                "description": "The export job's status. Allowed values: `pending`, `ready`, or `failure`."
            },
            "created_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the export was begun."
            },
            "updated_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the export was updated."
            },
            "completed_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the export was completed."
            },
            "expires_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the exported file on S3 will expire."
            },
            "urls": {
                "type": "array",
                "description": "One or more download URLs for the contact file if the status is `ready`.",
                "items": {
                    "type": "string"
                }
            },
            "message": {
                "type": "string",
                "description": "A human readable message if the status is `failure`."
            },
            "_metadata": {
                "$ref": "./schemas.json#/metadata"
            },
            "contact_count": {
                "type": "integer",
                "description": "The total number of exported contacts."
            }
        },
        "required": [
            "id",
            "status",
            "created_at",
            "updated_at",
            "expires_at"
        ]
    },
    "contact-summary": {
        "title": "contact-summary",
        "type": "object",
        "properties": {
            "email": {
                "type": "string",
                "description": "Primary email address."
            },
            "first_name": {
                "type": "string"
            },
            "id": {
                "type": "string",
                "description": "Contact UUID."
            },
            "last_name": {
                "type": "string"
            },
            "list_ids": {
                "type": "array",
                "description": "List UUID linked with this contact.",
                "items": {
                    "type": "string"
                }
            },
            "created_at": {
                "type": "number",
                "description": "Unix Epoch Timestamp."
            },
            "updated_at": {
                "type": "number",
                "description": "Unix Epoch Timestamp."
            },
            "_metadata": {
                "$ref": "./schemas.json#/selfmetadata"
            }
        },
        "required": [
            "id",
            "list_ids",
            "created_at",
            "updated_at"
        ]
    },
    "contact-request": {
        "title": "contact-request",
        "type": "object",
        "properties": {
            "address_line_1": {
                "type": "string",
                "description": "The first line of the address.",
                "maxLength": 100
            },
            "address_line_2": {
                "type": "string",
                "description": "An optional second line for the address.",
                "maxLength": 100
            },
            "alternate_emails": {
                "type": "array",
                "description": "Additional emails associated with the contact.",
                "minItems": 0,
                "maxItems": 5,
                "items": {
                    "type": "string",
                    "maxLength": 254
                }
            },
            "city": {
                "type": "string",
                "description": "The contact's city.",
                "maxLength": 60
            },
            "country": {
                "type": "string",
                "description": "The contact's country. Can be a full name or an abbreviation.",
                "maxLength": 50
            },
            "email": {
                "type": "string",
                "description": "The contact's primary email. This is required to be a valid email.",
                "maxLength": 254
            },
            "first_name": {
                "type": "string",
                "description": "The contact's personal name.",
                "maxLength": 50
            },
            "last_name": {
                "type": "string",
                "description": "The contact's family name.",
                "maxLength": 50
            },
            "postal_code": {
                "type": "string",
                "description": "The contact's ZIP code or other postal code."
            },
            "state_province_region": {
                "type": "string",
                "description": "The contact's state, province, or region.",
                "maxLength": 50
            },
            "custom_fields": {
                "type": "object",
                "description": "An object of custom field IDs and the values you want to associate with those custom fields. You can retrieve the IDs of your custom fields from the [Get All Field Definitions endpoint](https://docs.sendgrid.com/api-reference/custom-fields/get-all-field-definitions).",
                "properties": {
                    "": {
                        "type": "string",
                        "description": "The properties in this object are made up of a key (the custom field ID) and value you want associated with that custom field. For example `{\"w1\": \"coffee\"}`."
                    }
                },
                "example": {
                    "w1": "coffee",
                    "w33": "42",
                    "e2": "blue"
                }
            }
        },
        "required": [
            "email"
        ]
    },
    "contact-details2": {
        "title": "contact-details2",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid"
            },
            "first_name": {
                "type": "string"
            },
            "last_name": {
                "type": "string"
            },
            "unique_name": {
                "type": "string"
            },
            "email": {
                "type": "string",
                "format": "email"
            },
            "alternate_emails": {
                "items": {
                    "type": "string",
                    "format": "email"
                },
                "nullable": true,
                "type": "array"
            },
            "address_line_1": {
                "type": "string"
            },
            "address_line_2": {
                "type": "string"
            },
            "city": {
                "type": "string"
            },
            "state_province_region": {
                "type": "string"
            },
            "country": {
                "type": "string"
            },
            "postal_code": {
                "type": "string"
            },
            "phone_number": {
                "type": "string"
            },
            "whatsapp": {
                "type": "string"
            },
            "line": {
                "type": "string"
            },
            "facebook": {
                "type": "string"
            },
            "list_ids": {
                "type": "array",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "segment_ids": {
                "type": "array",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "custom_fields": {
                "type": "object"
            },
            "created_at": {
                "type": "string",
                "format": "date-time"
            },
            "updated_at": {
                "type": "string",
                "format": "date-time"
            },
            "_metadata": {
                "$ref": "./schemas.json#/selfmetadata"
            }
        },
        "required": [
            "id",
            "list_ids",
            "created_at",
            "updated_at"
        ]
    },
    "selfmetadata": {
        "title": "selfMetadata",
        "type": "object",
        "properties": {
            "self": {
                "type": "string",
                "description": "A link to this object."
            }
        }
    },
    "error": {
        "title": "error",
        "type": "object",
        "properties": {
            "message": {
                "type": "string"
            },
            "field": {
                "type": "string"
            },
            "error_id": {
                "type": "string"
            },
            "parameter": {
                "type": "string"
            }
        },
        "required": [
            "message"
        ]
    },
    "link": {
        "title": "Link",
        "type": "object",
        "properties": {
            "rel": {
                "type": "string"
            },
            "href": {
                "type": "string"
            }
        }
    },
    "metadata": {
        "title": "metadata",
        "type": "object",
        "properties": {
            "prev": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the previous page of results. If this field isn't present, you're at the start of the list."
            },
            "self": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the current page of results."
            },
            "next": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the next page of results. If this field isn't present, you're at the end of the list."
            },
            "count": {
                "type": "number",
                "description": "The number of items in the entire list, i.e., across all pages."
            }
        }
    },
    "webhook": {
        "title": "webhook",
        "type": "object",
        "properties": {
            "url": {
                "type": "string",
                "description": "The URL to invoke in the webhook"
            },
            "nonce": {
                "type": "string",
                "description": "The one time nonce to use when \"signature\" is \"hmac-sha1\"",
                "minLength": 8,
                "maxLength": 32
            }
        },
        "required": [
            "url",
            "nonce"
        ]
    },
    "list": {
        "title": "list",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "description": "The generated ID for your list.",
                "minLength": 36,
                "maxLength": 36
            },
            "name": {
                "type": "string",
                "description": "The name you gave your list."
            },
            "contact_count": {
                "type": "integer",
                "description": "The number of contacts currently stored on the list."
            },
            "_metadata": {
                "$ref": "./schemas.json#/selfmetadata"
            }
        }
    },
    "reserved_field_definitions_response": {
        "title": "reserved_field_definitions_response",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "field_type": {
                    "type": "string",
                    "enum": [
                        "Text",
                        "Number",
                        "Date"
                    ]
                },
                "read_only": {
                    "type": "boolean",
                    "default": false,
                    "description": "When `true` this means API consumers are unable to set the value of this field on contacts."
                }
            }
        },
        "required": [
            "name",
            "field_type"
        ],
        "example": [
            {
                "id": "_rf20_T",
                "name": "automation_id",
                "field_type": "Text",
                "read_only": true
            }
        ]
    },
    "custom_field_definitions_response": {
        "title": "custom_field_definitions_response",
        "type": "object",
        "properties": {
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
            },
            "field_type": {
                "type": "string",
                "enum": [
                    "Text",
                    "Number",
                    "Date"
                ]
            }
        },
        "required": [
            "id",
            "name",
            "field_type"
        ],
        "example": {
            "id": "a1_D",
            "name": "custom_field_name",
            "field_type": "Date"
        }
    },
    "segment_write": {
        "title": "segment_write",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
            },
            "query_dsl": {
                "type": "string",
                "description": "Use this field for adding your query string."
            }
        },
        "required": [
            "name",
            "query_dsl"
        ]
    },
    "segment_summary": {
        "title": "segment_summary",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid"
            },
            "contacts_count": {
                "type": "integer"
            },
            "created_at": {
                "type": "string",
                "description": "ISO8601 of created timestamp\n",
                "format": "date-time"
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
            },
            "parent_list_id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid",
                "description": "The id of the list if this segment is a child of a list.  This implies the query `AND CONTAINS(list_ids, ${parent_list_id})`"
            },
            "sample_updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp the sample was last updated",
                "format": "date-time"
            },
            "updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp the object was last updated",
                "format": "date-time"
            },
            "next_sample_update": {
                "type": "string",
                "description": "ISO8601 string that is equal to `sample_updated_at` plus an internally calculated offset that depends on how often contacts enter or exit segments as the scheduled pipeline updates the samples."
            }
        },
        "required": [
            "id",
            "contacts_count",
            "created_at",
            "sample_updated_at",
            "updated_at"
        ]
    },
    "segment_query_json": {
        "title": "segment_query_json",
        "type": "object",
        "properties": {
            "contacts": {
                "type": "object",
                "properties": {
                    "op": {
                        "type": "string"
                    },
                    "l": {
                        "type": "object",
                        "properties": {
                            "op": {
                                "type": "string"
                            },
                            "l": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string"
                                    },
                                    "l": {
                                        "type": "object",
                                        "properties": {
                                            "v": {
                                                "type": "string"
                                            },
                                            "t": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "r": {
                                        "type": "object",
                                        "properties": {
                                            "v": {
                                                "type": "string"
                                            },
                                            "t": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "r": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string"
                                    },
                                    "l": {
                                        "type": "object",
                                        "properties": {
                                            "v": {
                                                "type": "string"
                                            },
                                            "t": {
                                                "type": "string"
                                            },
                                            "args": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "v": {
                                                            "type": "string"
                                                        },
                                                        "t": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "r": {
                                        "type": "object",
                                        "properties": {
                                            "v": {
                                                "type": "string"
                                            },
                                            "t": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "r": {
                        "type": "object",
                        "properties": {
                            "op": {
                                "type": "string"
                            },
                            "l": {
                                "type": "object",
                                "properties": {
                                    "v": {
                                        "type": "string"
                                    },
                                    "t": {
                                        "type": "string"
                                    }
                                }
                            },
                            "r": {
                                "type": "object",
                                "properties": {
                                    "v": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "t": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "contact_response": {
        "title": "contact_response",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "maxLength": 36,
                "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                "format": "uuid",
                "description": "ID assigned to a contact when added to the system."
            },
            "email": {
                "type": "string",
                "minLength": 3,
                "maxLength": 254,
                "format": "email",
                "description": "Email of the contact. This is a reserved field."
            },
            "alternate_emails": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 0,
                "description": "Alternate emails of the contact. This is a reserved field.",
                "items": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 254,
                    "format": "email"
                }
            },
            "first_name": {
                "type": "string",
                "minLength": 1,
                "description": "First name of the contact. This is a reserved field."
            },
            "last_name": {
                "type": "string",
                "minLength": 1,
                "description": "Last name of the contact. This is a reserved field."
            },
            "address_line_1": {
                "type": "string",
                "minLength": 0,
                "description": "First line of address of the contact. This is a reserved field."
            },
            "address_line_2": {
                "type": "string",
                "minLength": 0,
                "description": "Second line of address of the contact. This is a reserved field."
            },
            "city": {
                "type": "string",
                "minLength": 0,
                "pattern": "^[a-zA-Z\\u0080-\\u024F\\s\\/\\-\\)\\(\\`\\.\\\"\\']+$",
                "description": "City associated with the contact. This is a reserved field."
            },
            "state_province_region": {
                "type": "string",
                "minLength": 0,
                "description": "State associated with the contact. This is a reserved field."
            },
            "postal_code": {
                "type": "integer",
                "description": "Zipcode associated with the address of the contact. This is a reserved field."
            },
            "country": {
                "type": "string",
                "minLength": 0,
                "description": "Country associated with the address of the contact. This is a reserved field."
            },
            "list_ids": {
                "type": "array",
                "uniqueItems": true,
                "description": "IDs of all lists the contact is part of",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "custom_fields": {
                "type": "object",
                "minProperties": 0,
                "description": "The user may choose to create up to 120 custom fields or none at all. This is not a reserved field.",
                "properties": {
                    "custom_field_name1": {
                        "type": "string",
                        "minLength": 0
                    },
                    "custom_field_name2": {
                        "type": "string",
                        "minLength": 0
                    },
                    "": {
                        "type": "string"
                    }
                }
            },
            "segment_ids": {
                "type": "array",
                "uniqueItems": true,
                "description": "IDs of all segments the contact is part of",
                "items": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "required": [
            "id",
            "email",
            "alternate_emails",
            "first_name",
            "last_name",
            "address_line_1",
            "address_line_2",
            "city",
            "state_province_region",
            "postal_code",
            "country",
            "custom_fields"
        ],
        "example": {
            "id": "47d23ab0-d895-4359-a0d1-ffc7a6fc7e70",
            "email": "abcd@gmail.com",
            "alternate_emails": [
                "abcd@yahoo.com",
                "abcd@hotmail.com"
            ],
            "first_name": "Ab",
            "last_name": "Cd",
            "address_line_1": "street address / P.O. box / CompanyName / c/o",
            "address_line_2": "apartment, suite, unit, building, floor etc",
            "city": "Redwood City",
            "state_province_region": "CA",
            "postal_code": 94063,
            "country": "USA",
            "custom_fields": {
                "custom_field_name1": "custom_field_value1",
                "custom_field_name2": "custom_field_value2"
            }
        }
    },
    "TNE-senderID": {
        "title": "Sender ID Response Body",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the sender."
                    }
                }
            },
            {
                "$ref": "./schemas.json#/senders-id-request-body"
            },
            {
                "type": "object",
                "properties": {
                    "verified": {
                        "type": "object",
                        "description": "Only verified sender identities can be used to send email.",
                        "properties": {
                            "status": {
                                "type": "boolean",
                                "description": "Whether the sender identity has been verified. Only verified sender identities can be used to send email."
                            },
                            "reason": {
                                "description": "The reason for a verification failure, or null if verification succeeeded or has yet to take place.",
                                "nullable": true,
                                "type": "string"
                            }
                        }
                    },
                    "updated_at": {
                        "type": "integer",
                        "description": "The time the sender identity was last updated."
                    },
                    "created_at": {
                        "type": "integer",
                        "description": "The time the sender identity was created."
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A sender identity is locked when it is associated with a campaign in the Draft, Scheduled, or In Progress state. You can't update or delete a locked sender identity."
                    }
                }
            }
        ]
    },
    "api-error": {
        "title": "error",
        "type": "object",
        "properties": {
            "message": {
                "type": "string"
            },
            "field": {
                "type": "string"
            },
            "error_id": {
                "type": "string"
            }
        },
        "required": [
            "message",
            "field",
            "error_id"
        ]
    },
    "api-errors": {
        "title": "errors",
        "type": "object",
        "properties": {
            "errors": {
                "type": "array",
                "items": {
                    "$ref": "./schemas.json#/api-error"
                }
            }
        }
    },
    "_metadata": {
        "title": "_metadata",
        "type": "object",
        "properties": {
            "prev": {
                "type": "string",
                "format": "uri"
            },
            "self": {
                "type": "string",
                "format": "uri"
            },
            "next": {
                "type": "string",
                "format": "uri"
            },
            "count": {
                "type": "integer",
                "minimum": 0
            }
        }
    },
    "design-input": {
        "title": "Design Input",
        "allOf": [
            {
                "$ref": "./schemas.json#/design-duplicate-input"
            },
            {
                "$ref": "./schemas.json#/design-common-fields"
            },
            {
                "type": "object",
                "properties": {
                    "html_content": {
                        "type": "string",
                        "description": "The HTML content of the Design.",
                        "maxLength": 1048576
                    },
                    "plain_content": {
                        "type": "string",
                        "description": "Plain text content of the Design.",
                        "maxLength": 1048576,
                        "default": "<generated from html_content if left empty>"
                    }
                },
                "required": [
                    "html_content"
                ]
            }
        ],
        "example": {
            "name": "Ahoy, World!",
            "editor": "design",
            "subject": "Getting Started",
            "html_content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html data-editor-version=\"2\" class=\"sg-campaigns\" xmlns=\"http://www.w3.org/1999/xhtml\">\n    <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\">\n      <!--[if !mso]><!-->\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n      <!--<![endif]-->\n      <!--[if (gte mso 9)|(IE)]>\n      <xml>\n        <o:OfficeDocumentSettings>\n          <o:AllowPNG/>\n          <o:PixelsPerInch>96</o:PixelsPerInch>\n        </o:OfficeDocumentSettings>\n      </xml>\n      <![endif]-->\n      <!--[if (gte mso 9)|(IE)]>\n  <style type=\"text/css\">\n    body {width: 600px;margin: 0 auto;}\n    table {border-collapse: collapse;}\n    table, td {mso-table-lspace: 0pt;mso-table-rspace: 0pt;}\n    img {-ms-interpolation-mode: bicubic;}\n  </style>\n<![endif]-->\n      <style type=\"text/css\">\n    body, p, div {\n      font-family: arial,helvetica,sans-serif;\n      font-size: 14px;\n    }\n    body {\n      color: #000000;\n    }\n    body a {\n      color: #1188E6;\n      text-decoration: none;\n    }\n    p { margin: 0; padding: 0; }\n    table.wrapper {\n      width:100% !important;\n      table-layout: fixed;\n      -webkit-font-smoothing: antialiased;\n      -webkit-text-size-adjust: 100%;\n      -moz-text-size-adjust: 100%;\n      -ms-text-size-adjust: 100%;\n    }\n    img.max-width {\n      max-width: 100% !important;\n    }\n    .column.of-2 {\n      width: 50%;\n    }\n    .column.of-3 {\n      width: 33.333%;\n    }\n    .column.of-4 {\n      width: 25%;\n    }\n    ul ul ul ul  {\n      list-style-type: disc !important;\n    }\n    ol ol {\n      list-style-type: lower-roman !important;\n    }\n    ol ol ol {\n      list-style-type: lower-latin !important;\n    }\n    ol ol ol ol {\n      list-style-type: decimal !important;\n    }\n    @media screen and (max-width:480px) {\n      .preheader .rightColumnContent,\n      .footer .rightColumnContent {\n        text-align: left !important;\n      }\n      .preheader .rightColumnContent div,\n      .preheader .rightColumnContent span,\n      .footer .rightColumnContent div,\n      .footer .rightColumnContent span {\n        text-align: left !important;\n      }\n      .preheader .rightColumnContent,\n      .preheader .leftColumnContent {\n        font-size: 80% !important;\n        padding: 5px 0;\n      }\n      table.wrapper-mobile {\n        width: 100% !important;\n        table-layout: fixed;\n      }\n      img.max-width {\n        height: auto !important;\n        max-width: 100% !important;\n      }\n      a.bulletproof-button {\n        display: block !important;\n        width: auto !important;\n        font-size: 80%;\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      .columns {\n        width: 100% !important;\n      }\n      .column {\n        display: block !important;\n        width: 100% !important;\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n        margin-left: 0 !important;\n        margin-right: 0 !important;\n      }\n      .social-icon-column {\n        display: inline-block !important;\n      }\n    }\n  </style>\n      <!--user entered Head Start--><!--End Head user entered-->\n    </head>\n    <body>\n      <center class=\"wrapper\" data-link-color=\"#1188E6\" data-body-style=\"font-size:14px; font-family:arial,helvetica,sans-serif; color:#000000; background-color:#FFFFFF;\">\n        <div class=\"webkit\">\n          <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" class=\"wrapper\" bgcolor=\"#FFFFFF\">\n            <tr>\n              <td valign=\"top\" bgcolor=\"#FFFFFF\" width=\"100%\">\n                <table width=\"100%\" role=\"content-container\" class=\"outer\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n                  <tr>\n                    <td width=\"100%\">\n                      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n                        <tr>\n                          <td>\n                            <!--[if mso]>\n    <center>\n    <table><tr><td width=\"600\">\n  <![endif]-->\n                                    <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:100%; max-width:600px;\" align=\"center\">\n                                      <tr>\n                                        <td role=\"modules-container\" style=\"padding:0px 0px 0px 0px; color:#000000; text-align:left;\" bgcolor=\"#FFFFFF\" width=\"100%\" align=\"left\"><table class=\"module preheader preheader-hide\" role=\"module\" data-type=\"preheader\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"display: none !important; mso-hide: all; visibility: hidden; opacity: 0; color: transparent; height: 0; width: 0;\">\n    <tr>\n      <td role=\"module-content\">\n        <p></p>\n      </td>\n    </tr>\n  </table><table class=\"module\" role=\"module\" data-type=\"text\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"table-layout: fixed;\" data-muid=\"41f90842-501c-4f08-96c9-17c0f74cb841\" data-mc-module-version=\"2019-10-22\">\n    <tbody>\n      <tr>\n        <td style=\"padding:18px 0px 18px 0px; line-height:22px; text-align:inherit;\" height=\"100%\" valign=\"top\" bgcolor=\"\" role=\"module-content\"><div><div style=\"font-family: inherit; text-align: inherit\">Ahoy, World!</div><div></div></div></td>\n      </tr>\n    </tbody>\n  </table><div data-role=\"module-unsubscribe\" class=\"module\" role=\"module\" data-type=\"unsubscribe\" style=\"color:#444444; font-size:12px; line-height:20px; padding:16px 16px 16px 16px; text-align:Center;\" data-muid=\"4e838cf3-9892-4a6d-94d6-170e474d21e5\"><div class=\"Unsubscribe--addressLine\"><p class=\"Unsubscribe--senderName\" style=\"font-size:12px; line-height:20px;\">{{Sender_Name}}</p><p style=\"font-size:12px; line-height:20px;\"><span class=\"Unsubscribe--senderAddress\">{{Sender_Address}}</span>, <span class=\"Unsubscribe--senderCity\">{{Sender_City}}</span>, <span class=\"Unsubscribe--senderState\">{{Sender_State}}</span> <span class=\"Unsubscribe--senderZip\">{{Sender_Zip}}</span></p></div><p style=\"font-size:12px; line-height:20px;\"><a class=\"Unsubscribe--unsubscribeLink\" href=\"{{{unsubscribe}}}\" target=\"_blank\" style=\"\">Unsubscribe</a> - <a href=\"{{{unsubscribe_preferences}}}\" target=\"_blank\" class=\"Unsubscribe--unsubscribePreferences\" style=\"\">Unsubscribe Preferences</a></p></div></td>\n                                      </tr>\n                                    </table>\n                                    <!--[if mso]>\n                                  </td>\n                                </tr>\n                              </table>\n                            </center>\n                            <![endif]-->\n                          </td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </center>\n    </body>\n  </html>",
            "plain_content": "Ahoy, World!\n\n{{Sender_Name}}\n\n{{Sender_Address}} , {{Sender_City}} , {{Sender_State}} {{Sender_Zip}}\n\nUnsubscribe ( {{{unsubscribe}}} ) - Unsubscribe Preferences ( {{{unsubscribe_preferences}}} )"
        }
    },
    "design-output": {
        "title": "Design Output",
        "allOf": [
            {
                "$ref": "./schemas.json#/design-output-summary"
            },
            {
                "$ref": "./schemas.json#/design-input"
            }
        ]
    },
    "design-output-summary": {
        "title": "Design Output - Summary",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the Design.",
                        "format": "uuid"
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "Datetime that Design was last updated.",
                        "format": "ISO 8601 date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Datetime that Design was created.",
                        "format": "ISO 8601 date-time"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "description": "A Thumbnail preview of the template's html content."
                    }
                }
            },
            {
                "$ref": "./schemas.json#/design-duplicate-input"
            },
            {
                "$ref": "./schemas.json#/design-common-fields"
            }
        ],
        "example": {
            "result": [
                {
                    "id": "3247eaea-c912-42a3-b0bc-60bdaf210396",
                    "name": "Welcome Email",
                    "generate_plain_content": true,
                    "thumbnail_url": "//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/llny8o5b3m636z92p7hbjnmq1jvpka39p370jwtin2s1wxv7x1sgm0y5fk518d0s.png",
                    "subject": "Welcom to the Cake or Pie Cafe",
                    "created_at": "2021-04-09T17:29:46Z",
                    "updated_at": "2021-04-09T17:29:55Z",
                    "editor": "code",
                    "categories": [
                        "welcome",
                        "new customer"
                    ]
                },
                {
                    "id": "02dfd792-f31f-439a-a79e-5c47fbcfdbac",
                    "name": "Monthly Promo",
                    "generate_plain_content": true,
                    "thumbnail_url": "//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/hfyxahd7ues2ajuoeoqq2xe6ibdasl1q89ox0y9ncya2ftpoicssmtf9ddus4c39.png",
                    "subject": "Free Dozen Cupcakes",
                    "created_at": "2021-04-09T17:29:21Z",
                    "updated_at": "2021-04-09T17:29:42Z",
                    "editor": "design",
                    "categories": [
                        "promo",
                        "coupon"
                    ]
                },
                {
                    "id": "e54be823-19ef-4c6f-8b60-efd7514f492d",
                    "name": "Duplicate: Ingrid & Anders",
                    "generate_plain_content": true,
                    "thumbnail_url": "//us-east-2-production-thumbnail-bucket.s3.amazonaws.com/12kni9gjpyb9uxmwr9vk7unycjr70u95zoyhe9sg2zounul2zg7dih1s20k13q2z.png",
                    "subject": "Welcome to Ingrid & Anders!",
                    "created_at": "2020-10-09T17:33:46Z",
                    "updated_at": "2021-04-07T19:57:52Z",
                    "editor": "design",
                    "categories": []
                }
            ],
            "_metadata": {
                "self": "https://api.sendgrid.com/v3/designs?page_token=vHdvHCg0w1F-TmWJcPNpTEnFY2aPEmRBHONwOgZ6TgJbX2_I",
                "count": 3
            }
        }
    },
    "design-duplicate-input": {
        "title": "Design Duplicate Design Input",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of the new design.",
                "default": "Duplicate: <original design name>"
            },
            "editor": {
                "type": "string",
                "description": "The editor used in the UI.",
                "enum": [
                    "code",
                    "design"
                ]
            }
        },
        "example": {
            "name": "Ahoy, Cake or Pie Cafe!",
            "editor": "design"
        }
    },
    "contact-details3": {
        "title": "contact-details3",
        "type": "object",
        "properties": {
            "id": {
                "type": "string"
            },
            "first_name": {
                "type": "string"
            },
            "last_name": {
                "type": "string"
            },
            "unique_name": {
                "type": "string"
            },
            "email": {
                "type": "string"
            },
            "alternate_emails": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "address_line_1": {
                "type": "string"
            },
            "address_line_2": {
                "type": "string"
            },
            "city": {
                "type": "string"
            },
            "state_province_region": {
                "type": "string"
            },
            "country": {
                "type": "string"
            },
            "postal_code": {
                "type": "string"
            },
            "phone_number": {
                "type": "string"
            },
            "whatsapp": {
                "type": "string"
            },
            "line": {
                "type": "string"
            },
            "facebook": {
                "type": "string"
            },
            "list_ids": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "segment_ids": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "custom_fields": {
                "type": "object"
            },
            "created_at": {
                "type": "string"
            },
            "updated_at": {
                "type": "string"
            },
            "_metadata": {
                "$ref": "./schemas.json#/selfmetadata"
            }
        },
        "required": [
            "id",
            "list_ids",
            "segment_ids",
            "created_at",
            "updated_at"
        ]
    },
    "transactional-template-warning": {
        "title": "Warning",
        "type": "object",
        "properties": {
            "message": {
                "type": "string",
                "description": "Warning message for the user"
            }
        },
        "example": {
            "message": "A sample warning message."
        }
    },
    "errors": {
        "title": "Errors",
        "type": "object",
        "description": "If the request is incorrect, an array of errors will be returned.",
        "properties": {
            "errors": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "parameter": {
                            "type": "string",
                            "description": "The parameter in the request body that is incorrect."
                        },
                        "message": {
                            "description": "A description of what is wrong with the field passed in the request.",
                            "nullable": true,
                            "type": "string"
                        },
                        "field": {
                            "nullable": true,
                            "type": "string"
                        }
                    },
                    "required": [
                        "parameter",
                        "message"
                    ]
                }
            }
        },
        "required": [
            "errors"
        ]
    },
    "singlesends-response": {
        "title": "singlesends-response",
        "type": "object",
        "properties": {
            "results": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "This is the ID of the Single Dend you require stats for.",
                            "format": "uuid"
                        },
                        "ab_variation": {
                            "type": "string",
                            "default": "a14dcc63-d651-4c57-9826-4a3705f5c78d",
                            "description": "This is the A/B variation of the Single Send stat returned. If the `group_by` parameter doesn't include `ab_variation` in the request, then the value is \"all\".",
                            "format": "uuid"
                        },
                        "ab_phase": {
                            "type": "string",
                            "default": "all",
                            "description": "This is the A/B phase of the Single Send stat returned. If the `group_by` parameter doesn't include `ab_phase` in the request, then the value is \"all\".",
                            "enum": [
                                "send",
                                "test",
                                "all"
                            ]
                        },
                        "aggregation": {
                            "type": "string",
                            "description": "This describes the time unit to which the stat is rolled up. It is based on the `aggregated_by` parameter included in the request. It can be \"total\" or the date (in YYYY-MM-DD format) the stats are for.",
                            "default": "total"
                        },
                        "stats": {
                            "$ref": "./schemas.json#/metrics"
                        }
                    },
                    "required": [
                        "id",
                        "ab_variation",
                        "ab_phase"
                    ]
                }
            },
            "_metadata": {
                "$ref": "./schemas.json#/metadata"
            }
        },
        "required": [
            "results",
            "_metadata"
        ]
    },
    "automations-response": {
        "title": "automations-response",
        "type": "object",
        "properties": {
            "results": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "This is the ID of the Automation you are requesting stats for.",
                            "format": "uuid"
                        },
                        "aggregation": {
                            "type": "string",
                            "description": "This describes the time unit to which the stat is rolled up. It is based on the `aggregated_by` parameter included in the request. It can be \"total\" or the date (in YYYY-MM-DD format) the stats are for.",
                            "default": "total"
                        },
                        "step_id": {
                            "type": "string",
                            "description": "This is the ID of the step if the stats were requested to be grouped by `step_id`.",
                            "default": "all"
                        },
                        "stats": {
                            "$ref": "./schemas.json#/metrics"
                        }
                    },
                    "required": [
                        "id",
                        "aggregation",
                        "step_id"
                    ]
                }
            },
            "_metadata": {
                "$ref": "./schemas.json#/metadata"
            }
        },
        "required": [
            "results"
        ]
    },
    "metrics": {
        "title": "metrics",
        "type": "object",
        "properties": {
            "bounce_drops": {
                "type": "integer"
            },
            "bounces": {
                "type": "integer"
            },
            "clicks": {
                "type": "integer"
            },
            "delivered": {
                "type": "integer"
            },
            "invalid_emails": {
                "type": "integer"
            },
            "opens": {
                "type": "integer"
            },
            "requests": {
                "type": "integer"
            },
            "spam_report_drops": {
                "type": "integer"
            },
            "spam_reports": {
                "type": "integer"
            },
            "unique_clicks": {
                "type": "integer"
            },
            "unique_opens": {
                "type": "integer"
            },
            "unsubscribes": {
                "type": "integer"
            }
        },
        "required": [
            "bounce_drops",
            "bounces",
            "clicks",
            "delivered",
            "invalid_emails",
            "opens",
            "requests",
            "spam_report_drops",
            "spam_reports",
            "unique_clicks",
            "unique_opens",
            "unsubscribes"
        ]
    },
    "singlesend_search": {
        "title": "singlesend_search",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "leading and trailing wildcard search on name of the Single Send"
            },
            "status": {
                "type": "array",
                "description": "current status of the Single Send",
                "uniqueItems": true,
                "items": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "scheduled",
                        "triggered"
                    ]
                }
            },
            "categories": {
                "type": "array",
                "description": "categories to associate with this Single Send, match any single send that has at least one of the categories",
                "uniqueItems": true,
                "items": {
                    "type": "string"
                }
            }
        }
    },
    "singlesend_request": {
        "title": "singlesend_request",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "The name of the Single Send."
            },
            "categories": {
                "type": "array",
                "uniqueItems": true,
                "maxItems": 10,
                "description": "The categories to associate with this Single Send.",
                "items": {
                    "type": "string"
                }
            },
            "send_at": {
                "type": "string",
                "format": "date-time",
                "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string \"now\". Emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to campaigns sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/)."
            },
            "send_to": {
                "type": "object",
                "properties": {
                    "list_ids": {
                        "type": "array",
                        "description": "The recipient List IDs that will receive the Single Send.",
                        "maxItems": 10,
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "segment_ids": {
                        "type": "array",
                        "description": "The recipient Segment IDs that will receive the Single Send.",
                        "maxItems": 10,
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "all": {
                        "type": "boolean",
                        "description": "Set to `true` to send to All Contacts. If set to `false`, at least one `list_ids` or `segment_ids` value must be provided before the Single Send is scheduled to be sent to recipients.",
                        "default": false
                    }
                }
            },
            "email_config": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "The subject line of the Single Send. Do not include this field when using a `design_id`."
                    },
                    "html_content": {
                        "type": "string",
                        "description": "The HTML content of the Single Send. Do not include this field when using a `design_id`."
                    },
                    "plain_content": {
                        "type": "string",
                        "description": "The plain text content of the Single Send. Do not include this field when using a `design_id`."
                    },
                    "generate_plain_content": {
                        "type": "boolean",
                        "description": "If set to `true`, `plain_content` is always generated from `html_content`. If set to false, `plain_content` is not altered.",
                        "default": true
                    },
                    "design_id": {
                        "type": "string",
                        "description": "A `design_id` can be used in place of `html_content`, `plain_content`, and/or `subject`. You can retrieve a design's ID from the [\"List Designs\" endpoint](https://sendgrid.api-docs.io/v3.0/designs-api/list-designs) or by pulling it from the design's detail page URL in the Marketing Campaigns App."
                    },
                    "editor": {
                        "type": "string",
                        "enum": [
                            "code",
                            "design"
                        ],
                        "description": "The editor \u2014 `\"design\"` or `\"code\"` \u2014 used to modify the Single Send's design in the Marketing Campaigns App.",
                        "default": "code"
                    },
                    "suppression_group_id": {
                        "description": "The ID of the Suppression Group to allow recipients to unsubscribe \u2014 you must provide this or the `custom_unsubscribe_url`.",
                        "nullable": true,
                        "type": "integer"
                    },
                    "custom_unsubscribe_url": {
                        "description": "The URL allowing recipients to unsubscribe \u2014 you must provide this or the `suppression_group_id`.",
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                    },
                    "sender_id": {
                        "description": "The ID of the verified Sender. You can retrieve a verified Sender's ID from the [\"Get Verified Senders\" endpoint](https://sendgrid.api-docs.io/v3.0/sender-verification/get-verified-senders) or by pulling it from the Sender's detail page URL in the SendGrid App.",
                        "nullable": true,
                        "type": "integer"
                    },
                    "ip_pool": {
                        "description": "The name of the IP Pool from which the Single Send emails are sent.",
                        "nullable": true,
                        "type": "string"
                    }
                }
            }
        },
        "required": [
            "name"
        ]
    },
    "singlesend_schedule": {
        "title": "singlesend-schedule",
        "type": "object",
        "properties": {
            "send_at": {
                "type": "string",
                "format": "date-time",
                "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string \"now\". Emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to campaigns sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/)."
            },
            "status": {
                "type": "string",
                "enum": [
                    "draft",
                    "scheduled",
                    "triggered"
                ]
            }
        },
        "required": [
            "send_at"
        ]
    },
    "singlesend_warning": {
        "title": "singlesend_warning",
        "type": "object",
        "properties": {
            "warnings": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "field": {
                            "type": "string"
                        },
                        "warning_id": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "to_email_array": {
        "title": "To Email Array",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The intended recipient's email address."
                },
                "name": {
                    "type": "string",
                    "description": "The intended recipient's name."
                }
            },
            "required": [
                "email"
            ]
        },
        "example": [
            {
                "email": "john_doe@example.com",
                "name": "John Doe"
            }
        ]
    },
    "event-webhook-update-oauth-request": {
        "title": "Webhooks: Event Webhook Update with OAuth Request",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the event webhook is enabled."
            },
            "url": {
                "type": "string",
                "description": "The URL that you want the event webhook to POST to."
            },
            "group_resubscribe": {
                "type": "boolean",
                "description": "Recipient resubscribes to specific group by updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "delivered": {
                "type": "boolean",
                "description": "Message has been successfully delivered to the receiving server."
            },
            "group_unsubscribe": {
                "type": "boolean",
                "description": "Recipient unsubscribe from specific group, by either direct link or updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "spam_report": {
                "type": "boolean",
                "description": "Recipient marked a message as spam."
            },
            "bounce": {
                "type": "boolean",
                "description": "Receiving server could not or would not accept message."
            },
            "deferred": {
                "type": "boolean",
                "description": "Recipient's email server temporarily rejected message."
            },
            "unsubscribe": {
                "type": "boolean",
                "description": "Recipient clicked on message's subscription management link. You need to enable Subscription Tracking for getting this type of event."
            },
            "processed": {
                "type": "boolean",
                "description": "Message has been received and is ready to be delivered."
            },
            "open": {
                "type": "boolean",
                "description": "Recipient has opened the HTML message. You need to enable Open Tracking for getting this type of event."
            },
            "click": {
                "type": "boolean",
                "description": "Recipient clicked on a link within the message. You need to enable Click Tracking for getting this type of event."
            },
            "dropped": {
                "type": "boolean",
                "description": "You may see the following drop reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota"
            },
            "oauth_client_id": {
                "type": "string",
                "description": "The client ID Twilio SendGrid sends to your OAuth server or service provider to generate an OAuth access token. When passing data in this field, you must also include the oauth_token_url field."
            },
            "oauth_client_secret": {
                "type": "string",
                "description": "This secret is needed only once to create an access token. SendGrid will store this secret, allowing you to update your Client ID and Token URL without passing the secret to SendGrid again.  When passing data in this field, you must also include the oauth_client_id and oauth_token_url fields."
            },
            "oauth_token_url": {
                "type": "string",
                "description": "The URL where Twilio SendGrid sends the Client ID and Client Secret to generate an access token. This should be your OAuth server or service provider. When passing data in this field, you must also include the oauth_client_id field."
            }
        },
        "required": [
            "enabled",
            "url",
            "group_resubscribe",
            "delivered",
            "group_unsubscribe",
            "spam_report",
            "bounce",
            "deferred",
            "unsubscribe",
            "processed",
            "open",
            "click",
            "dropped"
        ]
    },
    "webhooks-event-webhook-request": {
        "title": "Webhooks: Event Webhook Request",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the event webhook is enabled."
            },
            "url": {
                "type": "string",
                "description": "The URL that you want the event webhook to POST to."
            },
            "group_resubscribe": {
                "type": "boolean",
                "description": "Recipient resubscribes to specific group by updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "delivered": {
                "type": "boolean",
                "description": "Message has been successfully delivered to the receiving server."
            },
            "group_unsubscribe": {
                "type": "boolean",
                "description": "Recipient unsubscribe from specific group, by either direct link or updating preferences. You need to enable Subscription Tracking for getting this type of event."
            },
            "spam_report": {
                "type": "boolean",
                "description": "Recipient marked a message as spam."
            },
            "bounce": {
                "type": "boolean",
                "description": "Receiving server could not or would not accept message."
            },
            "deferred": {
                "type": "boolean",
                "description": "Recipient's email server temporarily rejected message."
            },
            "unsubscribe": {
                "type": "boolean",
                "description": "Recipient clicked on message's subscription management link. You need to enable Subscription Tracking for getting this type of event."
            },
            "processed": {
                "type": "boolean",
                "description": "Message has been received and is ready to be delivered."
            },
            "open": {
                "type": "boolean",
                "description": "Recipient has opened the HTML message. You need to enable Open Tracking for getting this type of event."
            },
            "click": {
                "type": "boolean",
                "description": "Recipient clicked on a link within the message. You need to enable Click Tracking for getting this type of event."
            },
            "dropped": {
                "type": "boolean",
                "description": "You may see the following drop reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota"
            },
            "oauth_client_id": {
                "type": "string",
                "description": "The client ID Twilio SendGrid sends to your OAuth server or service provider to generate an OAuth access token. When passing data in this field, you must also include the oauth_token_url field."
            },
            "oauth_token_url": {
                "type": "string",
                "description": "The URL where Twilio SendGrid sends the Client ID and Client Secret to generate an access token. This should be your OAuth server or service provider. When passing data in this field, you must also include the oauth_client_id field."
            }
        },
        "required": [
            "enabled",
            "url",
            "group_resubscribe",
            "delivered",
            "group_unsubscribe",
            "spam_report",
            "bounce",
            "deferred",
            "unsubscribe",
            "processed",
            "open",
            "click",
            "dropped"
        ]
    },
    "reply_to_email_object": {
        "title": "Reply_to Email Object",
        "type": "object",
        "properties": {
            "email": {
                "type": "string",
                "format": "email",
                "description": "The email address where any replies or bounces will be returned."
            },
            "name": {
                "type": "string",
                "description": "A name or title associated with the `reply_to` email address."
            }
        },
        "required": [
            "email"
        ],
        "example": {
            "email": "jane_doe@example.com",
            "name": "Jane Doe"
        }
    },
    "automations-link-stats-response": {
        "title": "automations-link-stats-response",
        "type": "object",
        "properties": {
            "results": {
                "type": "array",
                "description": "",
                "items": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "This is the URL of the link clicked. If `{{custom_fields}}` are part of the URL, they will be included.",
                            "format": "uri"
                        },
                        "url_location": {
                            "type": "integer",
                            "description": "This is the location of the link clicked in each Automation step. Links are located according to their position within the message; the topmost link has index `0`.",
                            "minimum": 0
                        },
                        "step_id": {
                            "type": "string",
                            "description": "This is the ID of the step if the stats were requested to be grouped by `step_id`.",
                            "format": "uuid"
                        },
                        "clicks": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "The number of clicks on this particular link."
                        }
                    },
                    "required": [
                        "url",
                        "step_id",
                        "clicks"
                    ]
                }
            },
            "total_clicks": {
                "type": "integer"
            },
            "_metadata": {
                "$ref": "./schemas.json#/link-tracking-metadata"
            }
        },
        "required": [
            "results",
            "total_clicks",
            "_metadata"
        ]
    },
    "link-tracking-metadata": {
        "title": "link tracking metadata",
        "type": "object",
        "properties": {
            "prev": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the previous page of results. If this field isn't present, you're at the start of the list."
            },
            "self": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the current page of results."
            },
            "next": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the next page of results. If this field isn't present, you're at the end of the list."
            },
            "count": {
                "type": "number",
                "description": "The number of items in the entire list, i.e., across all pages."
            }
        }
    },
    "singlesends-link-stats-response": {
        "title": "singlesends-link-stats-response",
        "type": "object",
        "properties": {
            "results": {
                "type": "array",
                "description": "This is the index of the link's location in the email contents.",
                "items": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "type": "string",
                            "description": "This is the URL of the link clicked. If `{{custom_fields}}` are part of the URL, they will be included.",
                            "format": "uri"
                        },
                        "url_location": {
                            "type": "integer",
                            "description": "This is the location of the link clicked in each Single Send A/B variation, or in the Single Send itself if there are no variations. Links are numbered from the top down; the topmost link is index `0`.",
                            "minimum": 0
                        },
                        "ab_variation": {
                            "type": "string",
                            "description": "This is the A/B variation of the Single Send stat returned. It is set to `\"all\"` if the `ab_variation` query parameter was not set in the request and `group_by` doesn't contain `ab_variation`.",
                            "format": "uuid"
                        },
                        "ab_phase": {
                            "type": "string",
                            "description": "This is the A/B phase of the Single Send stat returned. If the `ab_phase` query parameter was not provided, it will return `\"all\"`.",
                            "enum": [
                                "send",
                                "test",
                                "all"
                            ]
                        },
                        "clicks": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "the number of clicks on this particular link"
                        }
                    },
                    "required": [
                        "url",
                        "ab_variation",
                        "ab_phase",
                        "clicks"
                    ]
                }
            },
            "_metadata": {
                "$ref": "./schemas.json#/link-tracking-metadata"
            },
            "total_clicks": {
                "type": "integer"
            }
        },
        "required": [
            "results",
            "_metadata"
        ]
    },
    "domain-authentication-200-response": {
        "title": "Domain Authentication 200 Response",
        "type": "array",
        "items": {
            "allOf": [
                {
                    "$ref": "./schemas.json#/authentication_domain"
                },
                {
                    "type": "object",
                    "properties": {
                        "subusers": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "description": "The ID of the subuser that this authenticated domain will be associated with."
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "The username of the subuser that this authenticated domain is associated with."
                                    }
                                }
                            }
                        },
                        "last_validation_attempt_at": {
                            "type": "integer",
                            "description": "A Unix epoch timestamp representing the last time of a validation attempt."
                        }
                    }
                }
            ]
        },
        "example": [
            {
                "id": 1,
                "user_id": 7,
                "subdomain": "mail",
                "domain": "example.com",
                "username": "jane@example.com",
                "ips": [
                    "192.168.1.1",
                    "192.168.1.2"
                ],
                "custom_spf": true,
                "default": true,
                "legacy": false,
                "automatic_security": true,
                "valid": true,
                "dns": {
                    "mail_cname": {
                        "valid": true,
                        "type": "cname",
                        "host": "mail.example.com",
                        "data": "u7.wl.sendgrid.net"
                    },
                    "dkim1": {
                        "valid": true,
                        "type": "cname",
                        "host": "s1._domainkey.example.com",
                        "data": "s1._domainkey.u7.wl.sendgrid.net"
                    },
                    "dkim2": {
                        "valid": true,
                        "type": "cname",
                        "host": "s2._domainkey.example.com",
                        "data": "s2._domainkey.u7.wl.sendgrid.net"
                    }
                }
            },
            {
                "id": 2,
                "user_id": 8,
                "subdomain": "new",
                "domain": "example2.com",
                "username": "john@example2.com",
                "ips": [],
                "custom_spf": false,
                "default": true,
                "legacy": false,
                "automatic_security": true,
                "valid": false,
                "dns": {
                    "mail_cname": {
                        "valid": false,
                        "type": "mx",
                        "host": "news.example2.com",
                        "data": "sendgrid.net"
                    },
                    "dkim1": {
                        "valid": false,
                        "type": "txt",
                        "host": "example2.com",
                        "data": "k=rsa; t=s; p=publicKey"
                    },
                    "dkim2": {
                        "valid": false,
                        "type": "txt",
                        "host": "example2.com",
                        "data": "k=rsa; t=s p=publicKey"
                    }
                }
            }
        ]
    },
    "abtest_summary": {
        "title": "abTest_summary",
        "properties": {
            "type": {
                "type": "string",
                "description": "What differs between the A/B tests",
                "enum": [
                    "subject",
                    "content"
                ]
            },
            "winner_criteria": {
                "type": "string",
                "description": "How the winner will be decided",
                "enum": [
                    "open",
                    "click",
                    "manual"
                ]
            },
            "test_percentage": {
                "type": "integer",
                "description": "What percentage of your recipient will be included in your A/B testing"
            },
            "duration": {
                "type": "string",
                "description": "How long the A/B Testing will last"
            },
            "winning_template_id": {
                "type": "string",
                "description": "Winner of the A/B Test"
            },
            "winner_selected_at": {
                "description": "When the winner was selected",
                "nullable": true,
                "type": "string"
            },
            "expiration_date": {
                "description": "Last day to select an A/B Test Winner",
                "nullable": true,
                "type": "string"
            }
        },
        "required": [
            "type",
            "winner_criteria",
            "test_percentage",
            "duration",
            "winning_template_id",
            "winner_selected_at",
            "expiration_date"
        ],
        "nullable": true,
        "type": "object"
    },
    "singlesend_response_short": {
        "title": "singlesend_response_short",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "format": "uuid"
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "name of the Single Send"
            },
            "abtest": {
                "$ref": "./schemas.json#/abtest_summary"
            },
            "status": {
                "type": "string",
                "enum": [
                    "draft",
                    "scheduled",
                    "triggered"
                ],
                "description": "current status of the Single Send"
            },
            "categories": {
                "type": "array",
                "uniqueItems": true,
                "maxItems": 10,
                "description": "categories to associate with this Single Send",
                "items": {
                    "type": "string"
                }
            },
            "send_at": {
                "type": "string",
                "format": "date-time",
                "description": "The ISO 8601 time at which to send the Single Send. This must be in future or the string \"now\". Emails can be scheduled up to 72 hours in advance. However, this scheduling constraint does not apply to campaigns sent via [Marketing Campaigns](https://docs.sendgrid.com/ui/sending-email/how-to-send-email-with-marketing-campaigns/)."
            },
            "is_abtest": {
                "type": "boolean",
                "description": "true if the Single Send's AB Test functionality has been toggled on"
            },
            "updated_at": {
                "type": "string",
                "description": "the ISO 8601 time at which the Single Send was last updated",
                "format": "date-time"
            },
            "created_at": {
                "type": "string",
                "description": "the ISO 8601 time at which the Single Send was created",
                "format": "date-time"
            }
        },
        "required": [
            "id",
            "name",
            "abtest",
            "status",
            "categories",
            "is_abtest",
            "updated_at",
            "created_at"
        ]
    },
    "cc_bcc_email_object": {
        "title": "CC BCC Email Object",
        "type": "object",
        "properties": {
            "email": {
                "type": "string",
                "format": "email",
                "description": "The intended recipient's email address."
            },
            "name": {
                "type": "string",
                "description": "The intended recipient's name."
            }
        },
        "required": [
            "email"
        ],
        "example": {
            "email": "jane_doe@example.com",
            "name": "Jane Doe"
        }
    },
    "verified-sender-request-schema": {
        "title": "Verified Sender Request Schema",
        "type": "object",
        "properties": {
            "nickname": {
                "type": "string",
                "maxLength": 100
            },
            "from_email": {
                "type": "string",
                "maxLength": 256,
                "format": "email"
            },
            "from_name": {
                "type": "string",
                "maxLength": 256
            },
            "reply_to": {
                "type": "string",
                "maxLength": 256,
                "format": "email"
            },
            "reply_to_name": {
                "type": "string",
                "maxLength": 256
            },
            "address": {
                "type": "string",
                "maxLength": 100
            },
            "address2": {
                "type": "string",
                "maxLength": 100
            },
            "state": {
                "type": "string",
                "maxLength": 2
            },
            "city": {
                "type": "string",
                "maxLength": 150
            },
            "zip": {
                "type": "string",
                "maxLength": 10
            },
            "country": {
                "type": "string",
                "maxLength": 100
            }
        },
        "required": [
            "nickname",
            "from_email",
            "reply_to"
        ],
        "example": {
            "nickname": "Orders",
            "from_email": "orders@example.com",
            "from_name": "Example Orders",
            "reply_to": "orders@example.com",
            "reply_to_name": "Example Orders",
            "address": "1234 Fake St",
            "address2": "PO Box 1234",
            "state": "CA",
            "city": "San Francisco",
            "country": "USA",
            "zip": "94105"
        }
    },
    "verified-sender-response-schema": {
        "title": "Verified Sender Response Schema",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer"
            },
            "nickname": {
                "type": "string"
            },
            "from_email": {
                "type": "string"
            },
            "from_name": {
                "type": "string"
            },
            "reply_to": {
                "type": "string"
            },
            "reply_to_name": {
                "type": "string"
            },
            "address": {
                "type": "string"
            },
            "address2": {
                "type": "string"
            },
            "state": {
                "type": "string"
            },
            "city": {
                "type": "string"
            },
            "zip": {
                "type": "string"
            },
            "country": {
                "type": "string"
            },
            "verified": {
                "type": "boolean"
            },
            "locked": {
                "type": "boolean"
            }
        },
        "example": {
            "id": 1234,
            "nickname": "Example Orders",
            "from_email": "orders@example.com",
            "from_name": "Example Orders",
            "reply_to": "orders@example.com",
            "reply_to_name": "Example Orders",
            "address": "1234 Fake St.",
            "address2": "PO Box 1234",
            "state": "CA",
            "city": "San Francisco",
            "country": "USA",
            "zip": "94105",
            "verified": true,
            "locked": false
        }
    },
    "ip-access-response": {
        "title": "IP Access Response",
        "type": "object",
        "properties": {
            "result": {
                "type": "array",
                "description": "An array listing all of your allowed IPs.",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "The ID of the allowed IP."
                        },
                        "ip": {
                            "type": "string",
                            "description": "The allowed IP."
                        },
                        "created_at": {
                            "type": "integer",
                            "description": "A Unix timestamp indicating when the IP was added to the allow list."
                        },
                        "updated_at": {
                            "type": "integer",
                            "description": "A Unix timestamp indicating when the IPs allow status was most recently updated."
                        }
                    }
                }
            }
        },
        "example": {
            "result": [
                {
                    "id": 1,
                    "ip": "192.168.1.1/32",
                    "created_at": 1441824715,
                    "updated_at": 1441824715
                },
                {
                    "id": 2,
                    "ip": "192.0.0.0/8",
                    "created_at": 1441824715,
                    "updated_at": 1441824715
                },
                {
                    "id": 3,
                    "ip": "192.168.1.3/32",
                    "created_at": 1441824715,
                    "updated_at": 1441824715
                }
            ]
        }
    },
    "stats-advanced-global-stats": {
        "title": "Stats: Advanced Global Stats",
        "allOf": [
            {
                "$ref": "./schemas.json#/advanced_stats_clicks_opens"
            },
            {
                "type": "object",
                "properties": {
                    "blocks": {
                        "type": "integer",
                        "description": "The number of emails that were not allowed to be delivered by ISPs."
                    },
                    "bounce_drops": {
                        "type": "integer",
                        "description": "The number of emails that were dropped because of a bounce."
                    },
                    "bounces": {
                        "type": "integer",
                        "description": "The number of emails that bounced instead of being delivered."
                    },
                    "deferred": {
                        "type": "integer",
                        "description": "The number of emails that temporarily could not be delivered. "
                    },
                    "delivered": {
                        "type": "integer",
                        "description": "The number of emails SendGrid was able to confirm were actually delivered to a recipient."
                    },
                    "invalid_emails": {
                        "type": "integer",
                        "description": "The number of recipients who had malformed email addresses or whose mail provider reported the address as invalid."
                    },
                    "processed": {
                        "type": "integer",
                        "description": "Requests from your website, application, or mail client via SMTP Relay or the API that SendGrid processed."
                    },
                    "requests": {
                        "type": "integer",
                        "description": "The number of emails that were requested to be delivered."
                    },
                    "spam_report_drops": {
                        "type": "integer",
                        "description": "The number of emails that were dropped due to a recipient previously marking your emails as spam."
                    },
                    "spam_reports": {
                        "type": "integer",
                        "description": "The number of recipients who marked your email as spam."
                    },
                    "unsubscribe_drops": {
                        "type": "integer",
                        "description": "The number of emails dropped due to a recipient unsubscribing from your emails."
                    },
                    "unsubscribes": {
                        "type": "integer",
                        "description": "The number of recipients who unsubscribed from your emails."
                    }
                }
            }
        ]
    },
    "stats-advanced-stats-base-schema": {
        "title": "Stats: Advanced Stats Base Schema",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date the stats were gathered."
                },
                "stats": {
                    "type": "array",
                    "description": "The individual email activity stats.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "metrics": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        }
    },
    "full-segment": {
        "title": "full_segment",
        "allOf": [
            {
                "$ref": "./schemas.json#/segment_summary"
            },
            {
                "type": "object",
                "properties": {
                    "contacts_sample": {
                        "type": "array",
                        "items": {
                            "$ref": "./schemas.json#/contact_response"
                        }
                    },
                    "query_json": {
                        "type": "object",
                        "description": "AST representation of the query DSL"
                    }
                },
                "required": [
                    "contacts_sample"
                ]
            },
            {
                "$ref": "./schemas.json#/segment_write_v2"
            }
        ],
        "example": {
            "id": "58567a46-305e-48d1-b4f8-a006c906920e",
            "contacts_count": 9266921,
            "created_at": "2085-08-08T21:07:05.692Z",
            "sample_updated_at": "3407-09-25T04:25:02.140Z",
            "updated_at": "4431-05-07T22:23:22.352Z",
            "contacts_sample": [
                {
                    "contact_id": "c1183ada-b784-49ac-9b1f-50e73578a6dc",
                    "primary_email": "ft88@d.izxx",
                    "alternate_emails": [
                        "yKDUP11FDch@QoU.vwy",
                        "ZNSN5@czAMqPi.at",
                        "7wr51kFVVKlcBSH@DWxOueOZepetzBrku.qosk",
                        "iib-ObtO7Fxz5@vLJPRIFKPOqJGCEqcIDab.ypn"
                    ],
                    "first_name": "est",
                    "last_name": "eiusmod in laboris velit cupidatat",
                    "address_line_1": "sunt aliqua",
                    "address_line_2": "sit proident Lorem veniam labore",
                    "city": "\u009c\u020e\u0163\u0238\u00db\t\u010d\u000bC\u0141",
                    "state_province_region": "ut proident",
                    "postal_code": 30296612,
                    "country": "do reprehenderit qui",
                    "custom_fields": {
                        "custom_field_name2": "in consectetur ut aliqua sint",
                        "custom_field_name1": "esse"
                    }
                }
            ],
            "name": "culpa",
            "query_dsl": "cillum eiusmod",
            "parent_list_id": "2357714d-3d82-4c80-826c-b44a4147f81c",
            "next_sample_update": ""
        }
    },
    "senders-id-request-body": {
        "title": "Senders ID Request Body",
        "type": "object",
        "properties": {
            "nickname": {
                "type": "string",
                "description": "A nickname for the sender identity. Not used for sending."
            },
            "from": {
                "type": "object",
                "required": [
                    "email",
                    "name"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "This is where the email will appear to originate from for your recipient"
                    },
                    "name": {
                        "type": "string",
                        "description": "This is the name appended to the from email field. IE - Your name or company name."
                    }
                }
            },
            "reply_to": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "This is the email that your recipient will reply to."
                    },
                    "name": {
                        "type": "string",
                        "description": "This is the name appended to the reply to email field. IE - Your name or company name."
                    }
                },
                "required": [
                    "email"
                ]
            },
            "address": {
                "type": "string",
                "description": "The physical address of the sender identity."
            },
            "address_2": {
                "type": "string",
                "description": "Additional sender identity address information."
            },
            "city": {
                "type": "string",
                "description": "The city of the sender identity."
            },
            "state": {
                "type": "string",
                "description": "The state of the sender identity."
            },
            "zip": {
                "type": "string",
                "description": "The zipcode of the sender identity."
            },
            "country": {
                "type": "string",
                "description": "The country of the sender identity."
            }
        },
        "required": [
            "nickname",
            "from",
            "address",
            "city",
            "country"
        ]
    },
    "enforced-tls-request-response": {
        "title": "Enforced TLS Request Response",
        "type": "object",
        "properties": {
            "require_tls": {
                "type": "boolean",
                "description": "Indicates if you want to require your recipients to support TLS. "
            },
            "require_valid_cert": {
                "type": "boolean",
                "description": "Indicates if you want to require your recipients to have a valid certificate."
            },
            "version": {
                "type": "number",
                "format": "float",
                "description": "The minimum required TLS certificate version.",
                "default": 1.1,
                "enum": [
                    1.1,
                    1.2,
                    1.3
                ]
            }
        },
        "example": {
            "require_tls": true,
            "require_valid_cert": true,
            "version": 1.1
        }
    },
    "singlesend_response": {
        "title": "singlesend_response",
        "allOf": [
            {
                "$ref": "./schemas.json#/singlesend_request"
            },
            {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "scheduled",
                            "triggered"
                        ],
                        "description": "current status of the Single Send"
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "the ISO 8601 time at which the Single Send was last updated",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "the ISO 8601 time at which the Single Send was created",
                        "format": "date-time"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string"
                                },
                                "warning_id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "status",
                    "created_at"
                ]
            }
        ],
        "example": {
            "name": "Example API Created Single Send",
            "id": "27c21bbf-a12c-440b-b8bf-c526975328ca",
            "status": "scheduled",
            "created_at": "2020-05-18T17:28:27.272Z",
            "send_at": "2020-06-16T00:19:55.106Z",
            "categories": [
                "unique opens"
            ],
            "email_config": {
                "subject": "",
                "html_content": "",
                "plain_content": "",
                "generate_plain_content": true,
                "editor": "code",
                "suppression_group_id": null,
                "custom_unsubscribe_url": null,
                "sender_id": null,
                "ip_pool": null
            },
            "send_to": {
                "list_ids": [
                    "f2fe66a1-43f3-4e3a-87b1-c6a600d805f0"
                ]
            }
        }
    },
    "design-common-fields": {
        "title": "Design Common Fields",
        "allOf": [
            {
                "$ref": "./schemas.json#/design-duplicate-input"
            },
            {
                "type": "object",
                "properties": {
                    "generate_plain_content": {
                        "type": "boolean",
                        "description": "If true, plain_content is always generated from html_content. If false, plain_content is not altered.",
                        "default": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of the Design.",
                        "maxLength": 5000
                    },
                    "categories": {
                        "type": "array",
                        "description": "The list of categories applied to the design",
                        "uniqueItems": true,
                        "maxItems": 10,
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                }
            }
        ]
    },
    "invalid-email": {
        "title": "Invalid Email",
        "type": "object",
        "properties": {
            "created": {
                "type": "integer",
                "description": "A Unix timestamp indicating when the email address was added to the invalid emails list."
            },
            "email": {
                "type": "string",
                "description": "The email address that was marked as invalid.",
                "format": "email"
            },
            "reason": {
                "type": "string",
                "description": "The reason that the email address was marked as invalid."
            }
        },
        "example": {
            "created": 1620141015,
            "email": "invalid@example.com",
            "reason": "Mail domain mentioned in email address is unknown"
        }
    },
    "email-activity-response-common-fields": {
        "title": "Email Activity Response Common Fields",
        "type": "object",
        "properties": {
            "from_email": {
                "type": "string",
                "format": "email",
                "default": "test0@example.com",
                "description": "The 'From' email address used to deliver the message. This address should be a verified sender in your Twilio SendGrid account."
            },
            "msg_id": {
                "type": "string",
                "description": "A unique ID assigned to the message. This ID can be used to retrieve activity data for the specific message."
            },
            "subject": {
                "type": "string",
                "description": "The email's subject line."
            },
            "to_email": {
                "type": "string",
                "format": "email",
                "description": "The intended recipient's email address."
            },
            "status": {
                "type": "string",
                "description": "The message's status.",
                "enum": [
                    "processed",
                    "delivered",
                    "not_delivered"
                ]
            }
        }
    },
    "suppressions-request": {
        "title": "Suppressions Request Body",
        "type": "object",
        "properties": {
            "recipient_emails": {
                "type": "array",
                "description": "The array of email addresses to add or find.",
                "items": {
                    "type": "string",
                    "format": "email"
                }
            }
        },
        "required": [
            "recipient_emails"
        ],
        "example": {
            "recipient_emails": [
                "test1@example.com",
                "test2@example.com"
            ]
        }
    },
    "suppression-group-request-base": {
        "title": "Suppression Group Request Base",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of your suppression group. Required when creating a group.",
                "maxLength": 30
            },
            "description": {
                "type": "string",
                "description": "A brief description of your suppression group. Required when creating a group.",
                "maxLength": 100
            },
            "is_default": {
                "type": "boolean",
                "description": "Indicates if you would like this to be your default suppression group."
            }
        }
    },
    "sso-certificate-body": {
        "title": "Single Sign-On Certificate Body",
        "type": "object",
        "properties": {
            "public_certificate": {
                "type": "string",
                "description": "This certificate is used by Twilio SendGrid to verify that SAML requests are coming from Okta. This is called the X509 certificate in the Twilio SendGrid UI."
            },
            "id": {
                "type": "number",
                "description": "A unique ID assigned to the certificate by SendGrid."
            },
            "not_before": {
                "type": "number",
                "description": "A unix timestamp (e.g., 1603915954) that indicates the time before which the certificate is not valid."
            },
            "not_after": {
                "type": "number",
                "description": "A unix timestamp (e.g., 1603915954) that indicates the time after which the certificate is no longer valid."
            },
            "intergration_id": {
                "type": "string",
                "description": "An ID that matches a certificate to a specific IdP integration."
            }
        },
        "example": {
            "public_certificate": "<your x509 certificate>",
            "id": 66138975,
            "not_before": 1621289880,
            "not_after": 1621289880,
            "intergration_id": "b0b98502-9408-4b24-9e3d-31ed7cb15312"
        }
    },
    "sso-integration": {
        "title": "Single Sign-On Integration",
        "allOf": [
            {
                "$ref": "./schemas.json#/create-integration-request"
            },
            {
                "type": "object",
                "properties": {
                    "last_updated": {
                        "type": "number",
                        "description": "A timestamp representing the last time the configuration was modified."
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique ID assigned to the configuration by SendGrid."
                    },
                    "single_signon_url": {
                        "type": "string",
                        "description": "The URL where your IdP should POST its SAML response. This is the Twilio SendGrid URL that is responsible for receiving and parsing a SAML assertion. This is the same URL as the Audience URL when using SendGrid."
                    },
                    "audience_url": {
                        "type": "string",
                        "description": "The URL where your IdP should POST its SAML response. This is the Twilio SendGrid URL that is responsible for receiving and parsing a SAML assertion. This is the same URL as the Single Sign-On URL when using SendGrid."
                    }
                },
                "required": [
                    "last_updated"
                ]
            }
        ]
    },
    "create-integration-request": {
        "title": "Create Integration Request",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of your integration. This name can be anything that makes sense for your organization (eg. Twilio SendGrid)"
            },
            "enabled": {
                "type": "boolean",
                "description": "Indicates if the integration is enabled."
            },
            "signin_url": {
                "type": "string",
                "description": "The IdP's SAML POST endpoint. This endpoint should receive requests and initiate an SSO login flow. This is called the \"Embed Link\" in the Twilio SendGrid UI."
            },
            "signout_url": {
                "type": "string",
                "description": "This URL is relevant only for an IdP-initiated authentication flow. If a user authenticates from their IdP, this URL will return them to their IdP when logging out."
            },
            "entity_id": {
                "type": "string",
                "description": "An identifier provided by your IdP to identify Twilio SendGrid in the SAML interaction. This is called the \"SAML Issuer ID\" in the Twilio SendGrid UI."
            },
            "completed_integration": {
                "type": "boolean",
                "description": "Indicates if the integration is complete."
            }
        },
        "required": [
            "name",
            "enabled",
            "signin_url",
            "signout_url",
            "entity_id"
        ]
    },
    "sso-teammates-base-request-props": {
        "type": "object",
        "properties": {
            "first_name": {
                "type": "string",
                "description": "Set this property to the Teammate's first name."
            },
            "last_name": {
                "type": "string",
                "description": "Set this property to the Teammate's last name."
            },
            "is_admin": {
                "type": "boolean",
                "description": "Set this property to `true` if the Teammate has admin permissions. You should not include the `scopes` or `persona` properties when setting the `is_admin` property to `true`—an admin will be allocated all scopes. See our [Teammate permissions documenation](https://docs.sendgrid.com/ui/account-and-settings/teammate-permissions) for a complete list of scopes."
            },
            "persona": {
                "type": "string",
                "description": "A persona represents a group of permissions often required by a type of Teammate such as a developer or marketer. Assigning a persona allows you to allocate a group of pre-defined permissions rather than assigning each scope individually. Currently available personas include: `accountant`, `developer`, `marketer`, and `observer`. See the [Teammate permissions documentation](https://docs.sendgrid.com/ui/account-and-settings/teammate-permissions) for a full list of the scopes assigned to each persona.",
                "enum": [
                    "accountant",
                    "developer",
                    "marketer",
                    "observer"
                ]
            },
            "scopes": {
                "type": "array",
                "description": "Add or remove permissions from a Teammate using this `scopes` property. See our [Teammate permissions documentation](https://docs.sendgrid.com/ui/account-and-settings/teammate-permissions) for a complete list of available scopes. You should not include this propety in the request when using the `persona` property or when setting the `is_admin` property to `true`—assigning a `persona` or setting `is_admin` to `true` will allocate a group of permissions to the Teammate.",
                "items": {
                    "type": "string"
                }
            },
            "has_restricted_subuser_access": {
                "type": "boolean",
                "description": "Set this property to `true` to give the Teammate permissions to operate only on behalf of a Subuser. This property value must be `true` if the `subuser_access` property is not empty. The `subuser_access` property determines which Subusers the Teammate may act on behalf of. If this property is set to `true`, you cannot specify individual `scopes`, assing a `persona`, or set `is_admin` to `true`—a Teammate cannot specify scopes for the parent account and have restricted Subuser access."
            },
            "subuser_access": {
                "type": "array",
                "description": "Specify which Subusers the Teammate may access and act on behalf of with this property. If this property is populated, you must set the `has_restricted_subuser_access` property to `true`.",
                "items": {
                    "type": "object",
                    "description": "An array of Subusers to which the Teammate should have access.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Set this property to the ID of a Subuser to which the Teammate should have access. You can retrieve Subuser IDs from the [Subusers API](https://docs.sendgrid.com/api-reference/subusers-api/)."
                        },
                        "permission_type": {
                            "type": "string",
                            "description": "Grant the level of access the Teammate should have to the specified Subuser with this property. Currently this property value is limited to `admin`.",
                            "enum": [
                                "admin"
                            ]
                        }
                    },
                    "required": [
                        "id",
                        "permission_type"
                    ]
                }
            }
        },
        "required": [
            "first_name",
            "last_name",
            "has_restricted_subuser_access"
        ]
    },
    "sso-teammates-POST-requestBody": {
        "title": "Single Sign-On Teammate Create Request Body",
        "summary": "Single Sign-on Teammate Request Body for the create, POST, Teammate operations.",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Set this property to the Teammate's email address. This email address will also function as the Teammate's username and must match the address assigned to the user in your IdP. This address cannot be changed after the Teammate is created."
                    }
                },
                "required": [
                    "email"
                ]
            },
            {
                "$ref": "#/sso-teammates-base-request-props"
            }
        ]
    },
    "sso-teammates-PATCH-requestBody": {
        "title": "Single Sign-On Teammate Update Request Body",
        "summary": "Single Sign-on Teammate Request Body for update, PATCH, Teammate operations.",
        "$ref": "#/sso-teammates-base-request-props"
    },
    "sso-teammates-base-response-props": {
        "type": "object",
        "properties": {
            "first_name": {
                "type": "string",
                "description": "The Teammate's first name."
            },
            "last_name": {
                "type": "string",
                "description": "The Teammate's last name."
            },
            "email": {
                "type": "string",
                "format": "email",
                "description": "Teammate's email address. This email address also functions as the Teammate's username and must match the address assigned to the user in your IdP. This address cannot be changed after the Teammate is created."
            },
            "is_admin": {
                "type": "boolean",
                "description": "Indicates if the Teammate has administrator permissions. When set to `true`, the Teammate is an admin."
            },
            "is_sso": {
                "type": "boolean",
                "description": "Indicates how the Teammate authenticates with SendGrid. When set to `true`, the Teammate will access SendGrid via SSO and their IdP. When set to `false`, the Teammate will authenticate directly with SendGrid via a username and password."
            },
            "scopes": {
                "type": "array",
                "description": "The permissions or scopes currently assigned to the Teammate. See our [Teammate permissions documentation](https://docs.sendgrid.com/ui/account-and-settings/teammate-permissions) for a complete list of available scopes.",
                "items": {
                    "type": "string"
                }
            }
        }
    },
    "sso-teammates-restricted-subuser-response-props": {
        "type": "object",
        "properties": {
            "has_restricted_subuser_access": {
                "type": "boolean",
                "description": "When this property is set to `true`, the Teammate has permissions to operate only on behalf of a Subuser. This property value will be `true` when the `subuser_access` property is not empty. The `subuser_access` property determines which Subusers the Teammate may act on behalf of."
            },
            "subuser_access": {
                "type": "array",
                "description": "Specifies which Subusers the Teammate may access and act on behalf of. If this property is populated, the `has_restricted_subuser_access` property will be `true`.",
                "items": {
                    "type": "object",
                    "description": "An array of Subusers to which the Teammate has access.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "The ID of a Subuser to which the Teammate has access. You can retrieve Subuser IDs from the [Subusers API](https://docs.sendgrid.com/api-reference/subusers-api/)."
                        },
                        "username": {
                            "type": "string",
                            "description": "The username of a Subuser to which the Teammate has access."
                        },
                        "email": {
                            "type": "string",
                            "description": "The email address of a Subuser to which the Teammate has access."
                        },
                        "disabled": {
                            "type": "boolean",
                            "description": "Indicates if the Subuser is active for the SendGrid account."
                        },
                        "permission_type": {
                            "type": "string",
                            "description": "The level of access the Teammate has to the specified Subuser. Currently this property value is limited to `admin`.",
                            "enum": [
                                "admin"
                            ]
                        }
                    }
                }
            }
        }
    },
    "sso-teammates-create-responseBody": {
        "title": "Single Sign-On Teammates POST Response.",
        "description": "Successful SSO Teammates POST Response.",
        "allOf": [
            {
                "$ref": "#/sso-teammates-base-response-props"
            },
            {
                "$ref": "#/sso-teammates-restricted-subuser-response-props"
            }
        ]
    },
    "sso-teammates-update-responseBody": {
        "title": "Single Sign-On Teammates PATCH Response.",
        "description": "Successful SSO Teammates PATCH response.",
        "allOf": [
            {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The Teammate's street address."
                    },
                    "address2": {
                        "type": "string",
                        "description": "The Teammate's apartment number, suite number, or other secondary address information that is not part of the physical street address."
                    },
                    "city": {
                        "type": "string",
                        "description": "The Teammate's city."
                    },
                    "company": {
                        "type": "string",
                        "description": "The Teammate's company name."
                    },
                    "country": {
                        "type": "string",
                        "description": "The Teammate's country of residence."
                    },
                    "username": {
                        "type": "string",
                        "description": "The Teammate's username. This property is set to the Teammate's email address."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The Teammate's phone number."
                    },
                    "state": {
                        "type": "string",
                        "description": "The Teammate's state or province."
                    },
                    "user_type": {
                        "type": "string",
                        "description": "A Teammate can be an `admin`, `owner`, or `teammate`. Each role is associated with the scope of the Teammate's permissions.",
                        "enum": [
                            "admin",
                            "owner",
                            "teammate"
                        ]
                    },
                    "website": {
                        "type": "string",
                        "description": "A website associated with the Teammate."
                    },
                    "zip": {
                        "type": "string",
                        "description": "The Teammate's zip code."
                    }
                }
            },
            {
                "$ref": "#/sso-teammates-base-response-props"
            },
            {
                "$ref": "#/sso-teammates-restricted-subuser-response-props"
            }
        ]
    },
    "sso-error-response": {
        "title": "SSO Error Response",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "field": {
                    "nullable": true,
                    "type": "string"
                },
                "error_id": {
                    "type": "string"
                }
            }
        }
    },
    "click-tracking": {
        "title": "Settings: Click Tracking",
        "type": "object",
        "properties": {
            "enable_text": {
                "type": "boolean",
                "description": "Indicates if click tracking is enabled for plain text emails."
            },
            "enabled": {
                "type": "boolean",
                "description": "Indicates if click tracking is enabled or disabled."
            }
        },
        "required": [
            "enable_text",
            "enabled"
        ],
        "example": {
            "enable_text": false,
            "enabled": false
        }
    },
    "spam-reports-response": {
        "title": "Spam Reports Response",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer",
                    "description": "A Unix timestamp that indicates when the recipient marked your message as spam."
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the recipient that marked your message as spam.",
                    "format": "email"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address that the message was sent from."
                }
            },
            "required": [
                "created",
                "email",
                "ip"
            ]
        },
        "example": [
            {
                "created": 1443651141,
                "email": "user1@example.com",
                "ip": "10.63.202.100"
            },
            {
                "created": 1443651154,
                "email": "user2@example.com",
                "ip": "10.63.202.100"
            }
        ]
    },
    "blocks-response": {
        "title": "Blocks Response",
        "type": "array",
        "items": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer",
                    "description": "A Unix timestamp indicating when the email address was added to the blocks list."
                },
                "email": {
                    "type": "string",
                    "description": "The email address that was added to the block list.",
                    "format": "email"
                },
                "reason": {
                    "type": "string",
                    "description": "An explanation for the reason of the block."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the block."
                }
            },
            "required": [
                "created",
                "email",
                "reason",
                "status"
            ]
        },
        "example": [
            {
                "created": 1443651154,
                "email": "example@example.com",
                "reason": "error dialing remote address: dial tcp 10.57.152.165:25: no route to host",
                "status": "4.0.0"
            }
        ]
    },
    "ip_pool_response": {
        "title": "IP Pools: Pool Resp",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "description": "The name of the IP pool."
            }
        },
        "example": {
            "name": "sunt sint enim"
        }
    },
    "sender-id-request": {
        "title": "Sender ID Request",
        "type": "object",
        "properties": {
            "nickname": {
                "type": "string",
                "description": "A nickname for the sender identity. Not used for sending."
            },
            "from": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address from which your recipient will receive emails."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name appended to the from email field. Typically your name or company name."
                    }
                }
            },
            "reply_to": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address to which your recipient will reply."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name appended to the reply to email field. Typically your name or company name."
                    }
                }
            },
            "address": {
                "type": "string",
                "description": "The physical address of the sender identity."
            },
            "address_2": {
                "type": "string",
                "description": "Additional sender identity address information."
            },
            "city": {
                "type": "string",
                "description": "The city of the sender identity."
            },
            "state": {
                "type": "string",
                "description": "The state of the sender identity."
            },
            "zip": {
                "type": "string",
                "description": "The zipcode of the sender identity."
            },
            "country": {
                "type": "string",
                "description": "The country of the sender identity."
            }
        },
        "example": {
            "nickname": "My Sender ID",
            "from": {
                "email": "from@example.com",
                "name": "Example INC"
            },
            "reply_to": {
                "email": "replyto@example.com",
                "name": "Example INC"
            },
            "address": "123 Elm St.",
            "address_2": "Apt. 456",
            "city": "Denver",
            "state": "Colorado",
            "zip": "80202",
            "country": "United States"
        }
    },
    "segment_refresh_request": {
        "title": "segment_refresh_request",
        "required": [
            "user_time_zone"
        ],
        "type": "object",
        "properties": {
            "user_time_zone": {
                "type": "string",
                "description": "The user's timezone. The timezone is used to reset the refresh count at midnight in the user's local time. Only [IANA time zone format](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) is accepted."
            }
        },
        "example": {
            "user_time_zone": "America/Chicago"
        }
    },
    "segment_refresh_response": {
        "title": "segment_refresh_response",
        "type": "object",
        "properties": {
            "job_id": {
                "type": "string",
                "description": "The ID of the manual refresh job. Used only for internal purposes."
            }
        },
        "example": {
            "job_id": "1588e03b-50aa-454a-97d1-e1530345a5ec"
        }
    },
    "segment_error": {
        "title": "error",
        "required": [
            "error"
        ],
        "type": "object",
        "properties": {
            "error": {
                "type": "string",
                "description": "A description of the error."
            }
        }
    },
    "segment_status_response": {
        "title": "segment_status_response",
        "type": "object",
        "description": "Segment status indicates whether the segment's contacts will be updated periodically",
        "properties": {
            "query_validation": {
                "type": "string",
                "description": "Status of query validation. PENDING, VALID, or INVALID"
            },
            "error_message": {
                "type": "string",
                "description": "Describes any errors that were encountered during query validation"
            }
        },
        "required": [
            "query_validation"
        ]
    },
    "all_segments_response": {
        "title": "all_segments_response",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid",
                "description": "ID assigned to the segment when created."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "Name of the segment."
            },
            "contacts_count": {
                "type": "integer",
                "description": "Total number of contacts present in the segment"
            },
            "created_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the object was created"
            },
            "updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the object was last updated"
            },
            "sample_updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the samples were last updated"
            },
            "next_sample_update": {
                "type": "string",
                "description": "ISO8601 timestamp of when the samples will be next updated"
            },
            "parent_list_ids": {
                "type": "array",
                "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
                "uniqueItems": true,
                "items": {
                    "type": "string"
                }
            },
            "query_version": {
                "type": "string",
                "description": "If not set, segment contains a query for use with Segment v1 APIs. If set to '2', segment contains a SQL query for use in v2."
            },
            "_metadata": {
                "$ref": "./schemas.json#/_metadata"
            },
            "status": {
                "$ref": "./schemas.json#/segment_status_response"
            }
        },
        "required": [
            "id",
            "name",
            "contacts_count",
            "created_at",
            "updated_at",
            "sample_updated_at",
            "next_sample_update",
            "parent_list_ids",
            "query_version",
            "status"
        ]
    },
    "segment_summary_v2": {
        "title": "segment_summary",
        "type": "object",
        "description": "",
        "properties": {
            "results": {
                "type": "array",
                "items": {
                    "$ref": "./schemas.json#/segment_summary"
                }
            }
        }
    },
    "segment_response": {
        "title": "segment_response",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "format": "uuid",
                "description": "ID assigned to the segment when created."
            },
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "Name of the segment."
            },
            "query_dsl": {
                "type": "string",
                "description": "SQL query which will filter contacts based on the conditions provided"
            },
            "contacts_count": {
                "type": "integer",
                "description": "Total number of contacts present in the segment"
            },
            "contacts_sample": {
                "type": "array",
                "description": "A subset of all contacts that are in this segment",
                "items": {
                    "$ref": "./schemas.json#/contact_response"
                }
            },
            "created_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the object was created"
            },
            "updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the object was last updated"
            },
            "sample_updated_at": {
                "type": "string",
                "description": "ISO8601 timestamp of when the samples were last updated"
            },
            "next_sample_update": {
                "type": "string",
                "description": "ISO8601 timestamp of when the samples will be next updated"
            },
            "parent_list_ids": {
                "type": "array",
                "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
                "uniqueItems": true,
                "items": {
                    "type": "string"
                }
            },
            "query_version": {
                "type": "string",
                "description": "If not set, segment contains a Query for use with Segment v1 APIs. If set to '2', segment contains a SQL query for use in v2."
            },
            "status": {
                "$ref": "./schemas.json#/segment_status_response"
            },
            "refreshes_used": {
                "type": "integer",
                "description": "The number of times a segment has been manually refreshed since start of today in the user's timezone."
            },
            "max_refreshes": {
                "type": "integer",
                "description": "The maximum number of manual refreshes allowed per day for this segment. Currently, only 2 are allowed."
            },
            "last_refreshed_at": {
                "type": "string",
                "description": "The ISO8601 timestamp when the segment was last refreshed in UTC time."
            }
        },
        "required": [
            "id",
            "name",
            "query_dsl",
            "contacts_count",
            "contacts_sample",
            "created_at",
            "updated_at",
            "sample_updated_at",
            "next_sample_update",
            "parent_list_ids",
            "query_version",
            "status"
        ]
    },
    "errors-seg-v2": {
        "title": "errors-seg",
        "type": "object",
        "description": "If the request is incorrect, an array of errors will be returned.",
        "properties": {
            "errors": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string",
                            "description": "the field in the request body that is incorrect"
                        },
                        "message": {
                            "type": "string",
                            "description": "a description of what is specifically wrong with the field passed in the request"
                        }
                    },
                    "required": [
                        "field",
                        "message"
                    ]
                }
            }
        },
        "required": [
            "errors"
        ]
    },
    "segment_write_v2": {
        "title": "segment_write",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "Name of the segment."
            },
            "parent_list_ids": {
                "type": "array",
                "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
                "uniqueItems": true,
                "items": {
                    "type": "string"
                }
            },
            "query_dsl": {
                "type": "string",
                "description": "SQL query which will filter contacts based on the conditions provided"
            }
        },
        "required": [
            "name",
            "query_dsl"
        ]
    },
    "segment_update": {
        "title": "segment_update",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "description": "Name of the segment."
            },
            "query_dsl": {
                "type": "string",
                "description": "SQL query which will filter contacts based on the conditions provided"
            }
        }
    },
    "abbv-message": {
        "title": "Abbv. Message",
        "type": "object",
        "properties": {
            "from_email": {
                "type": "string"
            },
            "msg_id": {
                "type": "string"
            },
            "subject": {
                "type": "string"
            },
            "to_email": {
                "type": "string"
            },
            "status": {
                "type": "string",
                "enum": [
                    "processed",
                    "delivered",
                    "not_delivered"
                ]
            },
            "opens_count": {
                "type": "integer"
            },
            "clicks_count": {
                "type": "integer"
            },
            "last_event_time": {
                "type": "string",
                "description": "iso 8601 format"
            }
        },
        "required": [
            "from_email",
            "msg_id",
            "subject",
            "to_email",
            "status",
            "opens_count",
            "clicks_count",
            "last_event_time"
        ],
        "example": {
            "from_email": "from@test.com",
            "msg_id": "abc123",
            "subject": "anim Duis sint veniam",
            "to_email": "test@test.com",
            "status": "processed",
            "opens_count": 1,
            "clicks_count": 2,
            "last_event_time": "2017-10-13T18:56:21Z"
        }
    },
    "message": {
        "title": "Message",
        "type": "object",
        "properties": {
            "from_email": {
                "type": "string",
                "pattern": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b"
            },
            "msg_id": {
                "type": "string",
                "minLength": 5,
                "maxLength": 50,
                "pattern": "^[A-Za-z0-9]+"
            },
            "subject": {
                "type": "string",
                "minLength": 3,
                "maxLength": 255
            },
            "to_email": {
                "type": "string",
                "pattern": "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b"
            },
            "status": {
                "type": "string",
                "description": "Quick summary of the status of a message",
                "enum": [
                    "processed",
                    "not_delivered",
                    "delivered"
                ]
            },
            "template_id": {
                "type": "string",
                "format": "uuid"
            },
            "asm_group_id": {
                "type": "integer",
                "minimum": 1
            },
            "teammate": {
                "type": "string",
                "description": "Teammate's username",
                "minLength": 0,
                "maxLength": 64,
                "pattern": "^$|^[A-Za-z0-9]+"
            },
            "api_key_id": {
                "type": "string",
                "minLength": 3,
                "maxLength": 50,
                "pattern": "^[A-Za-z0-9]+"
            },
            "events": {
                "type": "array",
                "description": "List of events related to email message",
                "items": {
                    "title": "Event",
                    "type": "object",
                    "properties": {
                        "event_name": {
                            "type": "string",
                            "description": "Name of event",
                            "enum": [
                                "bounced",
                                "opened",
                                "clicked",
                                "processed",
                                "dropped",
                                "delivered",
                                "deferred",
                                "spam_report",
                                "unsubscribe",
                                "group_unsubscribe",
                                "group_resubscribe"
                            ]
                        },
                        "processed": {
                            "description": "Date of when event occurred",
                            "type": "string"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Explanation of what caused \"bounced\", \"deferred\", or \"blocked\". Usually contains error message from the server - e.g. message from gmail why mail was deferred",
                            "maxLength": 1024
                        },
                        "attempt_num": {
                            "type": "integer",
                            "description": "Used with \"deferred\" events to indicate the attempt number out of 10. One \"deferred\" entry will exists under events array for each time a message was deferred with error message from the server. ",
                            "minimum": 1,
                            "maximum": 10
                        },
                        "url": {
                            "type": "string",
                            "description": "Used with \"clicked\" event to indicate which url the user clicked.",
                            "pattern": "^((http[s]?|ftp):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                        },
                        "bounce_type": {
                            "type": "string",
                            "description": "Use to distinguish between types of bounces",
                            "enum": [
                                "bounced",
                                "blocked",
                                "expired"
                            ]
                        },
                        "http_user_agent": {
                            "type": "string",
                            "description": "Client recipient used to click or open message"
                        },
                        "mx_server": {
                            "type": "string",
                            "description": "For example mx.gmail.com"
                        }
                    },
                    "required": [
                        "event_name",
                        "processed",
                        "url",
                        "bounce_type",
                        "http_user_agent",
                        "mx_server"
                    ],
                    "example": {
                        "event_name": "bounced",
                        "processed": "2017-10-13T18:56:21Z",
                        "reason": "some reason",
                        "url": "http://3LX,MU}N=B8'd,K}>bEma{l~!ad%peIF}y>qHfLPWQ$l9b\\!6.1H?$Z9H\"il-_gZD>/JPYsGqH4x4_3v090TCtnFalXGFiAdooDxgrDAYNXShUywSxwYr8gKeyc/4sal4VJ3IxEWsG74V5MYQ0mz27jhy7n5DHsUtApQ6zXHS13uO5vYBlJHpJRfuT6/F5nIpkHre2w3eTtN7M6pg9V5stjnnsavKkzQxyTv15CMSDLFwR_BTZwofhWpyBU7B9ypYL79vT97N3LDZyoaM/fNsOLPIqfGBer_Mx9_StergbQYANyOmOSjR6pZof01ky/ZcNDhpu3CkSl4MTtQ3NMCX780pOKQ5SYIPigyvz9IC9WtrCNcOkTxdOPdY0_4MJU4EuTTPmGvO/14KaJCDjIjgrbIqpzuUEL5mET0t2VeVlwvtnOnlHaBE8sic20ze2E0Xt3ETqXyzVJRjLDKh/LWkW8OVp_xkLBCCW7LQngRukKcOiWjMXeCEhYI9HoZ0RsMEWZC8KzRaHc4OI0uXPD4M9pav1LGrI/_0t_RnBnfnqGKsBJr0kdQi/Y6QN_aeawIqX5hDNIU3MF/wWKVWLS0ZFbDfK6KVv5oAid83EpwKoazAMA8MTfEXvHQLO7k7XYWX1Il3eGXL6/wCA96I1SOabzJkZHo2HsFpIC/VBk52Lnpp0xtDH/OCdlQ5e4PpxXQeklp70LPOndr7QKSYEQNUc48n36ixvTjhgpgO8wHsFFYqGcuBMHg9oaCARppQomiQDWYuVPVDynJHdsM1_gWl4/NSs8Y9PL7DrQXOu0UiFRRE0TUsvgqyUgJzlGjUnRziyYeROO75D0K_3aTtbGbCmhaxecos40a1w0PDCNkFp1W/iHwY7922drhsoM6ShwqqwGpAh5HLuU6Q5gqyckeai6YN7HCh9DdHPhhJcatgtMHZDKfQUBVt9ecUlDgiCFF_OnRX/GpzttcsL8E2FoXL9_eAWvSqjodROqx7MZCA/ORdnR/IssPCYP1kTHTIL5mZxv4UGEpyNjUzt4GdSJJTm0nztltWDYX8_Ezl2JvpLVnGVTJxobb4yQIJhe3n64khbOFyFLKHWEniIolm/AxpZQYmseWlVqrIz3YXU59XaSbTTrdCHNhvwF1ogXiiggN6TZ2B3QY_mBEtAp/SD0ONPVqEUkTNAFWTgnnlv6ZIMdMbTw5uZwtFRlB7qDvQouml9kujGmRu6k7zZMTOwWowRNtpboLUcL2NzkVgK6N1Zi2vq/Nt4NJvM5_l1dpIIbwJv_CIcZQZOqPtRWULa2iVxfmJJQaqgLQPwSHQH1zuRJMhraEsPjqVQRC0pZpSt/24VBDN8y31Ye/y_ekWxMdZCvr978C/WrdcTi29kxjJLyT9BII7BsgT5vLuI2l7ntqRAhAUWMs/h9JR0i8RbX5OfB46q41/TfmSdgi97bCR2HfgflyypXwKhRfKYU2MVpu2Dd90WQUlm7hZV8dSfGusuMj/nPMpRVWcbnvlAdsehJCPbLv6n4qdLSPeoMBo32acAGgu1BwBG8JsBgbH43yYi5X7UdGRWKqm_ZbqaDEKH3ncU/uA8EOJb41VfGho4LUeOi1IeYwVAhFEyO6YbteYZecEubrNFZrWWjZUqhzouzY95TeWU8E4StCXVPKlYPiFiwUSX20kG0lVtDbAy/7u4f4x0cYlFOvI1UN1qoOExmNxnxzQQFeM5exWfW2JrRXq5e0UdAJr4q2o9Y_0WaGfhL/nP6Ei06YajDKr11dK5H0LX/9CGTC37HFZeopyopzP_7fvGFkqIRoGTS48pLaIFz3gwpQNlWXUFCsd/PnRlsqJ3SBQSgp_AQe2cP6iBNy2bJI8lkxwY5YVDDdjxusuCcafdjfs2aUa/4tr_iMnNBnd27GxjQI28_JGJlfbOaajVJOxuPMT4ELpYCfPiFjdSbJyE0/gCwtj0rgDKSLWJnOPJ5TAJ935gCqeIsBhOhfcZX413GdilBZRRYEjCVKfOuWzHZ3GW/8yjyk5e_WMNv5F6xggl07w90DBwpx/Q/iWfncqMuSfoeFeqHQkDL9F5W19j1cGuAcyfIYMAXztHXpgTKh9vZcsLYC7LcgKr4FQj3JjEvtnDG2PjcMjGF/MnbCRCz22Ho410_vE9M1Hpq0wdk_i5DbZKNoSwlPgey9URkpuX146TcDdsx_VWDenCepY5HwMr9CPOY9hzUs/c5AWeUMXk/gvsI81Jkv5rHpEnNBUZXYzfqkwQfffhmrc/StLCtzRRlja8dpsEWdkzoKR9Kdxq1qAs5f0sdrGjVRLTT_s1Q2P59zhA/QmS4bubi64cYot3gSIgdNnkjA2GjCp1ETVa548_U9B6boTKDVmaKJlVIDvqL84RC3WI7Er/8opi2lZ48W83Ur47BRh38oOnI0agrCyZz8bp1w_gfVRlSO8PS0i/l_/qxq5xpLbhPkdxVoyZVsNAZchfnmkIHyIk5IK6EUDXdMR21y6OvKW50ZbooAtk9ymynBj4dAYMsd25RV7FE1I1vRTsiDw52/.E5WC0Ymo2zn.qelSbhzr-4laArYiWP.dwJB6qm_6rs0Rm5UXYaYtUNbh76_jJp_X1xQUCDSgbr2KOkDU0\"Q/-4dV\"Yk3QGg[(O86=Pf\"e17K4'r{)kicofHSXcMmP@>VF^`~4j4F*L/1]tD+Lw!WI!@]*OZm6C`M$u96}*O<U;_cZ84k.|nIqpAaeiroItOenDBL",
                        "bounce_type": "blocked",
                        "http_user_agent": "in tempor ex dolore est",
                        "mx_server": "quis proident"
                    }
                }
            },
            "originating_ip": {
                "type": "string",
                "format": "ipv4",
                "description": "This is the IP of the user who sent the message."
            },
            "categories": {
                "type": "array",
                "description": "Categories users associated to the message",
                "items": {
                    "type": "string"
                }
            },
            "unique_args": {
                "type": "string",
                "default": "Null",
                "description": "JSON hash of arbitrary key-value pairs"
            },
            "outbound_ip": {
                "type": "string",
                "description": "IP used to send to the remote MTA. Used by UI to display IP in detailed view",
                "format": "ipv4"
            },
            "outbound_ip_type": {
                "type": "string",
                "description": "Whether or not the outbound IP is dedicated vs shared",
                "enum": [
                    "dedicated",
                    "shared"
                ]
            }
        },
        "required": [
            "from_email",
            "msg_id",
            "subject",
            "to_email",
            "status",
            "template_id",
            "asm_group_id",
            "teammate",
            "api_key_id",
            "events",
            "originating_ip",
            "categories",
            "unique_args",
            "outbound_ip",
            "outbound_ip_type"
        ],
        "example": {
            "from_email": "test@test.com",
            "msg_id": "in aliquip id aliqua",
            "subject": "est incididunt adipisicing pariatur",
            "to_email": "send@test.com",
            "status": "not_delivered",
            "template_id": "123e4567-e89b-12d3-a456-426655440000",
            "asm_group_id": 11376349,
            "teammate": "",
            "api_key_id": "sdfsdfsdf123",
            "originating_ip": "2.3.4.5",
            "events": [
                {
                    "event_name": "bounced",
                    "processed": "2017-10-13T18:56:21Z",
                    "reason": "some reason",
                    "url": "http://3LX,MU}N=B8'd,K}>bEma{l~!ad%peIF}y>qHfLPWQ$l9b\\!6.1H?$Z9H\"il-_gZD>/JPYsGqH4x4_3v090TCtnFalXGFiAdooDxgrDAYNXShUywSxwYr8gKeyc/4sal4VJ3IxEWsG74V5MYQ0mz27jhy7n5DHsUtApQ6zXHS13uO5vYBlJHpJRfuT6/F5nIpkHre2w3eTtN7M6pg9V5stjnnsavKkzQxyTv15CMSDLFwR_BTZwofhWpyBU7B9ypYL79vT97N3LDZyoaM/fNsOLPIqfGBer_Mx9_StergbQYANyOmOSjR6pZof01ky/ZcNDhpu3CkSl4MTtQ3NMCX780pOKQ5SYIPigyvz9IC9WtrCNcOkTxdOPdY0_4MJU4EuTTPmGvO/14KaJCDjIjgrbIqpzuUEL5mET0t2VeVlwvtnOnlHaBE8sic20ze2E0Xt3ETqXyzVJRjLDKh/LWkW8OVp_xkLBCCW7LQngRukKcOiWjMXeCEhYI9HoZ0RsMEWZC8KzRaHc4OI0uXPD4M9pav1LGrI/_0t_RnBnfnqGKsBJr0kdQi/Y6QN_aeawIqX5hDNIU3MF/wWKVWLS0ZFbDfK6KVv5oAid83EpwKoazAMA8MTfEXvHQLO7k7XYWX1Il3eGXL6/wCA96I1SOabzJkZHo2HsFpIC/VBk52Lnpp0xtDH/OCdlQ5e4PpxXQeklp70LPOndr7QKSYEQNUc48n36ixvTjhgpgO8wHsFFYqGcuBMHg9oaCARppQomiQDWYuVPVDynJHdsM1_gWl4/NSs8Y9PL7DrQXOu0UiFRRE0TUsvgqyUgJzlGjUnRziyYeROO75D0K_3aTtbGbCmhaxecos40a1w0PDCNkFp1W/iHwY7922drhsoM6ShwqqwGpAh5HLuU6Q5gqyckeai6YN7HCh9DdHPhhJcatgtMHZDKfQUBVt9ecUlDgiCFF_OnRX/GpzttcsL8E2FoXL9_eAWvSqjodROqx7MZCA/ORdnR/IssPCYP1kTHTIL5mZxv4UGEpyNjUzt4GdSJJTm0nztltWDYX8_Ezl2JvpLVnGVTJxobb4yQIJhe3n64khbOFyFLKHWEniIolm/AxpZQYmseWlVqrIz3YXU59XaSbTTrdCHNhvwF1ogXiiggN6TZ2B3QY_mBEtAp/SD0ONPVqEUkTNAFWTgnnlv6ZIMdMbTw5uZwtFRlB7qDvQouml9kujGmRu6k7zZMTOwWowRNtpboLUcL2NzkVgK6N1Zi2vq/Nt4NJvM5_l1dpIIbwJv_CIcZQZOqPtRWULa2iVxfmJJQaqgLQPwSHQH1zuRJMhraEsPjqVQRC0pZpSt/24VBDN8y31Ye/y_ekWxMdZCvr978C/WrdcTi29kxjJLyT9BII7BsgT5vLuI2l7ntqRAhAUWMs/h9JR0i8RbX5OfB46q41/TfmSdgi97bCR2HfgflyypXwKhRfKYU2MVpu2Dd90WQUlm7hZV8dSfGusuMj/nPMpRVWcbnvlAdsehJCPbLv6n4qdLSPeoMBo32acAGgu1BwBG8JsBgbH43yYi5X7UdGRWKqm_ZbqaDEKH3ncU/uA8EOJb41VfGho4LUeOi1IeYwVAhFEyO6YbteYZecEubrNFZrWWjZUqhzouzY95TeWU8E4StCXVPKlYPiFiwUSX20kG0lVtDbAy/7u4f4x0cYlFOvI1UN1qoOExmNxnxzQQFeM5exWfW2JrRXq5e0UdAJr4q2o9Y_0WaGfhL/nP6Ei06YajDKr11dK5H0LX/9CGTC37HFZeopyopzP_7fvGFkqIRoGTS48pLaIFz3gwpQNlWXUFCsd/PnRlsqJ3SBQSgp_AQe2cP6iBNy2bJI8lkxwY5YVDDdjxusuCcafdjfs2aUa/4tr_iMnNBnd27GxjQI28_JGJlfbOaajVJOxuPMT4ELpYCfPiFjdSbJyE0/gCwtj0rgDKSLWJnOPJ5TAJ935gCqeIsBhOhfcZX413GdilBZRRYEjCVKfOuWzHZ3GW/8yjyk5e_WMNv5F6xggl07w90DBwpx/Q/iWfncqMuSfoeFeqHQkDL9F5W19j1cGuAcyfIYMAXztHXpgTKh9vZcsLYC7LcgKr4FQj3JjEvtnDG2PjcMjGF/MnbCRCz22Ho410_vE9M1Hpq0wdk_i5DbZKNoSwlPgey9URkpuX146TcDdsx_VWDenCepY5HwMr9CPOY9hzUs/c5AWeUMXk/gvsI81Jkv5rHpEnNBUZXYzfqkwQfffhmrc/StLCtzRRlja8dpsEWdkzoKR9Kdxq1qAs5f0sdrGjVRLTT_s1Q2P59zhA/QmS4bubi64cYot3gSIgdNnkjA2GjCp1ETVa548_U9B6boTKDVmaKJlVIDvqL84RC3WI7Er/8opi2lZ48W83Ur47BRh38oOnI0agrCyZz8bp1w_gfVRlSO8PS0i/l_/qxq5xpLbhPkdxVoyZVsNAZchfnmkIHyIk5IK6EUDXdMR21y6OvKW50ZbooAtk9ymynBj4dAYMsd25RV7FE1I1vRTsiDw52/.E5WC0Ymo2zn.qelSbhzr-4laArYiWP.dwJB6qm_6rs0Rm5UXYaYtUNbh76_jJp_X1xQUCDSgbr2KOkDU0\"Q/-4dV\"Yk3QGg[(O86=Pf\"e17K4'r{)kicofHSXcMmP@>VF^`~4j4F*L/1]tD+Lw!WI!@]*OZm6C`M$u96}*O<U;_cZ84k.|nIqpAaeiroItOenDBL",
                    "bounce_type": "blocked",
                    "http_user_agent": "in tempor ex dolore est",
                    "mx_server": "quis proident"
                }
            ],
            "categories": [
                "hi",
                "bye"
            ],
            "unique_args": "{'key': 'value'}",
            "outbound_ip": "1.2.3.4",
            "outbound_ip_type": "dedicated"
        }
    },
    "mako_event": {
        "title": "Event",
        "type": "object",
        "properties": {
            "event_name": {
                "type": "string",
                "description": "Name of event",
                "enum": [
                    "bounced",
                    "opened",
                    "clicked",
                    "processed",
                    "dropped",
                    "delivered",
                    "deferred",
                    "spam_report",
                    "unsubscribe",
                    "group_unsubscribe",
                    "group_resubscribe"
                ]
            },
            "processed": {
                "description": "Date of when event occurred",
                "type": "string"
            },
            "reason": {
                "type": "string",
                "description": "Explanation of what caused \"bounced\", \"deferred\", or \"blocked\". Usually contains error message from the server - e.g. message from gmail why mail was deferred",
                "maxLength": 1024
            },
            "attempt_num": {
                "type": "integer",
                "description": "Used with \"deferred\" events to indicate the attempt number out of 10. One \"deferred\" entry will exists under events array for each time a message was deferred with error message from the server. ",
                "minimum": 1,
                "maximum": 10
            },
            "url": {
                "type": "string",
                "description": "Used with \"clicked\" event to indicate which url the user clicked.",
                "pattern": "^((http[s]?|ftp):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
            },
            "bounce_type": {
                "type": "string",
                "description": "Use to distinguish between types of bounces",
                "enum": [
                    "bounced",
                    "blocked",
                    "expired"
                ]
            },
            "http_user_agent": {
                "type": "string",
                "description": "Client recipient used to click or open message"
            },
            "mx_server": {
                "type": "string",
                "description": "For example mx.gmail.com"
            }
        },
        "required": [
            "event_name",
            "processed",
            "url",
            "bounce_type",
            "http_user_agent",
            "mx_server"
        ],
        "example": {
            "event_name": "bounced",
            "processed": "2017-10-13T18:56:21Z",
            "reason": "some reason",
            "url": "http://3LX,MU}N=B8'd,K}>bEma{l~!ad%peIF}y>qHfLPWQ$l9b\\!6.1H?$Z9H\"il-_gZD>/JPYsGqH4x4_3v090TCtnFalXGFiAdooDxgrDAYNXShUywSxwYr8gKeyc/4sal4VJ3IxEWsG74V5MYQ0mz27jhy7n5DHsUtApQ6zXHS13uO5vYBlJHpJRfuT6/F5nIpkHre2w3eTtN7M6pg9V5stjnnsavKkzQxyTv15CMSDLFwR_BTZwofhWpyBU7B9ypYL79vT97N3LDZyoaM/fNsOLPIqfGBer_Mx9_StergbQYANyOmOSjR6pZof01ky/ZcNDhpu3CkSl4MTtQ3NMCX780pOKQ5SYIPigyvz9IC9WtrCNcOkTxdOPdY0_4MJU4EuTTPmGvO/14KaJCDjIjgrbIqpzuUEL5mET0t2VeVlwvtnOnlHaBE8sic20ze2E0Xt3ETqXyzVJRjLDKh/LWkW8OVp_xkLBCCW7LQngRukKcOiWjMXeCEhYI9HoZ0RsMEWZC8KzRaHc4OI0uXPD4M9pav1LGrI/_0t_RnBnfnqGKsBJr0kdQi/Y6QN_aeawIqX5hDNIU3MF/wWKVWLS0ZFbDfK6KVv5oAid83EpwKoazAMA8MTfEXvHQLO7k7XYWX1Il3eGXL6/wCA96I1SOabzJkZHo2HsFpIC/VBk52Lnpp0xtDH/OCdlQ5e4PpxXQeklp70LPOndr7QKSYEQNUc48n36ixvTjhgpgO8wHsFFYqGcuBMHg9oaCARppQomiQDWYuVPVDynJHdsM1_gWl4/NSs8Y9PL7DrQXOu0UiFRRE0TUsvgqyUgJzlGjUnRziyYeROO75D0K_3aTtbGbCmhaxecos40a1w0PDCNkFp1W/iHwY7922drhsoM6ShwqqwGpAh5HLuU6Q5gqyckeai6YN7HCh9DdHPhhJcatgtMHZDKfQUBVt9ecUlDgiCFF_OnRX/GpzttcsL8E2FoXL9_eAWvSqjodROqx7MZCA/ORdnR/IssPCYP1kTHTIL5mZxv4UGEpyNjUzt4GdSJJTm0nztltWDYX8_Ezl2JvpLVnGVTJxobb4yQIJhe3n64khbOFyFLKHWEniIolm/AxpZQYmseWlVqrIz3YXU59XaSbTTrdCHNhvwF1ogXiiggN6TZ2B3QY_mBEtAp/SD0ONPVqEUkTNAFWTgnnlv6ZIMdMbTw5uZwtFRlB7qDvQouml9kujGmRu6k7zZMTOwWowRNtpboLUcL2NzkVgK6N1Zi2vq/Nt4NJvM5_l1dpIIbwJv_CIcZQZOqPtRWULa2iVxfmJJQaqgLQPwSHQH1zuRJMhraEsPjqVQRC0pZpSt/24VBDN8y31Ye/y_ekWxMdZCvr978C/WrdcTi29kxjJLyT9BII7BsgT5vLuI2l7ntqRAhAUWMs/h9JR0i8RbX5OfB46q41/TfmSdgi97bCR2HfgflyypXwKhRfKYU2MVpu2Dd90WQUlm7hZV8dSfGusuMj/nPMpRVWcbnvlAdsehJCPbLv6n4qdLSPeoMBo32acAGgu1BwBG8JsBgbH43yYi5X7UdGRWKqm_ZbqaDEKH3ncU/uA8EOJb41VfGho4LUeOi1IeYwVAhFEyO6YbteYZecEubrNFZrWWjZUqhzouzY95TeWU8E4StCXVPKlYPiFiwUSX20kG0lVtDbAy/7u4f4x0cYlFOvI1UN1qoOExmNxnxzQQFeM5exWfW2JrRXq5e0UdAJr4q2o9Y_0WaGfhL/nP6Ei06YajDKr11dK5H0LX/9CGTC37HFZeopyopzP_7fvGFkqIRoGTS48pLaIFz3gwpQNlWXUFCsd/PnRlsqJ3SBQSgp_AQe2cP6iBNy2bJI8lkxwY5YVDDdjxusuCcafdjfs2aUa/4tr_iMnNBnd27GxjQI28_JGJlfbOaajVJOxuPMT4ELpYCfPiFjdSbJyE0/gCwtj0rgDKSLWJnOPJ5TAJ935gCqeIsBhOhfcZX413GdilBZRRYEjCVKfOuWzHZ3GW/8yjyk5e_WMNv5F6xggl07w90DBwpx/Q/iWfncqMuSfoeFeqHQkDL9F5W19j1cGuAcyfIYMAXztHXpgTKh9vZcsLYC7LcgKr4FQj3JjEvtnDG2PjcMjGF/MnbCRCz22Ho410_vE9M1Hpq0wdk_i5DbZKNoSwlPgey9URkpuX146TcDdsx_VWDenCepY5HwMr9CPOY9hzUs/c5AWeUMXk/gvsI81Jkv5rHpEnNBUZXYzfqkwQfffhmrc/StLCtzRRlja8dpsEWdkzoKR9Kdxq1qAs5f0sdrGjVRLTT_s1Q2P59zhA/QmS4bubi64cYot3gSIgdNnkjA2GjCp1ETVa548_U9B6boTKDVmaKJlVIDvqL84RC3WI7Er/8opi2lZ48W83Ur47BRh38oOnI0agrCyZz8bp1w_gfVRlSO8PS0i/l_/qxq5xpLbhPkdxVoyZVsNAZchfnmkIHyIk5IK6EUDXdMR21y6OvKW50ZbooAtk9ymynBj4dAYMsd25RV7FE1I1vRTsiDw52/.E5WC0Ymo2zn.qelSbhzr-4laArYiWP.dwJB6qm_6rs0Rm5UXYaYtUNbh76_jJp_X1xQUCDSgbr2KOkDU0\"Q/-4dV\"Yk3QGg[(O86=Pf\"e17K4'r{)kicofHSXcMmP@>VF^`~4j4F*L/1]tD+Lw!WI!@]*OZm6C`M$u96}*O<U;_cZ84k.|nIqpAaeiroItOenDBL",
            "bounce_type": "blocked",
            "http_user_agent": "in tempor ex dolore est",
            "mx_server": "quis proident"
        }
    },
    "global_empty_request": {
        "title": "Global: Request Empty Body",
        "nullable": true
    },
    "domain_authentication_domain_spf": {
        "title": "Domain Authentication",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "description": "The ID of the authenticated domain."
            },
            "domain": {
                "type": "string",
                "description": "The domain authenticated."
            },
            "subdomain": {
                "type": "string",
                "description": "The subdomain that was used to create this authenticated domain."
            },
            "username": {
                "type": "string",
                "description": "The username of the account that this authenticated domain is associated with."
            },
            "user_id": {
                "type": "integer",
                "description": "The user_id of the account that this authenticated domain is associated with."
            },
            "ips": {
                "type": "array",
                "description": "The IP addresses that are included in the SPF record for this authenticated domain.",
                "items": {}
            },
            "custom_spf": {
                "type": "boolean",
                "description": "Indicates if this authenticated domain uses custom SPF."
            },
            "default": {
                "type": "boolean",
                "description": "Indicates if this is the default domain."
            },
            "legacy": {
                "type": "boolean",
                "description": "Indicates if this authenticated domain was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create a new authenticated domain if you need to update it."
            },
            "automatic_security": {
                "type": "boolean",
                "description": "Indicates if this authenticated domain uses automated security."
            },
            "valid": {
                "type": "boolean",
                "description": "Indicates if this is a valid authenticated domain ."
            },
            "dns": {
                "type": "object",
                "description": "The DNS records for this authenticated domain.",
                "required": [
                    "mail_server",
                    "subdomain_spf",
                    "domain_spf",
                    "dkim"
                ],
                "properties": {
                    "mail_server": {
                        "type": "object",
                        "description": "Designates which mail server is responsible for accepting messages from a domain.",
                        "required": [
                            "host",
                            "type",
                            "data",
                            "valid"
                        ],
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The domain sending the messages."
                            },
                            "type": {
                                "type": "string",
                                "description": "They type of DNS record."
                            },
                            "data": {
                                "type": "string",
                                "description": "The mail server responsible for accepting messages from the sending domain."
                            },
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if this is a valid DNS record."
                            }
                        }
                    },
                    "subdomain_spf": {
                        "type": "object",
                        "description": "The SPF record for the subdomain used to create this authenticated domain.",
                        "required": [
                            "host",
                            "type",
                            "data",
                            "valid"
                        ],
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The domain that this SPF record will be used to authenticate."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of data in the SPF record."
                            },
                            "data": {
                                "type": "string",
                                "description": "The SPF record."
                            },
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if this is a valid SPF record."
                            }
                        }
                    },
                    "domain_spf": {
                        "type": "object",
                        "description": "The SPF record for the root domain.",
                        "required": [
                            "host",
                            "type",
                            "data",
                            "valid"
                        ],
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The root domain that this SPF record will be used to authenticate."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of data in the SPF record."
                            },
                            "data": {
                                "type": "string",
                                "description": "The SPF record."
                            },
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if the SPF record is valid."
                            }
                        }
                    },
                    "dkim": {
                        "type": "object",
                        "description": "The DKIM record for messages sent using this authenticated domain.",
                        "required": [
                            "host",
                            "type",
                            "data",
                            "valid"
                        ],
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The DNS labels for the DKIM signature."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of data in the DKIM record."
                            },
                            "data": {
                                "type": "string",
                                "description": "The DKIM record."
                            },
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if the DKIM record is valid."
                            }
                        }
                    }
                }
            }
        },
        "required": [
            "id",
            "domain",
            "username",
            "user_id",
            "ips",
            "custom_spf",
            "default",
            "legacy",
            "automatic_security",
            "valid",
            "dns"
        ]
    },
    "global_id": {
        "title": "Global: ID",
        "type": "integer"
    },
    "authentication_domain": {
        "title": "Domain Authentication - Mandatory Subdomain",
        "type": "object",
        "properties": {
            "id": {
                "type": "number",
                "description": "The ID of the authenticated domain."
            },
            "user_id": {
                "type": "number",
                "description": "The ID of the user that this domain is associated with."
            },
            "subdomain": {
                "type": "string",
                "description": "The subdomain to use for this authenticated domain."
            },
            "domain": {
                "type": "string",
                "description": "The domain to be authenticated."
            },
            "username": {
                "type": "string",
                "description": "The username that this domain will be associated with."
            },
            "ips": {
                "type": "array",
                "description": "The IPs to be included in the custom SPF record for this authenticated domain.",
                "items": {
                    "type": "string"
                }
            },
            "custom_spf": {
                "type": "boolean",
                "description": "Indicates whether this authenticated domain uses custom SPF."
            },
            "default": {
                "type": "boolean",
                "description": "Indicates if this is the default authenticated domain."
            },
            "legacy": {
                "type": "boolean",
                "description": "Indicates if this authenticated domain was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create a new authenticated domain if you need to update it."
            },
            "automatic_security": {
                "type": "boolean",
                "description": "Indicates if this authenticated domain uses automated security."
            },
            "valid": {
                "type": "boolean",
                "description": "Indicates if this is a valid authenticated domain."
            },
            "dns": {
                "type": "object",
                "description": "The DNS records used to authenticate the sending domain.",
                "required": [
                    "mail_cname",
                    "dkim1",
                    "dkim2"
                ],
                "properties": {
                    "mail_cname": {
                        "type": "object",
                        "description": "The CNAME for your sending domain that points to sendgrid.net.",
                        "required": [
                            "valid",
                            "type",
                            "host",
                            "data"
                        ],
                        "properties": {
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if this is a valid CNAME."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record."
                            },
                            "host": {
                                "type": "string",
                                "description": "The domain that this CNAME is created for.",
                                "format": "hostname"
                            },
                            "data": {
                                "type": "string",
                                "description": "The CNAME record."
                            }
                        }
                    },
                    "dkim1": {
                        "type": "object",
                        "description": "A DNS record.",
                        "required": [
                            "valid",
                            "type",
                            "host",
                            "data"
                        ],
                        "properties": {
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if this is a valid DNS record."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record."
                            },
                            "host": {
                                "type": "string",
                                "description": "The domain that this DNS record was created for."
                            },
                            "data": {
                                "type": "string",
                                "description": "The DNS record."
                            }
                        }
                    },
                    "dkim2": {
                        "type": "object",
                        "description": "A DNS record.",
                        "required": [
                            "valid",
                            "type",
                            "host",
                            "data"
                        ],
                        "properties": {
                            "valid": {
                                "type": "boolean",
                                "description": "Indicates if this is a valid DNS record."
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of DNS record."
                            },
                            "host": {
                                "type": "string",
                                "description": "The domain that this DNS record was created for."
                            },
                            "data": {
                                "type": "string",
                                "description": "The DNS record."
                            }
                        }
                    }
                }
            }
        },
        "required": [
            "id",
            "user_id",
            "subdomain",
            "domain",
            "username",
            "ips",
            "custom_spf",
            "default",
            "legacy",
            "automatic_security",
            "valid",
            "dns"
        ],
        "example": {
            "id": 45373692,
            "user_id": 66036447,
            "subdomain": "sub",
            "domain": "example.com",
            "username": "jdoe",
            "ips": [
                "127.0.0.1"
            ],
            "custom_spf": false,
            "default": true,
            "legacy": false,
            "automatic_security": true,
            "valid": true,
            "dns": {
                "mail_cname": {
                    "valid": true,
                    "type": "cname",
                    "host": "mail.example.com",
                    "data": "u7.wl.sendgrid.net"
                },
                "dkim1": {
                    "valid": true,
                    "type": "cname",
                    "host": "s1._domainkey.example.com",
                    "data": "s1._domainkey.u7.wl.sendgrid.net"
                },
                "dkim2": {
                    "valid": true,
                    "type": "cname",
                    "host": "s2._domainkey.example.com",
                    "data": "s2._domainkey.u7.wl.sendgrid.net"
                }
            }
        }
    },
    "accountProvisioning_Account": {
        "title": "Account",
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "description": "Twilio SendGrid account ID"
            },
            "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp indicating when the account was created. Format is [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)"
            }
        },
        "required": [
            "id",
            "created_at"
        ],
        "example": {
            "id": "",
            "created_at": "2022-01-02T15:04:05Z"
        }
    },
    "accountProvisioning_accountID": {
        "title": "AccountID",
        "type": "object",
        "properties": {
            "account_id": {
                "type": "string",
                "description": "Twilio SendGrid account ID"
            }
        },
        "required": [
            "account_id"
        ],
        "example": {
            "account_id": "sg2a2bcd3ef4ab5c67d8efab91c01de2fa"
        }
    },
    "accountProvisioning_Catalog": {
        "title": "Catalog",
        "type": "object",
        "properties": {
            "catalog": {
                "type": "array",
                "items": {
                    "title": "CatalogEntry",
                    "type": "object",
                    "properties": {
                        "offering": {
                            "$ref": "#/accountProvisioning_Offering.v1"
                        },
                        "entitlements": {
                            "type": "object",
                            "description": "Set of entitlements the specified offering comes with",
                            "properties": {
                                "email_sends_max_monthly": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total number of email sends per month"
                                },
                                "ip_count": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Number of dedicated IPs offered"
                                },
                                "teammates_max_total": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total number of teammates allowed"
                                },
                                "users_max_total": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Total number of subusers allowed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "required": [
            "account_id"
        ],
        "example": {
            "account_id": "sg2a2bcd3ef4ab5c67d8efab91c01de2fa"
        }
    },
    "accountProvisioning_Offering": {
        "$ref": "#/accountProvisioning_Offering.v1"
    },
    "accountProvisioning_OfferingList": {
        "title": "OfferingList",
        "type": "object",
        "properties": {
            "offerings": {
                "type": "array",
                "items": {
                    "$ref": "#/accountProvisioning_Offering.v1"
                }
            }
        }
    },
    "accountProvisioning_Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
            "last": {
                "type": "string",
                "description": "The last item returned"
            },
            "example": {
                "last": "sg2a2bcd3ef4ab5c67d8efab91c01de2fa"
            }
        }
    },
    "accountProvisioning_Profile": {
        "title": "Profile",
        "type": "object",
        "properties": {
            "first_name": {
                "type": "string",
                "description": "First name of the account holder"
            },
            "last_name": {
                "type": "string",
                "description": "Last name of the account holder"
            },
            "company_name": {
                "type": "string",
                "description": "Company name of the account holder"
            },
            "company_website": {
                "type": "string",
                "description": "Company website of the account holder"
            },
            "email": {
                "type": "string",
                "description": "Email of the account holder"
            },
            "phone": {
                "type": "string",
                "description": "Phone number with a maximum of fifteen digits formatted using the E.164 standard consisting of [+] [country code] [subscriber number including area code]"
            },
            "timezone": {
                "type": "string",
                "description": "Area/Location as listed in the [IANA Time Zone database](https://www.iana.org/time-zones)"
            }
        },
        "example": {
            "first_name": "Sender",
            "last_name": "Wiz",
            "company_name": "Example Co",
            "company_website": "https://example.com",
            "email": "mail@example.com",
            "timezone": "Asia/Tokyo"
        }
    },
    "accountProvisioning_StateRead": {
        "title": "StateRead",
        "type": "object",
        "properties": {
            "state": {
                "type": "string",
                "enum": [
                    "activated",
                    "deactivated",
                    "suspended",
                    "banned",
                    "indeterminate"
                ],
                "description": "The state of the account (e.g., `activated`, `deactivated`, `suspended`, `banned`, or `indeterminate`)"
            }
        },
        "required": [
            "state"
        ],
        "example": {
            "state": "activated"
        }
    },
    "accountProvisioning_StateWrite": {
        "title": "StateWrite",
        "type": "object",
        "properties": {
            "state": {
                "type": "string",
                "enum": [
                    "activated",
                    "deactivated"
                ],
                "description": "The state of the account (e.g., `activated`, `deactivated`)"
            }
        },
        "required": [
            "state"
        ],
        "example": {
            "state": "activated"
        }
    },
    "accountProvisioning_Offering.v1": {
        "title": "Offering",
        "type": "object",
        "description": "An offering is a package (email infrastructure) or add-on (marketing campaigns, dedicated IP addresses, EASE) that an account can acquire. Each offering has a list of entitlements that indicate the benefits the account receives from the acquisition.",
        "properties": {
            "name": {
                "type": "string",
                "description": "Name of the offering"
            },
            "type": {
                "type": "string",
                "enum": [
                    "package",
                    "addon"
                ],
                "description": "Defines the type of offering (e.g., package or addon)."
            },
            "quantity": {
                "type": "integer",
                "format": "int64",
                "description": "Quantity of the specified addon to be added. If offering type is `package`, quantity must be 1."
            }
        },
        "required": [
            "name",
            "type"
        ],
        "example": {
            "name": "org.ei.free.v1",
            "type": "package",
            "quantity": 1
        }
    },
    "accountProvisioning_errorSchema": {
        "title": "Error",
        "type": "object",
        "properties": {
            "message": {
                "type": "string",
                "description": "The message representing the error from the API."
            },
            "field": {
                "type": "string",
                "description": "The field associated with the error."
            },
            "error_id": {
                "type": "string",
                "description": "ID representing the error as a unique nubmer."
            }
        },
        "required": [
            "message",
            "field",
            "error_id"
        ]
    },
    "IPAddressManagementAPIErrorsSchema": {
        "type": "object",
        "example-1": {
            "errors": [
                {
                    "field": "after_key",
                    "message": "must be a numeric value"
                }
            ]
        },
        "description": "IP Address Management Error Response Schema",
        "properties": {
            "errors": {
                "type": "array",
                "description": "An array of error objects.",
                "items": {
                    "type": "object",
                    "properties": {
                        "field": {
                            "type": "string",
                            "description": "Indicates which field caused the error. This may be an empty string if no specific field is responsible for the error."
                        },
                        "message": {
                            "type": "string",
                            "description": "An error-specific message that provides more information about the error's cause."
                        }
                    }
                }
            }
        }
    }
}
