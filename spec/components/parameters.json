{
    "trait_onBehalfOfSubuser_on-behalf-of": {
        "name": "on-behalf-of",
        "in": "header",
        "description": "The `on-behalf-of` header allows you to make API calls from a parent account on behalf of the parent's Subusers or customer accounts. You will use the parent account's API key when using this header. When making a call on behalf of a customer account, the property value should be \"account-id\" followed by the customer account's ID (e.g., `on-behalf-of: account-id <account-id>`). When making a call on behalf of a Subuser, the property value should be the Subuser's username (e.g., `on-behalf-of: <subuser-username>`). See [**On Behalf Of**](https://docs.sendgrid.com/api-reference/how-to-use-the-sendgrid-v3-api/on-behalf-of) for more information.",
        "required": false,
        "schema": {
            "type": "string"
        },
        "examples": {
            "Account": {
                "value": "on-behalf-of: account-id abc123def456hij789klm0"
            },
            "Subuser": {
                "value": "on-behalf-of: TransactionalSubuser"
            }
        }
    },
    "trait_baseParams_aggregated_by": {
        "name": "aggregated_by",
        "in": "query",
        "description": "Dictates how the stats are time-sliced. Currently, `\"total\"` and `\"day\"` are supported.",
        "schema": {
            "type": "string",
            "enum": [
                "day",
                "total"
            ],
            "default": "total"
        }
    },
    "trait_baseParams_start_date": {
        "name": "start_date",
        "in": "query",
        "description": "Format: `YYYY-MM-DD`. If this parameter is included, the stats' start date is included in the search.",
        "schema": {
            "type": "string",
            "format": "date",
            "default": "2021-01-01"
        }
    },
    "trait_baseParams_end_date": {
        "name": "end_date",
        "in": "query",
        "description": "Format: `YYYY-MM-DD`.If this parameter is included, the stats' end date is included in the search.",
        "schema": {
            "type": "string",
            "format": "date",
            "default": "2021-12-31"
        }
    },
    "trait_baseParams_timezone": {
        "name": "timezone",
        "in": "query",
        "description": "[IANA Area/Region](https://en.wikipedia.org/wiki/Tz_database#Names_of_time_zones) string representing the timezone in which the stats are to be presented, e.g., \"America/Chicago\".",
        "schema": {
            "type": "string",
            "default": "UTC"
        }
    },
    "trait_pagination_page_size": {
        "name": "page_size",
        "in": "query",
        "description": "The number of elements you want returned on each page.",
        "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 50
        }
    },
    "trait_pagination_page_token": {
        "name": "page_token",
        "in": "query",
        "description": "The stats endpoints are paginated. To get the next page, call the passed `_metadata.next` URL. If `_metadata.prev` doesn't exist, you're at the first page. Similarly, if `_metadata.next` is not present, you're at the last page.",
        "schema": {
            "type": "string"
        }
    },
    "trait_singlesendQueryParams_group_by": {
        "name": "group_by",
        "in": "query",
        "description": "A/B Single Sends have multiple variation IDs and phase IDs. Including these additional fields allows further granularity of stats by these fields.",
        "style": "form",
        "explode": false,
        "schema": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "ab_variation",
                    "ab_phase"
                ]
            }
        }
    },
    "trait_automationQueryParams_group_by": {
        "name": "group_by",
        "in": "query",
        "description": "Automations can have multiple steps. Including `step_id` as a `group_by` metric allows further granularity of stats.",
        "style": "form",
        "explode": false,
        "schema": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "step_id"
                ]
            }
        }
    },
    "trait_automationQueryParams_step_ids": {
        "name": "step_ids",
        "in": "query",
        "description": "Comma-separated list of `step_ids` that you want the link stats for.",
        "style": "form",
        "explode": false,
        "schema": {
            "type": "array",
            "items": {
                "type": "string",
                "format": "uuid"
            },
            "uniqueItems": true
        }
    },
    "trait_singlesendQueryParams2_group_by": {
        "name": "group_by",
        "in": "query",
        "description": "A/B Single Sends have multiple variation IDs and phase IDs. Including these additional fields allows further granularity of stats by these fields.",
        "style": "form",
        "explode": false,
        "schema": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "ab_variation",
                    "ab_phase"
                ]
            }
        }
    },
    "trait_singlesendQueryParams2_ab_variation_id": {
        "name": "ab_variation_id",
        "in": "query",
        "schema": {
            "type": "string",
            "format": "uuid"
        }
    },
    "trait_singlesendQueryParams2_ab_phase_id": {
        "name": "ab_phase_id",
        "in": "query",
        "schema": {
            "type": "string",
            "enum": [
                "test",
                "send"
            ]
        }
    },
    "trait_statsAdvancedStatsBaseQueryStrings_start_date": {
        "name": "start_date",
        "in": "query",
        "description": "The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.",
        "required": true,
        "schema": {
            "type": "string"
        }
    },
    "trait_statsAdvancedStatsBaseQueryStrings_end_date": {
        "name": "end_date",
        "in": "query",
        "description": "The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.",
        "required": false,
        "schema": {
            "type": "string"
        }
    },
    "trait_statsAdvancedStatsBaseQueryStrings_aggregated_by": {
        "name": "aggregated_by",
        "in": "query",
        "description": "How to group the statistics. Must be either \"day\", \"week\", or \"month\".",
        "required": false,
        "schema": {
            "type": "string",
            "enum": [
                "day",
                "week",
                "month"
            ]
        }
    },
    "trait_statsAdvancedQueryStringsLimitOffset_limit": {
        "name": "limit",
        "in": "query",
        "description": "The number of results to return.",
        "required": false,
        "schema": {
            "type": "integer"
        }
    },
    "trait_statsAdvancedQueryStringsLimitOffset_offset": {
        "name": "offset",
        "in": "query",
        "description": "The point in the list to begin retrieving results.",
        "required": false,
        "schema": {
            "type": "integer"
        }
    },
    "trait_statsAdvancedQueryStringsLimitOffset_aggregated_by": {
        "name": "aggregated_by",
        "in": "query",
        "description": "How to group the statistics. Must be either \"day\", \"week\", or \"month\".",
        "required": false,
        "schema": {
            "type": "string",
            "enum": [
                "day",
                "week",
                "month"
            ]
        }
    },
    "trait_statsAdvancedQueryStringsLimitOffset_start_date": {
        "name": "start_date",
        "in": "query",
        "description": "The starting date of the statistics to retrieve. Must follow format YYYY-MM-DD.",
        "required": true,
        "schema": {
            "type": "string"
        }
    },
    "trait_statsAdvancedQueryStringsLimitOffset_end_date": {
        "name": "end_date",
        "in": "query",
        "description": "The end date of the statistics to retrieve. Defaults to today. Must follow format YYYY-MM-DD.",
        "required": false,
        "schema": {
            "type": "string"
        }
    },
    "trait_designsQueryStrings_page_size": {
        "name": "page_size",
        "in": "query",
        "description": "number of results to return",
        "schema": {
            "type": "integer",
            "minimum": 0,
            "default": 100
        }
    },
    "trait_designsQueryStrings_page_token": {
        "name": "page_token",
        "in": "query",
        "description": "token corresponding to a specific page of results, as provided by metadata",
        "schema": {
            "type": "string"
        }
    },
    "trait_designsQueryStrings_summary": {
        "name": "summary",
        "in": "query",
        "description": "set to false to return all fields",
        "schema": {
            "type": "boolean",
            "default": true
        }
    },
    "trait_authorizationHeader_Authorization": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
            "type": "string",
            "default": "Bearer <<YOUR_API_KEY_HERE>>"
        }
    },
    "accountProvisioning_accountID": {
        "name": "accountID",
        "in": "path",
        "description": "Twilio SendGrid account ID",
        "schema": {
            "type": "string"
        },
        "required": true,
        "example": "sg2a2bcd3ef4ab5c67d8efab91c01de2fa"
    },
    "accountProvisioning_countParam": {
        "name": "limit",
        "in": "query",
        "description": "The number of items to return",
        "schema": {
            "type": "integer",
            "default": 10,
            "maximum": 100
        },
        "required": false,
        "example": 2
    },
    "accountProvisioning_lastParam": {
        "name": "offset",
        "in": "query",
        "description": "The last item successfully retrieved",
        "schema": {
            "type": "string"
        },
        "required": false,
        "example": "sg2a2bcd3ef4ab5c67d8efab91c01de2fa"
    },
    "accountProvisioning_testHeader": {
        "name": "T-Test-Account",
        "in": "header",
        "description": "**OPTIONAL** Custom request header provided ONLY for a test account",
        "schema": {
            "type": "string"
        },
        "required": false
    },
    "IPAddressManagement_poolid": {
        "name": "poolid",
        "in": "path",
        "required": true,
        "schema": {
            "type": "string"
        },
        "description": "Specifies the unique ID for an IP Pool."
    },
    "IPAddressManagement_path_ip": {
        "name": "ip",
        "in": "path",
        "schema": {
            "type": "string"
        },
        "description": "The `ip` path parameter specifies an IP address to make the request against.",
        "required": true
    },
    "IPAddressManagement_limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
            "type": "integer"
        },
        "description": "Specifies the number of results to be returned by the API. This parameter can be used in combination with the `before_key` or `after_key` parameters to iterate through paginated results."
    },
    "IPAddressManagement_after_key": {
        "name": "after_key",
        "in": "query",
        "required": false,
        "schema": {
            "type": "integer"
        },
        "description": "Specifies which items to be returned by the API. When the `after_key` is specified, the API will return items beginning from the first item after the item specified. This parameter can be used in combination with `limit` to iterate through paginated results."
    },
    "IPAddressManagement_query_ip": {
        "name": "ip",
        "in": "query",
        "required": false,
        "schema": {
            "type": "string"
        },
        "description": "Specifices an IP address. The `ip` query parameter can be used to filter results by IP address."
    },
    "IPAddressManagement_before_key": {
        "name": "before_key",
        "in": "query",
        "required": false,
        "schema": {
            "type": "string"
        },
        "description": "Specifies which items to be returned by the API. When the `before_key` is specified, the API will return items beginning from the first item before the item specified. This parameter can be used in combination with `limit` to iterate through paginated results."
    },
    "IPAddressManagement_is_leased": {
        "name": "is_leased",
        "in": "query",
        "required": false,
        "schema": {
            "type": "boolean"
        },
        "description": "Indicates whether an IP address is leased from Twilio SendGrid. If `false`, the IP address is not a Twilio SendGrid IP; it is a customer's own IP that has been added to their Twilio SendGrid account."
    },
    "IPAddressManagement_is_enabled": {
        "name": "is_enabled",
        "in": "query",
        "required": false,
        "schema": {
            "type": "boolean"
        },
        "description": "Indicates if the IP address is billed and able to send email. This parameter applies to non-Twilio SendGrid APIs that been added to your Twilio SendGrid account. This parameter's value is `null` for Twilio SendGrid IP addresses."
    },
    "IPAddressManagement_is_parent_assigned": {
        "name": "is_parent_assigned",
        "in": "query",
        "required": false,
        "schema": {
            "type": "boolean"
        },
        "description": "Indicates if a parent on the account is able to send email from the IP address. When set to `true`, only enabled IP addresses will be returned."
    },
    "IPAddressManagement_pool": {
        "name": "pool",
        "in": "query",
        "required": false,
        "schema": {
            "type": "string"
        },
        "description": "Specifies the unique ID for an IP Pool. When included, only IP addresses belonging to the specified Pool will be returned."
    },
    "IPAddressManagement_start_added_at": {
        "name": "start_added_at",
        "in": "query",
        "required": false,
        "schema": {
            "type": "integer"
        },
        "description": "The `start_added_at` and `end_added_at` parameters are used to set a time window. IP addresses that were added to your account in the specified time window will be returned. The `start_added_at` parameter sets the beginning of the time window."
    },
    "IPAddressManagement_end_added_at": {
        "name": "end_added_at",
        "in": "query",
        "required": false,
        "schema": {
            "type": "integer"
        },
        "description": "The `start_added_at` and `end_added_at` parameters are used to set a time window. IP addresses that were added to your account in the specified time window will be returned. The `start_added_at` parameter sets the end of the time window."
    },
    "EventWebhook_RequestID": {
        "name": "id",
        "in": "path",
        "description": "The ID of the Event Webhook you want to retrieve.",
        "required": true,
        "schema": {
            "type": "string"
        },
        "examples": {
            "ID Example": {
                "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
            }
        }
    }
}
