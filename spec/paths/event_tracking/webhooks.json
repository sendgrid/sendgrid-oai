{
    "user_webhooks_event_settings": {
        "post": {
            "operationId": "POST-webhooks-event-settings",
            "summary": "Create a new Event Webhook",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to create a new Event Webhook.**\n\nWhen creating a webhook, you will provide a URL where you want the webhook to POST events, and you will select which events you want to receive. See the \"[Event Webhook Reference](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events)\" for details about each event.\n\n### Webhook identifiers\n\nWhen your webhook is succesfully created, you will receive a webhook `id` in the response returned by this endpoint. You can use that ID to [update the webhook's settings](https://docs.sendgrid.com/api-reference/webhooks/update-event-notification-settings), [delete the webhook](#), [enable or disable signature verification for the webhook](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events), and [retrieve the webhook's public key](https://docs.sendgrid.com/api-reference/webhooks/retrieve-signed-webhook-public-key) when signature verification is enabled.\n\nYou may also assign an optional friendly name to each of your webhooks. The friendly name is for convenience only and should not be used to programmatically differentiate your webhooks because it does not need to be unique. Use the webhook ID to reliably differentiate among your webhooks.\n\n### Signature verification\n\nEnabling signature verification for your webhook is a separate process and cannot be done at the time of creation with this endpoint. You can use the webhook ID to [enable or disable signature verification with the endpoint dedicated for that operation](https://docs.sendgrid.com/api-reference/webhooks/enable-disable-signed-webhook).\n\n### OAuth\n\nYou may share one OAuth configuration across all your webhooks or create unique credentials for each.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "../../components/schemas.json#/event-webhook-requestBody"
                        },
                        "examples": {
                            "Request With OAuth Configured": {
                                "summary": "POST request body to create an Event Webhook with OAuth configured.",
                                "value": {
                                    "enabled": true,
                                    "url": "https://example.com/webhook-endpoint",
                                    "group_resubscribe": true,
                                    "delivered": false,
                                    "group_unsubscribe": true,
                                    "spam_report": true,
                                    "bounce": true,
                                    "deferred": true,
                                    "unsubscribe": true,
                                    "processed": false,
                                    "open": true,
                                    "click": true,
                                    "dropped": true,
                                    "friendly_name": "Enagement Webhook",
                                    "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                    "oauth_client_secret": "335a9b0c65324fd2a62e2953d4b158",
                                    "oauth_token_url": "https://oauthservice.example.com"
                                }
                            },
                            "Request Without OAuth Configured": {
                                "summary": "POST request body to create an Event Webhook without OAuth configured.",
                                "value": {
                                    "enabled": true,
                                    "url": "https://example.com/webhook-endpoint",
                                    "group_resubscribe": true,
                                    "delivered": false,
                                    "group_unsubscribe": true,
                                    "spam_report": true,
                                    "bounce": true,
                                    "deferred": true,
                                    "unsubscribe": true,
                                    "processed": false,
                                    "open": true,
                                    "click": true,
                                    "dropped": true,
                                    "friendly_name": ""
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/event-webhook-unsigned-responseBody"
                            },
                            "examples": {
                                "Success With OAuth Configured": {
                                    "summary": "Success response body for a webhook with OAuth configured.",
                                    "value": {
                                        "enabled": true,
                                        "url": "https://example.com/webhook-endpoint",
                                        "group_resubscribe": true,
                                        "delivered": false,
                                        "group_unsubscribe": true,
                                        "spam_report": true,
                                        "bounce": true,
                                        "deferred": true,
                                        "unsubscribe": true,
                                        "processed": false,
                                        "open": true,
                                        "click": true,
                                        "dropped": true,
                                        "friendly_name": "Enagement Webhook",
                                        "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                        "oauth_token_url": "https://oauthservice.example.com",
                                        "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                        "created_date": "2023-01-01T12:00:00Z",
                                        "updated_date": "2023-02-15T10:00:00Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Bad request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Bad URL": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "'https://example.com' is not a valid url"
                                            }
                                        ]
                                    }
                                },
                                "Exists": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Webhook at 'https://example.com' already exists. Please provide a unique URL."
                                            }
                                        ]
                                    }
                                },
                                "Max webhooks reached": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "You have reached the maximum number of webhooks per your current billing plan."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_event_settings_all": {
        "get": {
            "operationId": "GET_user-webhooks-event-settings-all",
            "summary": "Retrieve all of your Event Webhooks.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to retrieve all of your Event Webhooks.**\n\nEach webhook will be returned as an object in the `webhooks` array with the webhook's configuration details and ID. You can use a webhook's ID to [update the webhook's settings](https://docs.sendgrid.com/api-reference/webhooks/update-event-notification-settings), [delete the webhook](#), [enable or disable signature verification for the webhook](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events), and [retrieve the webhook's public key](https://docs.sendgrid.com/api-reference/webhooks/retrieve-signed-webhook-public-key) when signature verification is enabled.\n\n###Event settings\n\nEach webhook's settings include the events that will be POSTed by the webhook and the URL where they will be sent. See the \"[Event Webhook Reference](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events)\" for details about each event.\n\n### Signature verification\n\nThe `public_key` property will be returned only for webhooks with signature verification enabled.\n\n### OAuth\n\nYou may share one OAuth configuration across all your webhooks or create unique credentials for each. The OAuth properties will be returned only for webhooks with OAuth configured.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "responses": {
                "200": {
                    "description": "Success",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/event-webhook-all-responseBody"
                            },
                            "examples": {
                                "Two Webhooks": {
                                    "value": {
                                        "max_allowed": 5,
                                        "webhooks": [
                                            {
                                                "enabled": true,
                                                "url": "https://emailengagment.example.com",
                                                "group_resubscribe": true,
                                                "delivered": true,
                                                "group_unsubscribe": true,
                                                "spam_report": true,
                                                "bounce": true,
                                                "deferred": true,
                                                "unsubscribe": true,
                                                "processed": false,
                                                "open": true,
                                                "click": true,
                                                "dropped": true,
                                                "friendly_name": "Engagment Webhook",
                                                "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                                "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                                "oauth_token_url": "https://oauthservice.example.com",
                                                "public_key": "123publickeyabc",
                                                "created_date": "2023-01-01T12:00:00Z",
                                                "updated_date": "2023-02-15T10:00:00Z"
                                            },
                                            {
                                                "enabled": true,
                                                "url": "https://emaildelivery.example.com",
                                                "group_resubscribe": false,
                                                "delivered": true,
                                                "group_unsubscribe": false,
                                                "spam_report": false,
                                                "bounce": true,
                                                "deferred": true,
                                                "unsubscribe": false,
                                                "processed": true,
                                                "open": false,
                                                "click": false,
                                                "dropped": true,
                                                "friendly_name": "Delivery Webhook",
                                                "id": "77d4a5da-7015-11ed-a1eb-0242ac120003",
                                                "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                                "oauth_token_url": "https://oauthservice.example.com",
                                                "public_key": "123publickeydef",
                                                "created_date": "2023-01-01T12:00:00Z",
                                                "updated_date": "2023-02-15T10:00:00Z"
                                            }
                                        ]
                                    }
                                },
                                "Zero Webhooks": {
                                    "value": {
                                        "max_allowed": 5,
                                        "webhooks": [
                                            {}
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_event_settings_{id}": {
        "get": {
            "operationId": "GET_user-webhooks-event-settings_ID",
            "summary": "Retrieve settings for a specific Event Webhook.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to retrieve a specifc Event Webhook by ID.**\n\nIf you do not pass a webhook ID to this endpoint, it will return your oldest webhook by `created_date`. This means you can retrieve details about your only webhook if you do not have more than one available.\n\n### Event settings\n\nYour webhook will be returned with all of its settings, which include the events that will be POSTed by the webhook and the URL where they will be sent. If an event type is marked as `true`, the event webhook will send information about that event. See the \"[Event Webhook Reference](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events)\" for details about each event type.\n\n### Signature verification\n\nThe `public_key` property will be returned only for webhooks with signature verification enabled.\n\n### OAuth\n\nYou may share one OAuth configuration across all your webhooks or create unique credentials for each. The OAuth properties will be returned only for webhooks with OAuth configured.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "The ID of the Event Webhook you want to retrieve.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "examples": {
                        "ID Example": {
                            "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/event-webhook-signed-responseBody"
                            },
                            "examples": {
                                "One of Multiple Webhooks": {
                                    "value": {
                                        "enabled": true,
                                        "url": "https://emaildelivery.example.com",
                                        "group_resubscribe": false,
                                        "delivered": true,
                                        "group_unsubscribe": false,
                                        "spam_report": true,
                                        "bounce": true,
                                        "deferred": true,
                                        "unsubscribe": true,
                                        "processed": true,
                                        "open": true,
                                        "click": true,
                                        "dropped": true,
                                        "friendly_name": "Delivery Webhook",
                                        "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                        "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                        "oauth_token_url": "https://oauthservice.example.com",
                                        "public_key": "123publickeyabc",
                                        "created_at": "2023-01-01T12:00:00Z",
                                        "updated_at": "2023-02-15T10:00:00Z"
                                    }
                                },
                                "One of One Webhooks": {
                                    "value": {
                                        "enabled": true,
                                        "url": "https://emaildelivery.example.com",
                                        "group_resubscribe": false,
                                        "delivered": true,
                                        "group_unsubscribe": false,
                                        "spam_report": true,
                                        "bounce": true,
                                        "deferred": true,
                                        "unsubscribe": true,
                                        "processed": true,
                                        "open": true,
                                        "click": true,
                                        "dropped": true,
                                        "oauth_client_id": "a835e7210bbb47edbfa71bdfc909b2d7",
                                        "oauth_token_url": "https://oauthservice.example.com",
                                        "public_key": "123publickeyabc"
                                    }
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Not found": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Invalid id provided."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "patch": {
            "operationId": "PATCH_user-webhooks-event-settings_ID",
            "summary": "Update a specific Event Webhook by ID.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to update a specifc Event Webhook by ID.**\n\nIf you do not pass a webhook ID to this endpoint, it will update and return your oldest webhook by `created_date`. This means you can update your only webhook's settings if you do not have more than one available. If you have multiple webhooks, you can retrieve their IDs using the \"[Get All Event Webhooks](#)\" endpoint.\n\n### Enable or disable the webhook\n\nYou can set the `enabled` property to `true` to enable the webhook or `false` to disable it. Disabling a webhook will not delete it from your account, but it will prevent the webhook from sending events to your designated URL.\n\n###URL\n\nA webhook's URL is the endpoint where you want the webhook to POST events. No more than one webhook may be configured to send to the same URL. SendGrid will return an error if you attempt to set a URL for a webhook that is already in use by the user on another webhook.\n\n### Event settings\n\nIf an event type is marked as `true`, the event webhook will send information about that event. See the \"[Event Webhook Reference](https://docs.sendgrid.com/for-developers/tracking-events/event#delivery-events)\" for details about each event type.\n\n### Webhook identifiers\n\nYou may assign an optional friendly name to each of your webhooks. The friendly name is for convenience only and should not be used to programmatically differentiate your webhooks because it does not need to be unique.\n\n### OAuth\n\nYou can configure OAuth for your webhook by passing the required values to this endpoint in the `oauth_client_id`, `oauth_client_secret`, and `oauth_token_url` properties. To disable OAuth, pass an empty string to this endpoint for each of the OAuth properties. You may share one OAuth configuration across all your webhooks or create unique credentials for each. See our [webhook security documentation](https://docs.sendgrid.com/for-developers/tracking-events/getting-started-event-webhook-security-features#oauth-20) for more detailed information about OAuth and the Event Webhook.\n\n### Signature verification\n\nEnabling signature verification for your webhook is a separate process and cannot be done with this endpoint. You can use the webhook ID to [enable or disable signature verification with the endpoint dedicated for that operation](https://docs.sendgrid.com/api-reference/webhooks/enable-disable-signed-webhook).",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "The ID of the Event Webhook you want to retrieve.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "examples": {
                        "ID Example": {
                            "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
                        }
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "../../components/schemas.json#/event-webhook-requestBody"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/event-webhook-unsigned-responseBody"
                            },
                            "examples": {
                                "response": {
                                    "value": {
                                        "enabled": true,
                                        "url": "mollit laborum",
                                        "group_resubscribe": false,
                                        "delivered": true,
                                        "group_unsubscribe": true,
                                        "spam_report": true,
                                        "bounce": true,
                                        "deferred": true,
                                        "unsubscribe": true,
                                        "processed": true,
                                        "open": true,
                                        "click": false,
                                        "dropped": true,
                                        "oauth_client_id": "anim sunt",
                                        "oauth_token_url": "ex"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Bad request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Account Change": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "This webhook cannot be modified based on your current billing plan."
                                            }
                                        ]
                                    }
                                },
                                "Exists": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Webhook at '<url>' already exists. Please provide a unique URL."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Invalid ID": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Invalid ID provided."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "delete": {
            "operationId": "DELETE-webhooks-event-settings_ID",
            "summary": "Delete a specific Event Webhook.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to delete a specific Event Webhook by ID.**\n\nUnlike the \"[Get a Specific Event Webhook](#)\" and \"[Update a Specific Webhook](#)\" endpoints, you must pass an ID to this endpoint or SendGrid will return an error. This behavior prevents customers from unintentionally deleting a webhook. You can retrieve your webhooks' IDs using the \"[Get All Event Webhooks](#)\" endpoint.\n\n### Enable or disable the webhook\n\nThis endpoint will permanently delete the webhook you specify. If you instead want to disable a webhook, you can set the `enabled` property to `false` with the \"[Update a Specific Webhook](#)\" endpoint.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "The ID of the Event Webhook you want to retrieve.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "examples": {
                        "ID Example": {
                            "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
                        }
                    }
                }
            ],
            "responses": {
                "204": {
                    "description": "No Content"
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Not found": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Invalid id provided."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_event_settings_signed_{id}": {
        "get": {
            "operationId": "GET_user-webhooks-event-settings-signed-id",
            "summary": "Retrieve the public key for a specific signed Event Webhook by ID.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to retrieve the public key for a specific Event Webhook by ID.**\n\nIf you do not pass a webhook ID to this endpoint, it will return the public key for your oldest webhook by `created_date`. This means you can retrieve a public key for your only webhook if you do not have more than one available. If you have multiple webhooks, you can retrieve their IDs using the \"[Get All Event Webhooks](#)\" endpoint.\n\nOnce you have enabled signature verification for a webhook, you will need the public key provided to verify the signatures on requests coming from Twilio SendGrid. You can use the webhook ID to [enable or disable signature verification with the endpoint dedicated for that operation](https://docs.sendgrid.com/api-reference/webhooks/enable-disable-signed-webhook).\n\nFor more information about cryptographically signing the Event Webhook, see \"[Getting Started with the Event Webhook Security Features](https://sendgrid.com/docs/for-developers/tracking-events/getting-started-event-webhook-security-features).\"",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "The ID of the Event Webhook you want to retrieve.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "examples": {
                        "ID Example": {
                            "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Success",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "A unique string used to identify the webhook. A webhook's ID is generated programmatically and cannot be changed after creation. You can assign a natural language identifier to your webhook using the `friendly_name` property."
                                    },
                                    "public_key": {
                                        "type": "string",
                                        "description": "The public key you can use to verify the Twilio SendGrid signature."
                                    }
                                }
                            },
                            "examples": {
                                "No ID": {
                                    "value": {
                                        "id": "",
                                        "public_key": "123publickeyabc"
                                    }
                                },
                                "ID": {
                                    "value": {
                                        "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                        "public_key": "123publickeyabc"
                                    }
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Not found": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Invalid id provided."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "patch": {
            "operationId": "PATCH_user-webhooks-event-settings-signed-ID",
            "summary": "Toggle signature verifitication  for a specific Event Webhook",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to enable or disable signature verification for a specific Event Webhook by ID.**\n\nIf you do not pass a webhook ID to this endpoint, it will enable signature verification for your oldest webhook by `created_date`. This means you can enable signing for your only webhook if you do not have more than one available. If you have multiple webhooks, you can retrieve their IDs using the \"[Get All Event Webhooks](#)\" endpoint.\n\nThis endpoint accepts a single boolean request property, `enabled`, that can be set `true` or `false` to enable or disable signature verification. This endpoint will return the public key required to verify Twilio SendGrid signatures if it is enabled or an empty string if signing is disabled. You can also retrieve your public key using the \"[Get a Specific Event Webhook's Public Key](#)\" endpoint.\n\nFor more information about cryptographically signing the Event Webhook, see \"[Getting Started with the Event Webhook Security Features](https://sendgrid.com/docs/for-developers/tracking-events/getting-started-event-webhook-security-features).\"",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "The ID of the Event Webhook you want to retrieve.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "examples": {
                        "ID Example": {
                            "value": "77d4a5da-7015-11ed-a1eb-0242ac120002"
                        }
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable or disable the webhook by setting this property to `true` or `false`, respectively."
                                }
                            },
                            "required": [
                                "enabled"
                            ],
                            "examples": {
                                "value": {
                                    "enabled": true
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "A unique string used to identify the webhook. A webhook's ID is generated programmatically and cannot be changed after creation. You can assign a natural language identifier to your webhook using the `friendly_name` property."
                                    },
                                    "public_key": {
                                        "type": "string",
                                        "description": "The public key you can use to verify the Twilio SendGrid signature."
                                    }
                                }
                            },
                            "examples": {
                                "Enabled": {
                                    "value": {
                                        "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                        "public_key": "123publickeyabc"
                                    }
                                },
                                "Disabled": {
                                    "value": {
                                        "id": "77d4a5da-7015-11ed-a1eb-0242ac120002",
                                        "public_key": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "Error message."
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Not found": {
                                    "value": {
                                        "errors": [
                                            {
                                                "message": "Invalid id provided."
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_event_test": {
        "post": {
            "operationId": "POST_user-webhooks-event-test",
            "summary": "Test Event Notification Settings",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to test your event webhook by sending a fake event notification post to the provided URL.**\n\nSendGrid\u2019s Event Webhook will notify a URL of your choice via HTTP POST with information about events that occur as SendGrid processes your email.\n\nCommon uses of this data are to remove unsubscribes, react to spam reports, determine unengaged recipients, identify bounced email addresses, or create advanced analytics of your email program.\n\n>**Tip**: Retry logic for this endpoint differs from other endpoints, which use a rolling 24-hour retry.\n\nIf your web server does not return a 2xx response type, we will retry a POST request until we receive a 2xx response or the maximum time of 10 minutes has expired.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "The ID of the Event Webhook you want to retrieve."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The URL where you would like the test notification to be sent."
                                },
                                "oauth_client_id": {
                                    "type": "string",
                                    "description": "The client ID Twilio SendGrid sends to your OAuth server or service provider to generate an OAuth access token. When passing data in this field, you must also include the oauth_client_secret and oauth_token_url fields."
                                },
                                "oauth_client_secret": {
                                    "type": "string",
                                    "description": "This secret is needed only once to create an access token. SendGrid will store this secret, allowing you to update your Client ID and Token URL without passing the secret to SendGrid again.  When passing data in this field, you must also include the oauth_client_id and oauth_token_url fields."
                                },
                                "oauth_token_url": {
                                    "type": "string",
                                    "description": "The URL where Twilio SendGrid sends the Client ID and Client Secret to generate an access token. This should be your OAuth server or service provider.  When passing data in this field, you must also include the oauth_client_id and oauth_client_secret fields."
                                }
                            },
                            "example": {
                                "url": "mollit non ipsum magna",
                                "oauth_client_id": "nisi",
                                "oauth_client_secret": "veniam commodo ex sunt",
                                "oauth_token_url": "dolor Duis"
                            }
                        }
                    }
                }
            },
            "responses": {
                "204": {
                    "description": ""
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_parse_settings": {
        "get": {
            "operationId": "GET_user-webhooks-parse-settings",
            "summary": "Retrieve all parse settings",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to retrieve all of your current inbound parse settings.**",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "description": "The list of your current inbound parse settings.",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/parse-setting"
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "response": {
                                    "value": {
                                        "result": [
                                            {
                                                "url": "http://mydomain.com/parse",
                                                "hostname": "mail.mydomain.com",
                                                "spam_check": true,
                                                "send_raw": true
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "post": {
            "operationId": "POST_user-webhooks-parse-settings",
            "summary": "Create a parse setting",
            "tags": [
                "Settings - Inbound Parse"
            ],
            "description": "**This endpoint allows you to create a new inbound parse setting.**\n\nCreating an Inbound Parse setting requires two pieces of information: a `url` and a `hostname`.\n\nThe `hostname` must correspond to a domain authenticated by Twilio SendGrid on your account. If you need to complete domain authentication, you can use the [Twilio SendGrid App](https://app.sendgrid.com/settings/sender_auth) or the \"Authenticate a domain\" endpoint. See \"[How to Set Up Domain Authentication](https://sendgrid.com/docs/ui/account-and-settings/how-to-set-up-domain-authentication/)\" for instructions.\n\nAny email received by the `hostname` will be parsed when you complete this setup. You must also add a Twilio SendGrid MX record to this domain's DNS records. See \"[Setting up the Inbound Parse Webhook](https://sendgrid.com/docs/for-developers/parsing-email/setting-up-the-inbound-parse-webhook/)\" for full instructions.\n\nThe `url` represents a location where the parsed message data will be delivered. Twilio SendGrid will make an HTTP POST request to this `url` with the message data. The `url` must be publicly reachable, and your application must return a `200` status code to signal that the message data has been received.",
            "parameters": [
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "requestBody": {
                "$ref": "../../components/requestBodies.json#/parse-setting"
            },
            "responses": {
                "201": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/parse-setting"
                            },
                            "examples": {
                                "response": {
                                    "value": {
                                        "url": "http://email.myhostname.com",
                                        "hostname": "myhostname.com",
                                        "spam_check": false,
                                        "send_raw": true
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "user_webhooks_parse_stats": {
        "get": {
            "operationId": "GET_user-webhooks-parse-stats",
            "summary": "Retrieves Inbound Parse Webhook statistics.",
            "tags": [
                "Webhooks"
            ],
            "description": "**This endpoint allows you to retrieve the statistics for your Parse Webhook useage.**\n\nSendGrid's Inbound Parse Webhook allows you to parse the contents and attachments of incomming emails. The Parse API can then POST the parsed emails to a URL that you specify. The Inbound Parse Webhook cannot parse messages greater than 30MB in size, including all attachments.\n\nThere are a number of pre-made integrations for the SendGrid Parse Webhook which make processing events easy. You can find these integrations in the [Library Index](https://sendgrid.com/docs/Integrate/libraries.html#-Webhook-Libraries).",
            "parameters": [
                {
                    "name": "limit",
                    "in": "query",
                    "description": "The number of statistics to return on each page.",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "offset",
                    "in": "query",
                    "description": "The number of statistics to skip.",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "aggregated_by",
                    "in": "query",
                    "description": "How you would like the statistics to by grouped. ",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ]
                    }
                },
                {
                    "name": "start_date",
                    "in": "query",
                    "description": "The starting date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "end_date",
                    "in": "query",
                    "description": "The end date of the statistics you want to retrieve. Must be in the format YYYY-MM-DD",
                    "required": false,
                    "schema": {
                        "type": "string",
                        "default": "The day the request is made."
                    }
                },
                {
                    "$ref": "../../components/parameters.json#/trait_onBehalfOfSubuser_on-behalf-of"
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "date": {
                                            "type": "string",
                                            "description": "The date that the stats were collected."
                                        },
                                        "stats": {
                                            "type": "array",
                                            "description": "The Parse Webhook usage statistics.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "metrics": {
                                                        "type": "object",
                                                        "properties": {
                                                            "received": {
                                                                "type": "number",
                                                                "description": "The number of emails received and parsed by the Parse Webhook."
                                                            }
                                                        },
                                                        "required": [
                                                            "received"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "date",
                                        "stats"
                                    ]
                                }
                            },
                            "examples": {
                                "response": {
                                    "value": [
                                        {
                                            "date": "2015-10-11",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-12",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-13",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-14",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-15",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-16",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-17",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-18",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-19",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-20",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-21",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-22",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-23",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-24",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-25",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-26",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-27",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-28",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-29",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-30",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-10-31",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-01",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-02",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-03",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-04",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-05",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-06",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-07",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-08",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-09",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "date": "2015-11-10",
                                            "stats": [
                                                {
                                                    "metrics": {
                                                        "received": 0
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    }
}
