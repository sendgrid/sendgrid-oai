{
    "marketing_contacts": {
        "put": {
            "operationId": "PUT_mc-contacts",
            "summary": "Add or Update a Contact",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint allows the [upsert](https://en.wiktionary.org/wiki/upsert) (insert or update) of up to 30,000 contacts, or 6MB of data, whichever is lower**. \n\nBecause the creation and update of contacts is an asynchronous process, the response will not contain immediate feedback on the processing of your upserted contacts. Rather, it will contain an HTTP 202 response indicating the contacts are queued for processing or an HTTP 4XX error containing validation errors. Should you wish to get the resulting contact's ID or confirm your contacts have been updated or added, you can use the \"Get Contacts by Emails\" endpoint. \n\nPlease note that custom fields need to have been already created if you wish to set their values for the contacts being upserted. To do this, please use the \"Create Custom Field Definition\" endpoint.\n\nYou will see a `job_id` in the response to your request. This can be used to check the status of your upsert job. To do so, please use the \"Import Contacts Status\" endpoint.\n\nIf the contact already exists in the system, any entries submitted via this endpoint will update the existing contact. The contact to update will be determined only by the `email` field and any fields omitted from the request will remain as they were. A contact's ID cannot be used to update the contact.\n\nThe email field will be changed to all lower-case. If a contact is added with an email that exists but contains capital letters, the existing contact with the all lower-case email will be updated.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "list_ids": {
                                    "type": "array",
                                    "description": "An array of List ID strings that this contact will be added to.",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "contacts": {
                                    "type": "array",
                                    "description": "One or more contacts objects that you intend to upsert. The available fields for a contact, including the required `email` field are described below.",
                                    "minItems": 1,
                                    "maxItems": 30000,
                                    "items": {
                                        "$ref": "../../components/schemas.json#/contact-request"
                                    }
                                }
                            },
                            "required": [
                                "contacts"
                            ]
                        }
                    }
                }
            },
            "responses": {
                "202": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "type": "string",
                                        "description": "Indicates that the contacts are queued for processing. Check the job status with the \"Import Contacts Status\" endpoint."
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "delete": {
            "operationId": "DELETE_mc-contacts",
            "summary": "Delete Contacts",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint can be used to delete one or more contacts**.\n\nThe query parameter `ids` must set to a comma-separated list of contact IDs for bulk contact deletion.\n\nThe query parameter `delete_all_contacts` must be set to `\"true\"` to delete **all** contacts. \n\nYou must set either `ids` or `delete_all_contacts`.\n\nDeletion jobs are processed asynchronously.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "parameters": [
                {
                    "name": "delete_all_contacts",
                    "in": "query",
                    "description": "Must be set to `\"true\"` to delete all contacts.",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "ids",
                    "in": "query",
                    "description": "A comma-separated list of contact IDs.",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "202": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "The deletion job has been accepted and is being processed.",
                                "properties": {
                                    "job_id": {
                                        "type": "object",
                                        "description": "The deletion job ID."
                                    }
                                },
                                "required": [
                                    "job_id"
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "required": [
                                    "errors"
                                ]
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "get": {
            "operationId": "GET_mc-contats",
            "summary": "Get Sample Contacts",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint will return up to 50 of the most recent contacts uploaded or attached to a list**. \n\nThis list will then be sorted by email address.\n\nThe full contact count is also returned.\n\nPlease note that pagination of the contacts has been deprecated.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/contact-details3"
                                        }
                                    },
                                    "_metadata": {
                                        "$ref": "../../components/schemas.json#/selfmetadata"
                                    },
                                    "contact_count": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_count": {
        "get": {
            "operationId": "GET_mc-contacts-count",
            "summary": "Get Total Contact Count",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint returns the total number of contacts you have stored.**\n\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contact_count": {
                                        "type": "integer",
                                        "description": "The total number of contacts."
                                    },
                                    "billable_count": {
                                        "type": "integer",
                                        "default": 0,
                                        "description": "The count of contacts this month for billing purposes.",
                                        "minimum": 0
                                    },
                                    "billable_breakdown": {
                                        "type": "object",
                                        "description": "`billable_breakdown` will only appear to the parent user in an account with subusers.",
                                        "properties": {
                                            "total": {
                                                "type": "integer",
                                                "description": "The sum of all the subuser's billable contacts"
                                            },
                                            "breakdown": {
                                                "type": "object",
                                                "description": "A map of each subuser's billable contact usage. Each key is the subuser's ID and each value is the usage thus far this month.",
                                                "minProperties": 0
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "contact_count"
                                ]
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_{id}": {
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        ],
        "get": {
            "operationId": "GET_mc-contacts-id",
            "summary": "Get a Contact by ID",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint returns the full details and all fields for the specified contact**.\n\nThe \"Get Contacts by Emails\" endpoint can be used to get the ID of a contact.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/contact-details3"
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "description": ""
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_search": {
        "post": {
            "operationId": "POST_mc-contacts-search",
            "summary": "Search Contacts",
            "tags": [
                "Contacts"
            ],
            "description": "**Use this endpoint to locate contacts**.\n\nThe request body's `query` field accepts valid [SGQL](https://sendgrid.com/docs/for-developers/sending-email/segmentation-query-language/) for searching for a contact.\n\nBecause contact emails are stored in lower case, using SGQL to search by email address requires the provided email address to be in lower case. The SGQL `lower()` function can be used for this.\n\nOnly the first 50 contacts that meet the search criteria will be returned.\n\nIf the query takes longer than 20 seconds, a `408 Request Timeout` status will be returned.\n\nFormatting the `created_at` and `updated_at` values as Unix timestamps is deprecated. Instead they are returned as ISO format as string.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "query": {
                                    "type": "string",
                                    "description": "An SGQL search string or other pattern."
                                }
                            },
                            "required": [
                                "query"
                            ],
                            "example": {
                                "query": "email LIKE 'ENTER_COMPLETE_OR_PARTIAL_EMAIL_ADDRESS_HERE%' AND CONTAINS(list_ids, 'YOUR_LIST_IDs')"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/contact-details3"
                                        }
                                    },
                                    "_metadata": {
                                        "$ref": "../../components/schemas.json#/selfmetadata"
                                    },
                                    "contact_count": {
                                        "type": "number",
                                        "description": "The total number of contacts matched."
                                    }
                                },
                                "required": [
                                    "contact_count"
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "408": {
                    "description": ""
                },
                "500": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_imports": {
        "put": {
            "operationId": "PUT_mc-contacts-imports",
            "summary": "Import Contacts",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint allows a CSV upload containing up to one million contacts or 5GB of data, whichever is smaller.**\n\nImports take place asynchronously: the endpoint returns a URL (`upload_uri`) and HTTP headers (`upload_headers`) which can subsequently be used to `PUT` a file of contacts to be  imported into our system.\n\nUploaded CSV files may also be [gzip-compressed](https://en.wikipedia.org/wiki/Gzip).\n\nIn either case, you must include the field `file_type` with the value `csv` in your request body.\n\nThe `field_mappings` paramter is a respective list of field definition IDs to map the uploaded CSV columns to. It allows you to use CSVs where one or more columns are skipped (`null`) or remapped to the contact field. \n\nFor example, if `field_mappings` is set to `[null, \"w1\", \"_rf1\"]`, this means skip column 0, map column 1 to the custom field with the ID `w1`, and map column 2 to the reserved field with the ID `_rf1`. See the \"Get All Field Definitions\" endpoint to fetch your custom and reserved field IDs to use with `field_mappings`.\n\nOnce you recieve the response body you can then initiate a **second** API call where you use the supplied URL and HTTP header to upload your file. For example:\n\n`curl --upload-file \"file/path.csv\" \"URL_GIVEN\" -H 'HEADER_GIVEN'`\n\nIf you'd like to monitor the status of your import job, use the `job_id` and the \"Import Contacts Status\" endpoint.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "list_ids": {
                                    "type": "array",
                                    "description": "All contacts will be added to each of the specified lists.",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "file_type": {
                                    "type": "string",
                                    "enum": [
                                        "csv"
                                    ],
                                    "description": "Upload file type."
                                },
                                "field_mappings": {
                                    "type": "array",
                                    "description": "Import file header to reserved/custom field mapping.",
                                    "uniqueItems": false,
                                    "minItems": 1,
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "nullable": true
                                            }
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "file_type",
                                "field_mappings"
                            ]
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "type": "string",
                                        "description": "The ID of the import job."
                                    },
                                    "upload_uri": {
                                        "type": "string",
                                        "description": "The URI to PUT the upload file to."
                                    },
                                    "upload_headers": {
                                        "type": "array",
                                        "description": "A list of headers that must be included in PUT request.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "header": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "header",
                                                "value"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                },
                                "required": [
                                    "errors"
                                ]
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "If any of the specified lists do not exist.",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                },
                                "required": [
                                    "errors"
                                ]
                            }
                        }
                    }
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_imports_{id}": {
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        ],
        "get": {
            "operationId": "GET_marketing-contacts-imports-id",
            "summary": "Import Contacts Status",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint can be used to check the status of a contact import job**. \n\nUse the `job_id` from the \"Import Contacts,\" \"Add or Update a Contact,\" or \"Delete Contacts\" endpoints as the `id` in the path parameter.\n\nIf there is an error with your `PUT` request, download the `errors_url` file and open it to view more details.\n\nThe job `status` field indicates whether the job is `pending`, `completed`, `errored`, or `failed`. \n\nPending means not started. Completed means finished without any errors. Errored means finished with some errors. Failed means finshed with all errors, or the job was entirely unprocessable: for example, if you attempt to import file format we do not support.\n\nThe `results` object will have fields depending on the job type.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/contact-import"
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "$ref": "../../components/schemas.json#/error"
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_exports": {
        "post": {
            "operationId": "POST_mc-contacts-exports",
            "summary": "Export Contacts",
            "tags": [
                "Contacts"
            ],
            "description": "**Use this endpoint to export lists or segments of contacts**.\n\nIf you would just like to have a link to the exported list sent to your email set the `notifications.email` option to `true` in the `POST` payload.\n\nIf you would like to download the list, take the `id` that is returned and use the \"Export Contacts Status\" endpoint to get the `urls`. Once you have the list of URLs, make a `GET` request to each URL provided to download your CSV file(s).\n\nYou specify the segements and or/contact lists you wish to export by providing the relevant IDs in, respectively, the `segment_ids` and `list_ids` fields in the request body.\n\nThe lists will be provided in either JSON or CSV files. To specify which of these you would required, set the request body `file_type` field to `json` or `csv`.\n\nYou can also specify a maximum file size (in MB). If the export file is larger than this, it will be split into multiple files.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "list_ids": {
                                    "description": "IDs of the contact lists you want to export.",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "segment_ids": {
                                    "description": "IDs of the contact segments you want to export.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "notifications": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "file_type": {
                                    "type": "string",
                                    "enum": [
                                        "csv",
                                        "json"
                                    ],
                                    "description": "File type for export file. Choose from `json` or `csv`.",
                                    "default": "csv"
                                },
                                "max_file_size": {
                                    "description": "The maximum size of an export file in MB. Note that when this option is specified, multiple output files may be returned from the export.",
                                    "default": 5000,
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "202": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_metadata": {
                                        "$ref": "../../components/schemas.json#/metadata"
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The ID of the export job."
                                    }
                                },
                                "required": [
                                    "_metadata"
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        },
        "get": {
            "operationId": "GET_marketing-contacts-exports",
            "summary": "Get All Existing Exports",
            "tags": [
                "Contacts"
            ],
            "description": "**Use this endpoint to retrieve details of all current exported jobs**.\n\nIt will return an array of objects, each of which records an export job in flight or recently completed. \n\nEach object's `export_type` field will tell you which kind of export it is and its `status` field will indicate what stage of processing it has reached. Exports which are `ready` will be accompanied by a `urls` field which lists the URLs of the export's downloadable files \u2014 there will be more than one if you specified a maximum file size in your initial export request.\n\nUse this endpoint if you have exports in flight but do not know their IDs, which are required for the \"Export Contacts Status\" endpoint.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "Export jobs ID."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "Allowed values: `pending`, `ready`, or `failure`."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "description": "This ISO8601 timestamp when the export was created."
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "description": "This ISO8601 timestamp when the export was completed."
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "description": "This ISO8601 timestamp when the export expires."
                                                },
                                                "urls": {
                                                    "type": "array",
                                                    "description": "One or more download URLs for the contact file(s) if the status is `ready`.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "user_id": {
                                                    "type": "string",
                                                    "description": "User ID."
                                                },
                                                "export_type": {
                                                    "type": "string",
                                                    "description": "Allowed types: `contacts_export`, `list_export`, or `segment_export`."
                                                },
                                                "segments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ID": {
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "lists": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "ID": {
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "_metadata": {
                                                    "type": "object",
                                                    "properties": {
                                                        "prev": {
                                                            "type": "string"
                                                        },
                                                        "self": {
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "_metadata": {
                                        "type": "object",
                                        "properties": {
                                            "prev": {
                                                "type": "string"
                                            },
                                            "self": {
                                                "type": "string",
                                                "description": "Link to this page."
                                            },
                                            "next": {
                                                "type": "string",
                                                "description": "Link to next page."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "": {
                                                    "type": "string"
                                                },
                                                "error_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_exports_{id}": {
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        ],
        "get": {
            "operationId": "GET_mc-contacts-exports-id",
            "summary": "Export Contacts Status",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint can be used to check the status of a contact export job**. \n\nTo use this call, you will need the `id` from the \"Export Contacts\" call.\n\nIf you would like to download a list, take the `id` that is returned from the \"Export Contacts\" endpoint and make an API request here to get the `urls`. Once you have the list of URLs, make a `GET` request on each URL to download your CSV file(s).\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/contact-export"
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_404"
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    },
    "marketing_contacts_batch": {
        "post": {
            "operationId": "POST_marketing-contacts-batch",
            "summary": "Get Batched Contacts by IDs",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint is used to retrieve a set of contacts identified by their IDs.**\n\nThis can be more efficient endpoint to get contacts than making a series of individual `GET` requests to the \"Get a Contact by ID\" endpoint.\n\nYou can supply up to 100 IDs. Pass them into the `ids` field in your request body as an array or one or more strings.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "Array of IDs",
                            "properties": {
                                "ids": {
                                    "maxItems": 100,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "ids"
                            ],
                            "example": {
                                "ids": [
                                    "1234",
                                    "1235"
                                ]
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "../../components/schemas.json#/contact-details3"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "500": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_500"
                }
            }
        }
    },
    "marketing_contacts_search_emails": {
        "post": {
            "operationId": "POST_marketing-contacts-search-emails",
            "summary": "Get Contacts by Emails",
            "tags": [
                "Contacts"
            ],
            "description": "**This endpoint allows you to retrieve up to 100 contacts matching the searched `email` address(es), including any `alternate_emails`.** \n\nEmail addresses are unique to a contact, meaning this endpoint can treat an email address as a primary key to search by. The contact object associated with the address, whether it is their `email` or one of their `alternate_emails` will be returned if matched.\n\nEmail addresses in the search request do not need to match the case in which they're stored, but the email addresses in the result will be all lower case. Empty strings are excluded from the search and will not be returned.\n\nThis endpoint should be used in place of the \"Search Contacts\" endpoint when you can provide exact email addresses and do not need to include other [Segmentation Query Language (SGQL)](https://sendgrid.com/docs/for-developers/sending-email/segmentation-query-language/) filters when searching.\n\nIf you need to access a large percentage of your contacts, we recommend exporting your contacts with the \"Export Contacts\" endpoint and filtering the results client side.\n\nThis endpoint returns a `200` status code when any contacts match the address(es) you supplied. When searching multiple addresses in a single request, it is possible that some addresses will match a contact while others will not. When a partially successful search like this is made, the matching contacts are returned in an object and an error message is returned for the email address(es) that are not found. \n\nThis endpoint returns a `404` status code when no contacts are found for the provided email address(es).\n\nA `400` status code is returned if any searched addresses are invalid.\n\nTwilio SendGrid recommends exporting your contacts regularly as a backup to avoid issues or lost data.",
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "description": "",
                            "properties": {
                                "emails": {
                                    "type": "array",
                                    "description": "One or more primary emails and/or alternate emails to search through your contacts for.",
                                    "items": {
                                        "type": "string",
                                        "maxLength": 100
                                    }
                                }
                            },
                            "required": [
                                "emails"
                            ],
                            "example": {
                                "emails": [
                                    "jane_doe@example.com",
                                    "john_doe@example.com",
                                    "joann_doe@example.com"
                                ]
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "result": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "patternProperties": {
                                            "^[A-Za-z0-9\\._%\\+-]+@[A-Za-z0-9\\.-]+\\.[A-Za-z]{2,6}$": {
                                                "type": "object",
                                                "description": "This will be one of the specified email adresses.",
                                                "properties": {
                                                    "contact": {
                                                        "$ref": "../../components/schemas.json#/contact-details3"
                                                    },
                                                    "error": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "response": {
                                    "value": {
                                        "result": {
                                            "jane_doe@example.com": {
                                                "contact": {
                                                    "address_line_1": "",
                                                    "address_line_2": "",
                                                    "alternate_emails": [
                                                        "janedoe@example1.com"
                                                    ],
                                                    "city": "",
                                                    "country": "",
                                                    "email": "jane_doe@example.com",
                                                    "first_name": "Jane",
                                                    "id": "asdf-Jkl-zxCvBNm",
                                                    "last_name": "Doe",
                                                    "list_ids": [],
                                                    "segment_ids": [],
                                                    "postal_code": "",
                                                    "state_province_region": "",
                                                    "phone_number": "",
                                                    "whatsapp": "",
                                                    "line": "",
                                                    "facebook": "",
                                                    "unique_name": "",
                                                    "custom_fields": {},
                                                    "created_at": "2021-03-02T15:25:47Z",
                                                    "updated_at": "2021-03-30T15:26:16Z",
                                                    "_metadata": {
                                                        "self": "<metadata_url>"
                                                    }
                                                }
                                            },
                                            "john_doe@example.com": {
                                                "contact": {
                                                    "address_line_1": "",
                                                    "address_line_2": "",
                                                    "alternate_emails": [],
                                                    "city": "",
                                                    "country": "",
                                                    "email": "john_doe@example.com",
                                                    "first_name": "Jane",
                                                    "id": "asdf-Jkl-qWeRTy",
                                                    "last_name": "Doe",
                                                    "list_ids": [],
                                                    "segment_ids": [],
                                                    "postal_code": "",
                                                    "state_province_region": "",
                                                    "phone_number": "",
                                                    "whatsapp": "",
                                                    "line": "",
                                                    "facebook": "",
                                                    "unique_name": "",
                                                    "custom_fields": {},
                                                    "created_at": "2020-01-02T15:25:47Z",
                                                    "updated_at": "2020-12-20T15:26:16Z",
                                                    "_metadata": {
                                                        "self": "<metadata_url>"
                                                    }
                                                }
                                            },
                                            "joann_doe@example.com": {
                                                "error": "contact not found"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/global_error_response_schema"
                            }
                        }
                    }
                },
                "401": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_401"
                },
                "403": {
                    "$ref": "../../components/responses.json#/trait_globalErrors_403"
                },
                "404": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "../../components/schemas.json#/global_error_response_schema"
                            }
                        }
                    }
                },
                "500": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "security": [
                {
                    "Authorization": []
                }
            ]
        }
    }
}
